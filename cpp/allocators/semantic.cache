;; Object semantic.cache
;; SEMANTICDB Tags save file
(semanticdb-project-database "semantic.cache"
  :file "semantic.cache"
  :tables (list 
   (semanticdb-table "main.cpp"
    :file "main.cpp"
    :pointmax 3853
    :major-mode 'c++-mode
    :tokens '(("pool_allocator.h" include nil nil nil [1 28]) ("ss_allocator.h" include nil nil nil [29 54]) ("vector" include t nil nil [55 72]) ("iostream" include t nil nil [73 92]) ("algorithm" include t nil nil [93 113]) ("timer.h" include nil nil nil [114 132]) ("string" include t nil nil [133 150]) ("ctime" include t nil nil [151 167]) ("blockallocator.h" include nil nil nil [168 195]) ("dum_allocator.h" include nil nil nil [196 222]) ("size" variable "int" "1000" ((const . t)) nil nil [246 268]) ("foo" type "struct" (("_40K" variable "int" nil ((dereference . 1)) nil nil [549 567]) ("i_" variable "int" nil nil nil nil [570 577]) ("foo" function "int" (("i" variable "int" "0" nil nil nil [584 591])) nil nil ((reparse-symbol . classsubparts)) [580 705]) ("foo" function "void" nil ((destructor . t)) nil ((reparse-symbol . classsubparts)) [708 721]) ("<" function ("bool" type "class") (("other" variable ("foo" type "class") nil ((const . t)) nil nil [740 757])) nil nil ((reparse-symbol . classsubparts)) [724 783])) nil nil nil nil [534 786]) ("generator" function ("foo" type "class") nil nil nil nil [788 898]) ("main" function ("int") nil nil nil nil [902 3850]))
    :unmatched-syntax 'nil
    )
   (semanticdb-table "pool.h"
    :file "pool.h"
    :pointmax 4307
    :major-mode 'c++-mode
    :tokens '(("POOL_H_INCLUDED_GF" variable nil nil ((const . t)) nil nil [28 71]) ("exception" include t nil nil [217 237]) ("list" include t nil nil [238 253]) ("algorithm" include t nil nil [254 274]) ("iostream" include t nil nil [275 294]) ("pool" type "class" (("logic_error" type "class" (("public" label ((reparse-symbol . classsubparts)) [372 379]) ("logic_error" function ("logic_error" type "class") (("what" variable "char" nil ((const . t) (pointer . 1)) nil nil [396 413])) ((constructor . t)) nil ((reparse-symbol . classsubparts)) [384 427]) ("what" function ("char") nil ((const . t) (pointer . 1)) nil ((reparse-symbol . classsubparts)) [432 465]) ("private" label ((reparse-symbol . classsubparts)) [468 476]) ("what_" variable "char" nil ((const . t) (pointer . 1)) nil nil [481 499])) (("std::exception")) nil nil ((reparse-symbol . classsubparts)) [326 504]) ("pool_defaults" type "enum" (("init_size" variable "int" (543 551) ((const . t)) nil ((reparse-symbol . enumsubparts)) [531 551]) ("min_size" variable "int" (568 571) ((const . t)) nil ((reparse-symbol . enumsubparts)) [557 571])) nil nil nil ((reparse-symbol . classsubparts)) [507 576]) ("public" label ((reparse-symbol . classsubparts)) [577 584]) ("pool" function ("pool" type "class") (("size" variable ("size_t" type "class") "init_size)" nil nil nil [592 616])) ((constructor . t)) nil ((reparse-symbol . classsubparts)) [587 957]) ("pool" function "void" nil ((destructor . t)) nil ((reparse-symbol . classsubparts)) [961 1054]) ("allocate" function ("void") (("size" variable ("size_t" type "class") nil nil nil nil [1074 1086])) ((pointer . 1)) nil ((reparse-symbol . classsubparts)) [1059 2212]) ("deallocate" function ("void") (("p" variable "void" nil ((pointer . 1)) nil nil [2232 2240]) ("" variable ("size_t" type "class") nil nil nil nil [2241 2249])) nil nil ((reparse-symbol . classsubparts)) [2216 3183]) ("dump" function ("void") nil nil nil ((reparse-symbol . classsubparts)) [3186 3455]) ("private" label ((reparse-symbol . classsubparts)) [3456 3464]) ("size_" variable ("size_t" type "class") nil nil nil nil [3467 3480]) ("pool_mem_" variable "int" nil nil nil nil [3501 3511]) ("prev_" variable ("block" type "class") nil ((pointer . 1)) nil nil [3532 3545]) ("next_" variable ("block" type "class") nil ((pointer . 1)) nil nil [3550 3563]) ("size_" variable ("size_t" type "class") nil nil nil nil [3568 3581]) ("free_" variable "int" nil nil nil nil [3586 3596]) ("block" function "int" (("prev" variable ("block" type "class") nil ((pointer . 1)) nil nil [3607 3619]) ("next" variable ("block" type "class") nil ((pointer . 1)) nil nil [3620 3632]) ("size" variable ("size_t" type "class") nil nil nil nil [3633 3645]) ("free" variable "int" nil nil nil nil [3646 3655])) nil nil ((reparse-symbol . classsubparts)) [3601 3719]) ("block" function "void" nil ((destructor . t)) nil ((reparse-symbol . classsubparts)) [3724 3734]) ("blocks_" variable ("block" type "class") nil ((pointer . 1)) nil nil [3742 3758]) ("()" function ("void") (("p" variable "char" nil ((pointer . 1)) nil nil [3855 3863])) nil nil ((reparse-symbol . classsubparts)) [3839 3877]) ("p" variable "int" nil nil nil nil [3923 3925]) ("new_block" variable ("block" type "class") nil ((pointer . 1)) nil nil [3961 3978]) ("push_back" function "int" (("" variable ("p" type "class") nil nil nil nil [4038 4040])) ((prototype . t)) nil ((reparse-symbol . classsubparts)) [4028 4041]) ("new_block" variable "int" "reinterpret_cast<block*>(p)" nil nil nil [4048 4088]) ("prev_" variable "int" "b;" nil nil nil [4106 4115]) ("next_" variable "int" "0" nil nil nil [4133 4142]) ("free_" variable "int" "1" nil nil nil [4160 4169]) ("next_" variable "int" "new_block;" nil nil nil [4224 4242])) nil nil nil nil [311 4251]))
    :unmatched-syntax '((semantic-list 4328 . 4333) (symbol 4321 . 4328) (symbol 4314 . 4320) (punctuation 4313 . 4314) (punctuation 4268 . 4269) (punctuation 4267 . 4268) (symbol 4266 . 4267) (punctuation 4258 . 4259) (semantic-list 4251 . 4258) (SIZEOF 4245 . 4251) (punctuation 4244 . 4245) (symbol 4239 . 4244) (punctuation 4237 . 4238) (symbol 4232 . 4237) (punctuation 4231 . 4232) (punctuation 4230 . 4231) (symbol 4221 . 4230) (punctuation 4204 . 4205) (punctuation 4203 . 4204) (symbol 4194 . 4203) (punctuation 4177 . 4178) (punctuation 4176 . 4177) (symbol 4167 . 4176) (punctuation 4150 . 4151) (punctuation 4149 . 4150) (symbol 4140 . 4149) (punctuation 4072 . 4073) (symbol 4063 . 4072) (punctuation 4055 . 4056) (semantic-list 4048 . 4055) (CHAR 4044 . 4048) (symbol 4040 . 4043) (punctuation 4038 . 4039) (symbol 4036 . 4037) (punctuation 4035 . 4036) (CHAR 4030 . 4034) (close-paren 3992 . 3993) (symbol 3991 . 3992) (punctuation 3990 . 3991) (symbol 3984 . 3989) (open-paren 3983 . 3984) (symbol 3979 . 3983) (VOID 3974 . 3978) (semantic-list 3965 . 3967) (symbol 3958 . 3964) (close-paren 3956 . 3957) (symbol 3955 . 3956) (punctuation 3954 . 3955) (CHAR 3949 . 3953) (open-paren 3948 . 3949) (symbol 3944 . 3948) (VOID 3939 . 3943) (STATIC 3932 . 3938) (punctuation 3927 . 3928) (symbol 3868 . 3874) (STRUCT 3861 . 3867) (punctuation 3856 . 3857) (close-paren 3855 . 3856) (punctuation 3854 . 3855) (symbol 3850 . 3854) (CONST 3844 . 3849) (open-paren 3843 . 3844) (punctuation 3842 . 3843) (OPERATOR 3834 . 3842) (punctuation 3832 . 3833) (symbol 3828 . 3832) (punctuation 3824 . 3825) (close-paren 3823 . 3824) (punctuation 3822 . 3823) (symbol 3817 . 3821) (CONST 3811 . 3816) (open-paren 3810 . 3811) (symbol 3806 . 3810) (punctuation 3783 . 3784) (symbol 3566 . 3571) (STRUCT 3559 . 3565) (close-paren 3544 . 3545) (punctuation 3543 . 3544) (CHAR 3538 . 3542) (punctuation 3537 . 3538) (symbol 3533 . 3537) (punctuation 3532 . 3533) (punctuation 3531 . 3532) (symbol 3528 . 3531) (number 2295 . 2296) (punctuation 2293 . 2294) (punctuation 1002 . 1003) (semantic-list 623 . 629) (symbol 618 . 623) (punctuation 617 . 618) (semantic-list 592 . 617) (symbol 588 . 592) (number 548 . 552) (punctuation 547 . 548) (number 548 . 552) (punctuation 547 . 548) (semantic-list 166 . 180) (symbol 159 . 166) (number 175 . 179) (punctuation 174 . 175) (symbol 152 . 158) (number 175 . 179) (punctuation 174 . 175) (punctuation 151 . 152) (semantic-list 108 . 122) (symbol 101 . 108) (number 117 . 121) (punctuation 116 . 117) (symbol 94 . 100) (number 117 . 121) (punctuation 116 . 117) (punctuation 93 . 94) (semantic-list 85 . 91) (symbol 78 . 85) (symbol 71 . 77) (punctuation 70 . 71))
    )
   (semanticdb-table "pool_allocator.h"
    :file "pool_allocator.h"
    :pointmax 3027
    :major-mode 'c++-mode
    :tokens '(("POOL_ALLOCATOR_H_INCLUDED_GF" variable nil nil ((const . t)) nil nil [38 77]) ("pool.h" include nil nil nil [76 93]) ("pool_allocator" type "class" nil nil ((template ("T" type "class" nil nil))) nil nil [96 139]) ("pool_allocator" type "class" (("public" label ((reparse-symbol . classsubparts)) [182 189]) ("pointer" type "typedef" nil ("void") ((pointer . 1) (typedef "void")) nil nil [194 216]) ("const_pointer" type "typedef" nil ("void") ((pointer . 1) (typedef "void")) nil nil [221 255]) ("value_type" type "typedef" nil ("void") ((typedef "void")) nil nil [309 333]) ("rebind" type "struct" (("other" type "typedef" nil ("pool_allocator") ((typedef "pool_allocator" type "class")) nil nil [381 413])) nil ((template ("U" type "class" nil nil))) nil ((reparse-symbol . classsubparts)) [338 416])) nil ((template . "") (template-specifier ("void" type nil nil nil))) nil nil [141 419]) ("pool_alloc" type "namespace" (("destruct" function ("void") (("" variable "char" nil ((pointer . 1)) nil nil [468 475])) ((typemodifiers "inline")) nil ((reparse-symbol . namespacesubparts)) [447 477]) ("destruct" function ("void") (("" variable "wchar_t" nil ((pointer . 1)) nil nil [503 512])) ((typemodifiers "inline")) nil ((reparse-symbol . namespacesubparts)) [482 514]) ("destruct" function ("void") (("t" variable ("T" type "class") nil ((pointer . 1)) nil nil [570 575])) ((template ("T" type "class" nil nil)) (typemodifiers "inline")) nil ((reparse-symbol . namespacesubparts)) [519 585])) nil nil nil nil [421 587]) ("pool_allocator" type "class" (("public" label ((reparse-symbol . classsubparts)) [647 654]) ("size_type" type "typedef" nil ("size_t") ((typedef "size_t" type "class")) nil nil [659 684]) ("difference_type" type "typedef" nil ("ptrdiff_t") ((typedef "ptrdiff_t" type "class")) nil nil [689 723]) ("pointer" type "typedef" nil ("T") ((pointer . 1) (typedef "T" type "class")) nil nil [728 747]) ("const_pointer" type "typedef" nil ("T") ((pointer . 1) (typedef "T" type "class")) nil nil [752 783]) ("reference" variable ("T" type "class") nil nil nil nil [796 809]) ("const_reference" variable ("T" type "class") nil ((const . t)) nil nil [822 847]) ("value_type" type "typedef" nil ("T") ((typedef "T" type "class")) nil nil [852 873]) ("rebind" type "struct" (("other" type "typedef" nil ("pool_allocator") ((typedef "pool_allocator" type "class")) nil nil [922 954])) nil ((template ("U" type "class" nil nil))) nil ((reparse-symbol . classsubparts)) [879 957]) ("pool_allocator" function ("pool_allocator" type "class") nil ((constructor . t)) nil ((reparse-symbol . classsubparts)) [962 980]) ("address" function ("pointer" type "class") (("x" variable ("reference" type "class") nil nil nil nil [1001 1013])) nil nil ((reparse-symbol . classsubparts)) [985 1032]) ("address" function ("const_pointer" type "class") (("x" variable ("const_reference" type "class") nil nil nil nil [1059 1077])) nil nil ((reparse-symbol . classsubparts)) [1037 1096]) ("allocate" function ("pointer" type "class") (("size" variable ("size_type" type "class") nil nil nil nil [1118 1133]) ("hint" variable ("pool_allocator::const_pointer" type "class") "0" nil nil nil [1134 1178])) nil nil ((reparse-symbol . classsubparts)) [1101 1259]) ("_Charalloc" function ("char") (("n" variable ("size_type" type "class") nil nil nil nil [1303 1315])) ((pointer . 1)) nil ((reparse-symbol . classsubparts)) [1286 1361]) ("pool_allocator" function ("pool_allocator" type "class") (("" variable ("pool_allocator" type "class") nil ((const . t)) nil nil [1423 1448])) ((template ("U" type "class" nil nil)) (constructor . t)) nil ((reparse-symbol . classsubparts)) [1389 1450]) ("deallocate" function ("void") (("p" variable ("pointer" type "class") nil nil nil nil [1471 1481]) ("n" variable ("size_type" type "class") nil nil nil nil [1482 1494])) nil nil ((reparse-symbol . classsubparts)) [1455 1537]) ("deallocate" function ("void") (("p" variable "void" nil ((pointer . 1)) nil nil [1558 1566]) ("n" variable ("size_type" type "class") nil nil nil nil [1567 1579])) nil nil ((reparse-symbol . classsubparts)) [1542 1622]) ("max_size" function ("size_type" type "class") nil nil nil ((reparse-symbol . classsubparts)) [1627 1703]) ("construct" function ("void") (("p" variable ("pointer" type "class") nil nil nil nil [1723 1733]) ("val" variable ("T" type "class") nil ((const . t)) nil nil [1734 1747])) nil nil ((reparse-symbol . classsubparts)) [1708 1802]) ("construct" function ("void") (("p" variable ("pointer" type "class") nil nil nil nil [1822 1832])) nil nil ((reparse-symbol . classsubparts)) [1807 1884]) ("destroy" function ("void") (("p" variable ("pointer" type "class") nil nil nil nil [1902 1912])) nil nil ((reparse-symbol . classsubparts)) [1889 1938]) ("dump" function ("void") nil ((typemodifiers "static")) nil ((reparse-symbol . classsubparts)) [1943 1975]) ("private" label ((reparse-symbol . classsubparts)) [1977 1985]) ("mem_" variable ("pool" type "class") nil ((typemodifiers "static")) nil nil [1991 2008])) nil ((template ("T" type "class" nil nil))) nil nil [602 2011]) ("pool_allocator::mem_" variable ("pool" type "class") nil nil nil nil [2013 2064]) ("==" function ("bool" type "class") (("" variable ("pool_allocator" type "class") nil ((const . t)) nil nil [2123 2148]) ("" variable ("pool_allocator" type "class") nil ((const . t)) nil nil [2149 2173])) ((template ("T" type "class" nil nil) ("U" type "class" nil nil)) (typemodifiers "inline")) nil nil [2066 2187]) ("!=" function ("bool" type "class") (("" variable ("pool_allocator" type "class") nil ((const . t)) nil nil [2246 2271]) ("" variable ("pool_allocator" type "class") nil ((const . t)) nil nil [2272 2296])) ((template ("T" type "class" nil nil) ("U" type "class" nil nil)) (typemodifiers "inline")) nil nil [2189 2311]) ("POOL_ALLOC_CDECL" variable nil nil ((const . t)) nil nil [2531 2571]) ("POOL_ALLOC_CDECL" variable nil nil ((const . t)) nil nil [2570 2612]) ("std" type "namespace" (("__stl_alloc_rebind" function ("POOL_ALLOC_CDECL" type "class") (("__a" variable ("pool_allocator" type "class") nil nil nil nil [2717 2743]) ("" variable ("_Tp2" type "class") nil ((const . t) (pointer . 1)) nil nil [2744 2756])) nil nil ((reparse-symbol . namespacesubparts)) [2681 2801]) ("__stl_alloc_create" function ("POOL_ALLOC_CDECL" type "class") (("" variable ("pool_allocator" type "class") nil ((const . t)) nil nil [2902 2930]) ("" variable ("_Tp2" type "class") nil ((const . t) (pointer . 1)) nil nil [2931 2943])) nil nil ((reparse-symbol . namespacesubparts)) [2866 2982])) nil nil nil nil [2603 2985]))
    )
   (semanticdb-table "ss_storage.h"
    :file "ss_storage.h"
    :pointmax 670
    :major-mode 'c++-mode
    :tokens '(("SS_STORAGE_H_INCLUDED_GF" variable nil nil ((const . t)) nil nil [34 69]) ("new" include t nil nil [68 82]) ("list" include t nil nil [83 98]) ("algorithm" include t nil nil [99 119]) ("iostream" include t nil nil [120 139]) ("ss_defaults" type "enum" (("init_size" variable "int" (226 230) ((const . t)) nil ((reparse-symbol . enumsubparts)) [214 230])) nil nil nil nil [197 232]) ("ss_storage" function "int" nil ((prototype . t)) nil nil [243 256]) ("allocate" function ("T" type "class") nil ((pointer . 1) (prototype . t)) nil nil [259 273]) ("allocate" function ("void") (("n" variable ("size_t" type "class") nil nil nil nil [291 300])) ((pointer . 1) (prototype . t)) nil nil [276 301]) ("deallocate" function ("void") (("p" variable "void" nil ((pointer . 1)) nil nil [320 328]) ("n" variable ("size_t" type "class") nil nil nil nil [329 338])) ((prototype . t)) nil nil [304 339]) ("dump" function ("void") nil ((prototype . t)) nil nil [342 354]) ("ss_storage" function "void" nil ((destructor . t) (prototype . t)) nil nil [357 371]) ("link" type "struct" (("next_" variable ("link" type "class") nil ((pointer . 1)) nil nil [404 416])) nil nil nil nil [384 421]) ("grow" function ("void") nil ((prototype . t)) nil nil [424 436]) ("verify_memory_contiguous" function ("bool" type "class") (("l" variable ("link" type "class") nil ((pointer . 1)) nil nil [469 477]) ("n" variable "int" nil nil nil nil [478 484])) ((prototype . t)) nil nil [439 485]) ("killer" type "struct" (("()" function ("void") (("p" variable "char" nil ((pointer . 1)) nil nil [527 535])) nil nil ((reparse-symbol . classsubparts)) [511 549])) nil nil nil nil [489 554]) ("size_" variable ("size_t" type "class") nil nil nil nil [558 571]) ("step_" variable ("size_t" type "class") nil nil nil nil [574 587]) ("ss_mem_" variable "int" nil nil nil nil [608 616]) ("head_" variable ("link" type "class") nil ((pointer . 1)) nil nil [619 631]) ("ss_storage.cpp" include nil nil nil [637 662]))
    :unmatched-syntax '((punctuation 634 . 635) (close-paren 633 . 634) (close-paren 606 . 607) (punctuation 605 . 606) (CHAR 600 . 604) (punctuation 599 . 600) (symbol 595 . 599) (punctuation 594 . 595) (punctuation 593 . 594) (symbol 590 . 593) (punctuation 380 . 381) (PRIVATE 373 . 380) (punctuation 239 . 240) (PUBLIC 233 . 239) (open-paren 193 . 194) (symbol 182 . 192) (CLASS 176 . 181) (close-paren 174 . 175) (symbol 173 . 174) (TYPENAME 164 . 172) (punctuation 163 . 164) (TEMPLATE 154 . 162))
    )
   (semanticdb-table "stl_memory_test.cpp"
    :file "stl_memory_test.cpp"
    :pointmax 1697
    :major-mode 'c++-mode
    :tokens '(("iostream" include t nil nil [1 20]) ("list" include t nil nil [21 36]) ("sys/time.h" include t nil nil [38 59]) ("sys/types.h" include t nil nil [60 82]) ("unistd.h" include t nil nil [83 102]) ("ss_allocator.h" include nil nil nil [103 128]) ("dum_allocator.h" include nil nil nil [129 155]) ("STDIN" variable nil nil ((const . t)) nil nil [178 193]) ("Big" type "class" (("private" label ((reparse-symbol . classsubparts)) [207 215]) ("_40K" variable "int" nil ((dereference . 1)) nil nil [218 236]) ("public" label ((reparse-symbol . classsubparts)) [238 245]) ("Big" function ("Big" type "class") (("i" variable "int" nil nil nil nil [252 258])) ((constructor . t)) nil ((reparse-symbol . classsubparts)) [248 295]) ("Big" function "void" nil ((destructor . t)) nil ((reparse-symbol . classsubparts)) [298 311])) nil nil nil nil [195 314]) ("main" function ("int") (("" variable "void" nil nil nil nil [326 331])) nil nil nil [317 1696]))
    :unmatched-syntax 'nil
    )
   (semanticdb-table "ss_allocator.h"
    :file "ss_allocator.h"
    :pointmax 3126
    :major-mode 'c++-mode
    :tokens '(("SS_ALLOCATOR_H_INCLUDED_GF" variable nil nil ((const . t)) nil nil [36 73]) ("ss_storage.h" include nil nil nil [72 95]) ("ss_allocator" type "class" nil nil ((template ("T" type "class" nil nil))) nil nil [98 139]) ("ss_allocator" type "class" (("public" label ((reparse-symbol . classsubparts)) [179 186]) ("pointer" type "typedef" nil ("void") ((pointer . 1) (typedef "void")) nil nil [191 213]) ("const_pointer" type "typedef" nil ("void") ((pointer . 1) (typedef "void")) nil nil [218 252]) ("value_type" type "typedef" nil ("void") ((typedef "void")) nil nil [306 330]) ("rebind" type "struct" (("other" type "typedef" nil ("ss_allocator") ((typedef "ss_allocator" type "class")) nil nil [378 408])) nil ((template ("U" type "class" nil nil))) nil ((reparse-symbol . classsubparts)) [335 411])) nil ((template . "") (template-specifier ("void" type nil nil nil))) nil nil [140 414]) ("ss_alloc" type "namespace" (("destruct" function ("void") (("" variable "char" nil ((pointer . 1)) nil nil [461 468])) ((typemodifiers "inline")) nil ((reparse-symbol . namespacesubparts)) [440 470]) ("destruct" function ("void") (("" variable "wchar_t" nil ((pointer . 1)) nil nil [496 505])) ((typemodifiers "inline")) nil ((reparse-symbol . namespacesubparts)) [475 507]) ("destruct" function ("void") (("t" variable ("T" type "class") nil ((pointer . 1)) nil nil [563 568])) ((template ("T" type "class" nil nil)) (typemodifiers "inline")) nil ((reparse-symbol . namespacesubparts)) [512 578])) nil nil nil nil [416 580]) ("ss_allocator" type "class" (("public" label ((reparse-symbol . classsubparts)) [647 654]) ("size_type" type "typedef" nil ("size_t") ((typedef "size_t" type "class")) nil nil [659 684]) ("difference_type" type "typedef" nil ("ptrdiff_t") ((typedef "ptrdiff_t" type "class")) nil nil [689 723]) ("pointer" type "typedef" nil ("T") ((pointer . 1) (typedef "T" type "class")) nil nil [728 747]) ("const_pointer" type "typedef" nil ("T") ((pointer . 1) (typedef "T" type "class")) nil nil [752 783]) ("reference" variable ("T" type "class") nil nil nil nil [796 809]) ("const_reference" variable ("T" type "class") nil ((const . t)) nil nil [822 847]) ("value_type" type "typedef" nil ("T") ((typedef "T" type "class")) nil nil [852 873]) ("rebind" type "struct" (("other" type "typedef" nil ("ss_allocator") ((typedef "ss_allocator" type "class")) nil nil [922 952])) nil ((template ("U" type "class" nil nil))) nil ((reparse-symbol . classsubparts)) [879 955]) ("ss_allocator" function ("ss_allocator" type "class") nil ((constructor . t)) nil ((reparse-symbol . classsubparts)) [961 977]) ("address" function ("pointer" type "class") (("x" variable ("reference" type "class") nil nil nil nil [998 1010])) nil nil ((reparse-symbol . classsubparts)) [982 1029]) ("address" function ("const_pointer" type "class") (("x" variable ("const_reference" type "class") nil nil nil nil [1056 1074])) nil nil ((reparse-symbol . classsubparts)) [1034 1093]) ("allocate" function ("pointer" type "class") (("size" variable ("size_type" type "class") nil nil nil nil [1115 1130]) ("hint" variable ("ss_allocator::const_pointer" type "class") "0" nil nil nil [1131 1173])) nil nil ((reparse-symbol . classsubparts)) [1098 1306]) ("_Charalloc" function ("char") (("n" variable ("size_type" type "class") nil nil nil nil [1361 1373])) ((pointer . 1)) nil ((reparse-symbol . classsubparts)) [1344 1419]) ("ss_allocator" function ("ss_allocator" type "class") (("" variable ("ss_allocator" type "class") nil ((const . t)) nil nil [1479 1502])) ((template ("U" type "class" nil nil)) (constructor . t)) nil ((reparse-symbol . classsubparts)) [1447 1504]) ("ss_allocator" function ("ss_allocator" type "class") (("" variable ("ss_allocator" type "class") nil ((const . t)) nil nil [1522 1545])) ((constructor . t)) nil ((reparse-symbol . classsubparts)) [1509 1547]) ("deallocate" function ("void") (("p" variable ("pointer" type "class") nil nil nil nil [1568 1578]) ("n" variable ("size_type" type "class") nil nil nil nil [1579 1591])) nil nil ((reparse-symbol . classsubparts)) [1552 1640]) ("deallocate" function ("void") (("p" variable "void" nil ((pointer . 1)) nil nil [1661 1669]) ("n" variable ("size_type" type "class") nil nil nil nil [1670 1682])) nil nil ((reparse-symbol . classsubparts)) [1645 1731]) ("max_size" function ("size_type" type "class") nil nil nil ((reparse-symbol . classsubparts)) [1736 1812]) ("construct" function ("void") (("p" variable ("pointer" type "class") nil nil nil nil [1832 1842]) ("val" variable ("T" type "class") nil ((const . t)) nil nil [1843 1856])) nil nil ((reparse-symbol . classsubparts)) [1817 1911]) ("construct" function ("void") (("p" variable ("pointer" type "class") nil nil nil nil [1931 1941])) nil nil ((reparse-symbol . classsubparts)) [1916 1993]) ("destroy" function ("void") (("p" variable ("pointer" type "class") nil nil nil nil [2011 2021])) nil nil ((reparse-symbol . classsubparts)) [1998 2045]) ("dump" function ("void") nil ((typemodifiers "static")) nil ((reparse-symbol . classsubparts)) [2050 2083]) ("private" label ((reparse-symbol . classsubparts)) [2084 2092]) ("mem_" variable ("ss_storage" type "class") nil ((typemodifiers "static")) nil nil [2098 2124])) nil ((template ("T" type "class" nil nil))) nil nil [604 2127]) ("ss_allocator::mem_" variable ("ss_storage" type "class") nil nil nil nil [2129 2187]) ("==" function ("bool" type "class") (("" variable ("ss_allocator" type "class") nil ((const . t)) nil nil [2246 2269]) ("" variable ("ss_allocator" type "class") nil ((const . t)) nil nil [2270 2292])) ((template ("T" type "class" nil nil) ("U" type "class" nil nil)) (typemodifiers "inline")) nil nil [2189 2306]) ("!=" function ("bool" type "class") (("" variable ("ss_allocator" type "class") nil ((const . t)) nil nil [2365 2388]) ("" variable ("ss_allocator" type "class") nil ((const . t)) nil nil [2389 2411])) ((template ("T" type "class" nil nil) ("U" type "class" nil nil)) (typemodifiers "inline")) nil nil [2308 2426]) ("SS_ALLOC_CDECL" variable nil nil ((const . t)) nil nil [2648 2686]) ("SS_ALLOC_CDECL" variable nil nil ((const . t)) nil nil [2685 2725]) ("std" type "namespace" (("__stl_alloc_rebind" function ("SS_ALLOC_CDECL" type "class") (("__a" variable ("ss_allocator" type "class") nil nil nil nil [2826 2850]) ("" variable ("_Tp2" type "class") nil ((const . t) (pointer . 1)) nil nil [2851 2863])) nil nil ((reparse-symbol . namespacesubparts)) [2792 2906]) ("__stl_alloc_create" function ("SS_ALLOC_CDECL" type "class") (("" variable ("ss_allocator" type "class") nil ((const . t)) nil nil [3003 3029]) ("" variable ("_Tp2" type "class") nil ((const . t) (pointer . 1)) nil nil [3030 3042])) nil nil ((reparse-symbol . namespacesubparts)) [2969 3079])) nil nil nil nil [2716 3082]))
    )
   (semanticdb-table "Makefile"
    :file "Makefile"
    :pointmax 572
    :major-mode 'makefile-gmake-mode
    :tokens '(("CC" variable nil (("g++")) nil nil nil [1 8]) ("CFLAGS" variable nil (("-c") ("-Wall")) nil nil nil [8 24]) ("all" function nil (("stl_memory_test")) nil nil nil [114 136]) ("stl_memory_test" function nil (("stl_memory_test.o")) nil nil nil [136 218]) ("stl_memory_test.o" function nil (("stl_memory_test.cpp") ("ss_storage.h") ("ss_allocator.h") ("ss_storage.cpp")) nil nil nil [218 341]) ("clean" function nil (nil) nil nil nil [341 391]) ("alloc" function nil (("main.cpp") ("timer.cpp") ("timer.h") ("ss_storage.h") ("ss_storage.cpp") ("ss_allocator.h") ("pool_allocator.h") ("pool.h") ("dum_storage.h") ("dum_storage.hcc") ("dum_allocator.h")) nil nil nil [391 572]))
    :unmatched-syntax '((shell-command 349 . 382))
    )
   (semanticdb-table "ss_storage.cpp"
    :file "ss_storage.cpp"
    :pointmax 3247
    :major-mode 'c++-mode
    :tokens '(("ss_storage.h" include nil nil nil [1 24]) ("l" variable ("link" type "class") nil ((pointer . 1)) nil nil [327 335]) ("i" variable "int" "1" nil nil nil [400 410]) ("init_size" variable "int" nil nil nil nil [413 423]) ("next_" variable "int" "reinterpret_cast<link *>(*ss_mem_.begin() + i*step_)" nil nil nil [440 501]) ("next_" variable "int" nil nil nil nil [513 519]) ("next_" variable "int" "0" nil nil nil [529 539]) ("l" variable ("link" type "class") "head_;" ((pointer . 1)) nil nil [681 697]) ("std::endl" variable "int" nil nil nil nil [733 743]) ("next_" variable "int" nil nil nil nil [762 768]) ("std::endl" variable "int" nil nil nil nil [787 797]) ("l" variable ("link" type "class") "head_," ((pointer . 1)) nil nil [986 1015]) ("conn" variable ("link" type "class") nil ((pointer . 1)) nil nil [986 1015]) ("ret" variable ("link" type "class") nil ((pointer . 1)) nil nil [986 1015]) ("next_" variable "int" nil nil nil nil [1172 1178]) ("i" variable "unsigned int" "0" nil nil nil [1190 1207]) ("step_" variable "int" nil nil nil nil [1212 1218]) ("next_" variable "int" nil nil nil nil [1253 1259]) ("next_" variable "int" "conn;" nil nil nil [1278 1291]) ("ret" variable "int" nil nil nil nil [1305 1309]) ("next_" variable "int" nil nil nil nil [1378 1384]) ("l" variable "int" "head_;" nil nil nil [1450 1460]) ("l" variable ("link" type "class") "head_;" ((pointer . 1)) nil nil [1650 1666]) ("next_" variable "int" "l;" nil nil nil [1718 1726]) ("l" variable ("link" type "class") "head_," ((pointer . 1)) nil nil [1746 1769]) ("conn" variable ("link" type "class") nil ((pointer . 1)) nil nil [1746 1769]) ("conn" variable "int" "head_;" nil nil nil [1814 1827]) ("i" variable "unsigned int" "0" nil nil nil [1836 1853]) ("step_" variable "int" nil nil nil nil [1858 1864]) ("i" variable "int" nil nil nil nil [1925 1927]) ("next_" variable "int" nil nil nil nil [1947 1953]) ("next_" variable "int" "l;" nil nil nil [1970 1980]) ("l" variable ("link" type "class") "head_;" ((pointer . 1)) nil nil [2039 2055]) ("links" variable "int" "0" nil nil nil [2058 2072]) ("free_space" variable ("size_t" type "class") "0" nil nil nil [2075 2097]) ("step_" variable "int" nil nil nil nil [2135 2141]) ("links" variable "int" nil nil nil nil [2148 2154]) ("next_" variable "int" nil nil nil nil [2166 2172]) ("endl" variable "int" nil nil nil nil [2234 2239]) ("std::endl" variable "int" nil nil nil nil [2380 2390]) ("std::endl" variable "int" nil nil nil nil [2447 2457]) ("std::endl" variable "int" nil nil nil nil [2509 2519]) ("old_head" variable ("link" type "class") "head_;" ((pointer . 1)) nil nil [2522 2545]) ("std::endl" variable "int" nil nil nil nil [2564 2574]) ("std::endl" variable "int" nil nil nil nil [2643 2653]) ("head_" variable "int" "l;" nil nil nil [2657 2667]) ("std::endl" variable "int" nil nil nil nil [2686 2696]) ("i" variable "int" "1" nil nil nil [2704 2714]) ("init_size" variable "int" nil nil nil nil [2717 2727]) ("next_" variable "int" nil nil nil nil [2807 2813]) ("std::endl" variable "int" nil nil nil nil [2836 2846]) ("next_" variable "int" "old_head;" nil nil nil [2852 2869]) ("std::endl" variable "int" nil nil nil nil [2888 2898]) ("false" variable "int" nil nil nil nil [2978 2984]) ("i" variable "int" "0" nil nil nil [2991 2999]) ("n" variable "int" nil nil nil nil [3002 3004]) ("next_" variable "int" nil nil nil nil [3127 3133]) ("false" variable "int" nil nil nil nil [3169 3175]) ("false" variable "int" nil nil nil nil [3213 3219]) ("true" variable "int" nil nil nil nil [3239 3244]))
    :unmatched-syntax '((close-paren 3245 . 3246) (RETURN 3232 . 3238) (close-paren 3228 . 3229) (close-paren 3224 . 3225) (RETURN 3206 . 3212) (open-paren 3198 . 3199) (ELSE 3194 . 3198) (close-paren 3188 . 3189) (close-paren 3182 . 3183) (RETURN 3162 . 3168) (open-paren 3152 . 3153) (ELSE 3148 . 3152) (close-paren 3140 . 3141) (punctuation 3126 . 3127) (punctuation 3125 . 3126) (symbol 3124 . 3125) (punctuation 3122 . 3123) (symbol 3120 . 3121) (open-paren 3110 . 3111) (close-paren 3109 . 3110) (symbol 3104 . 3109) (punctuation 3102 . 3103) (punctuation 3101 . 3102) (close-paren 3099 . 3100) (symbol 3098 . 3099) (open-paren 3097 . 3098) (punctuation 3096 . 3097) (punctuation 3095 . 3096) (CHAR 3091 . 3095) (punctuation 3090 . 3091) (symbol 3074 . 3090) (punctuation 3072 . 3073) (close-paren 3070 . 3071) (symbol 3065 . 3070) (punctuation 3064 . 3065) (punctuation 3063 . 3064) (symbol 3062 . 3063) (open-paren 3061 . 3062) (punctuation 3060 . 3061) (punctuation 3059 . 3060) (CHAR 3055 . 3059) (punctuation 3054 . 3055) (symbol 3038 . 3054) (open-paren 3037 . 3038) (IF 3035 . 3037) (open-paren 3027 . 3028) (close-paren 3026 . 3027) (symbol 3021 . 3026) (punctuation 3020 . 3021) (punctuation 3019 . 3020) (symbol 3018 . 3019) (open-paren 3017 . 3018) (IF 3015 . 3017) (open-paren 3009 . 3010) (close-paren 3008 . 3009) (symbol 3007 . 3008) (punctuation 3006 . 3007) (punctuation 3005 . 3006) (punctuation 3001 . 3002) (symbol 3000 . 3001) (open-paren 2990 . 2991) (FOR 2987 . 2990) (RETURN 2971 . 2977) (close-paren 2969 . 2970) (symbol 2968 . 2969) (punctuation 2967 . 2968) (open-paren 2966 . 2967) (IF 2964 . 2966) (open-paren 2960 . 2961) (close-paren 2958 . 2959) (symbol 2957 . 2958) (INT 2953 . 2956) (punctuation 2951 . 2952) (symbol 2950 . 2951) (punctuation 2949 . 2950) (symbol 2944 . 2948) (open-paren 2943 . 2944) (symbol 2919 . 2943) (punctuation 2918 . 2919) (punctuation 2917 . 2918) (symbol 2907 . 2917) (symbol 2902 . 2906) (close-paren 2899 . 2900) (punctuation 2887 . 2888) (punctuation 2886 . 2887) (string 2883 . 2886) (punctuation 2882 . 2883) (punctuation 2881 . 2882) (symbol 2877 . 2881) (punctuation 2876 . 2877) (punctuation 2875 . 2876) (symbol 2872 . 2875) (punctuation 2851 . 2852) (punctuation 2850 . 2851) (symbol 2849 . 2850) (punctuation 2835 . 2836) (punctuation 2834 . 2835) (string 2831 . 2834) (punctuation 2830 . 2831) (punctuation 2829 . 2830) (symbol 2825 . 2829) (punctuation 2824 . 2825) (punctuation 2823 . 2824) (symbol 2820 . 2823) (close-paren 2816 . 2817) (punctuation 2806 . 2807) (punctuation 2805 . 2806) (symbol 2804 . 2805) (punctuation 2802 . 2803) (symbol 2800 . 2801) (punctuation 2794 . 2795) (close-paren 2793 . 2794) (symbol 2788 . 2793) (punctuation 2787 . 2788) (symbol 2786 . 2787) (punctuation 2784 . 2785) (symbol 2774 . 2783) (open-paren 2773 . 2774) (punctuation 2772 . 2773) (punctuation 2771 . 2772) (symbol 2766 . 2770) (punctuation 2765 . 2766) (symbol 2749 . 2765) (punctuation 2747 . 2748) (symbol 2741 . 2746) (punctuation 2740 . 2741) (punctuation 2739 . 2740) (symbol 2738 . 2739) (open-paren 2732 . 2733) (close-paren 2731 . 2732) (symbol 2730 . 2731) (punctuation 2729 . 2730) (punctuation 2728 . 2729) (punctuation 2716 . 2717) (symbol 2715 . 2716) (open-paren 2703 . 2704) (FOR 2700 . 2703) (punctuation 2685 . 2686) (punctuation 2684 . 2685) (string 2681 . 2684) (punctuation 2680 . 2681) (punctuation 2679 . 2680) (symbol 2675 . 2679) (punctuation 2674 . 2675) (punctuation 2673 . 2674) (symbol 2670 . 2673) (punctuation 2642 . 2643) (punctuation 2641 . 2642) (string 2638 . 2641) (punctuation 2637 . 2638) (punctuation 2636 . 2637) (symbol 2632 . 2636) (punctuation 2631 . 2632) (punctuation 2630 . 2631) (symbol 2627 . 2630) (punctuation 2623 . 2624) (close-paren 2622 . 2623) (symbol 2613 . 2622) (open-paren 2612 . 2613) (punctuation 2611 . 2612) (punctuation 2610 . 2611) (symbol 2605 . 2609) (punctuation 2604 . 2605) (symbol 2588 . 2604) (punctuation 2586 . 2587) (symbol 2584 . 2585) (punctuation 2583 . 2584) (symbol 2578 . 2582) (punctuation 2563 . 2564) (punctuation 2562 . 2563) (string 2559 . 2562) (punctuation 2558 . 2559) (punctuation 2557 . 2558) (symbol 2553 . 2557) (punctuation 2552 . 2553) (punctuation 2551 . 2552) (symbol 2548 . 2551) (punctuation 2508 . 2509) (punctuation 2507 . 2508) (string 2504 . 2507) (punctuation 2503 . 2504) (punctuation 2502 . 2503) (symbol 2498 . 2502) (punctuation 2497 . 2498) (punctuation 2496 . 2497) (symbol 2493 . 2496) (punctuation 2489 . 2490) (close-paren 2488 . 2489) (symbol 2479 . 2488) (open-paren 2478 . 2479) (symbol 2469 . 2478) (punctuation 2468 . 2469) (symbol 2461 . 2468) (punctuation 2446 . 2447) (punctuation 2445 . 2446) (string 2442 . 2445) (punctuation 2441 . 2442) (punctuation 2440 . 2441) (symbol 2436 . 2440) (punctuation 2435 . 2436) (punctuation 2434 . 2435) (symbol 2431 . 2434) (punctuation 2427 . 2428) (close-paren 2426 . 2427) (symbol 2421 . 2426) (open-paren 2420 . 2421) (CHAR 2416 . 2420) (symbol 2412 . 2415) (punctuation 2410 . 2411) (symbol 2400 . 2409) (punctuation 2399 . 2400) (CHAR 2394 . 2398) (punctuation 2379 . 2380) (punctuation 2378 . 2379) (string 2372 . 2378) (punctuation 2371 . 2372) (punctuation 2370 . 2371) (symbol 2366 . 2370) (punctuation 2365 . 2366) (punctuation 2364 . 2365) (symbol 2361 . 2364) (open-paren 2357 . 2358) (close-paren 2355 . 2356) (open-paren 2354 . 2355) (symbol 2350 . 2354) (punctuation 2349 . 2350) (punctuation 2348 . 2349) (symbol 2338 . 2348) (VOID 2333 . 2337) (close-paren 2330 . 2331) (punctuation 2328 . 2329) (close-paren 2327 . 2328) (close-paren 2326 . 2327) (open-paren 2325 . 2326) (symbol 2319 . 2325) (punctuation 2317 . 2318) (close-paren 2316 . 2317) (open-paren 2315 . 2316) (symbol 2312 . 2315) (punctuation 2311 . 2312) (symbol 2304 . 2311) (punctuation 2302 . 2303) (close-paren 2301 . 2302) (open-paren 2300 . 2301) (symbol 2295 . 2300) (punctuation 2294 . 2295) (symbol 2287 . 2294) (open-paren 2286 . 2287) (symbol 2278 . 2286) (punctuation 2277 . 2278) (punctuation 2276 . 2277) (symbol 2273 . 2276) (open-paren 2269 . 2270) (close-paren 2267 . 2268) (open-paren 2266 . 2267) (symbol 2256 . 2266) (punctuation 2255 . 2256) (punctuation 2254 . 2255) (punctuation 2253 . 2254) (symbol 2243 . 2253) (close-paren 2240 . 2241) (punctuation 2233 . 2234) (punctuation 2232 . 2233) (symbol 2227 . 2232) (punctuation 2226 . 2227) (punctuation 2225 . 2226) (string 2214 . 2225) (punctuation 2213 . 2214) (punctuation 2212 . 2213) (symbol 2207 . 2212) (punctuation 2206 . 2207) (symbol 2201 . 2206) (punctuation 2200 . 2201) (punctuation 2199 . 2200) (string 2185 . 2199) (punctuation 2184 . 2185) (punctuation 2183 . 2184) (symbol 2179 . 2183) (close-paren 2175 . 2176) (punctuation 2165 . 2166) (punctuation 2164 . 2165) (symbol 2163 . 2164) (punctuation 2161 . 2162) (symbol 2159 . 2160) (punctuation 2147 . 2148) (punctuation 2146 . 2147) (punctuation 2133 . 2134) (punctuation 2132 . 2133) (symbol 2121 . 2131) (open-paren 2115 . 2116) (close-paren 2114 . 2115) (symbol 2109 . 2114) (punctuation 2108 . 2109) (punctuation 2107 . 2108) (symbol 2106 . 2107) (open-paren 2105 . 2106) (WHILE 2100 . 2105) (open-paren 2012 . 2013) (close-paren 2010 . 2011) (open-paren 2009 . 2010) (symbol 2005 . 2009) (punctuation 2004 . 2005) (punctuation 2003 . 2004) (symbol 1993 . 2003) (VOID 1988 . 1992) (close-paren 1985 . 1986) (close-paren 1983 . 1984) (punctuation 1969 . 1970) (punctuation 1968 . 1969) (symbol 1964 . 1968) (close-paren 1958 . 1959) (punctuation 1946 . 1947) (punctuation 1945 . 1946) (symbol 1941 . 1945) (punctuation 1939 . 1940) (symbol 1934 . 1938) (punctuation 1923 . 1924) (close-paren 1921 . 1922) (symbol 1920 . 1921) (open-paren 1919 . 1920) (punctuation 1918 . 1919) (punctuation 1917 . 1918) (symbol 1913 . 1917) (punctuation 1912 . 1913) (symbol 1896 . 1912) (punctuation 1894 . 1895) (symbol 1888 . 1893) (punctuation 1887 . 1888) (punctuation 1886 . 1887) (symbol 1882 . 1886) (open-paren 1874 . 1875) (close-paren 1868 . 1869) (symbol 1867 . 1868) (punctuation 1866 . 1867) (punctuation 1865 . 1866) (punctuation 1857 . 1858) (symbol 1856 . 1857) (punctuation 1855 . 1856) (symbol 1854 . 1855) (open-paren 1835 . 1836) (FOR 1832 . 1835) (punctuation 1808 . 1809) (close-paren 1807 . 1808) (symbol 1806 . 1807) (open-paren 1805 . 1806) (punctuation 1804 . 1805) (punctuation 1803 . 1804) (symbol 1799 . 1803) (punctuation 1798 . 1799) (symbol 1782 . 1798) (punctuation 1780 . 1781) (symbol 1774 . 1779) (open-paren 1740 . 1741) (ELSE 1733 . 1737) (close-paren 1729 . 1730) (punctuation 1717 . 1718) (punctuation 1716 . 1717) (symbol 1711 . 1716) (punctuation 1705 . 1706) (close-paren 1704 . 1705) (symbol 1703 . 1704) (open-paren 1702 . 1703) (punctuation 1701 . 1702) (punctuation 1700 . 1701) (symbol 1696 . 1700) (punctuation 1695 . 1696) (symbol 1679 . 1695) (punctuation 1677 . 1678) (symbol 1671 . 1676) (open-paren 1644 . 1645) (close-paren 1640 . 1641) (symbol 1635 . 1640) (punctuation 1634 . 1635) (punctuation 1633 . 1634) (symbol 1632 . 1633) (open-paren 1631 . 1632) (IF 1629 . 1631) (punctuation 1624 . 1625) (string 1621 . 1624) (punctuation 1620 . 1621) (punctuation 1619 . 1620) (symbol 1614 . 1618) (punctuation 1613 . 1614) (punctuation 1612 . 1613) (symbol 1609 . 1612) (open-paren 1605 . 1606) (close-paren 1603 . 1604) (symbol 1602 . 1603) (symbol 1595 . 1601) (punctuation 1593 . 1594) (symbol 1592 . 1593) (punctuation 1591 . 1592) (VOID 1586 . 1590) (open-paren 1585 . 1586) (symbol 1575 . 1585) (punctuation 1574 . 1575) (punctuation 1573 . 1574) (symbol 1563 . 1573) (VOID 1558 . 1562) (close-paren 1556 . 1557) (symbol 1555 . 1556) (CLASS 1549 . 1554) (punctuation 1548 . 1549) (TEMPLATE 1540 . 1548) (close-paren 1471 . 1472) (close-paren 1469 . 1470) (close-paren 1465 . 1466) (punctuation 1442 . 1443) (close-paren 1441 . 1442) (open-paren 1440 . 1441) (symbol 1436 . 1440) (punctuation 1427 . 1428) (string 1424 . 1427) (punctuation 1423 . 1424) (punctuation 1422 . 1423) (symbol 1417 . 1421) (punctuation 1416 . 1417) (punctuation 1415 . 1416) (symbol 1412 . 1415) (open-paren 1404 . 1405) (ELSE 1395 . 1399) (close-paren 1389 . 1390) (punctuation 1377 . 1378) (punctuation 1376 . 1377) (symbol 1375 . 1376) (punctuation 1373 . 1374) (symbol 1371 . 1372) (punctuation 1363 . 1364) (string 1360 . 1363) (punctuation 1359 . 1360) (punctuation 1358 . 1359) (symbol 1353 . 1357) (punctuation 1352 . 1353) (punctuation 1351 . 1352) (symbol 1348 . 1351) (open-paren 1340 . 1341) (close-paren 1334 . 1335) (symbol 1328 . 1333) (punctuation 1327 . 1328) (punctuation 1326 . 1327) (symbol 1325 . 1326) (open-paren 1323 . 1324) (IF 1320 . 1322) (close-paren 1314 . 1315) (RETURN 1298 . 1304) (punctuation 1277 . 1278) (punctuation 1276 . 1277) (symbol 1275 . 1276) (close-paren 1266 . 1267) (punctuation 1252 . 1253) (punctuation 1251 . 1252) (symbol 1247 . 1251) (punctuation 1245 . 1246) (symbol 1240 . 1244) (open-paren 1230 . 1231) (close-paren 1222 . 1223) (symbol 1221 . 1222) (punctuation 1220 . 1221) (punctuation 1219 . 1220) (punctuation 1211 . 1212) (symbol 1210 . 1211) (punctuation 1209 . 1210) (symbol 1208 . 1209) (open-paren 1189 . 1190) (FOR 1185 . 1188) (punctuation 1171 . 1172) (punctuation 1170 . 1171) (symbol 1169 . 1170) (punctuation 1167 . 1168) (symbol 1163 . 1166) (punctuation 1161 . 1162) (symbol 1156 . 1160) (punctuation 1147 . 1148) (string 1144 . 1147) (punctuation 1143 . 1144) (punctuation 1142 . 1143) (symbol 1137 . 1141) (punctuation 1136 . 1137) (punctuation 1135 . 1136) (symbol 1132 . 1135) (open-paren 1124 . 1125) (close-paren 1118 . 1119) (close-paren 1117 . 1118) (symbol 1112 . 1117) (punctuation 1111 . 1112) (symbol 1110 . 1111) (punctuation 1108 . 1109) (symbol 1103 . 1108) (punctuation 1102 . 1103) (punctuation 1101 . 1102) (symbol 1100 . 1101) (open-paren 1099 . 1100) (symbol 1075 . 1099) (open-paren 1074 . 1075) (IF 1072 . 1074) (open-paren 1066 . 1067) (close-paren 1062 . 1063) (number 1061 . 1062) (open-paren 1060 . 1061) (WHILE 1055 . 1060) (punctuation 1051 . 1052) (close-paren 1050 . 1051) (number 1049 . 1050) (punctuation 1048 . 1049) (symbol 1043 . 1048) (punctuation 1042 . 1043) (symbol 1041 . 1042) (open-paren 1040 . 1041) (punctuation 1039 . 1040) (symbol 1034 . 1039) (punctuation 1032 . 1033) (symbol 1030 . 1031) (close-paren 1028 . 1029) (symbol 1023 . 1028) (punctuation 1022 . 1023) (symbol 1021 . 1022) (open-paren 1020 . 1021) (IF 1018 . 1020) (punctuation 981 . 982) (string 978 . 981) (punctuation 976 . 977) (punctuation 975 . 976) (symbol 970 . 974) (punctuation 969 . 970) (punctuation 968 . 969) (symbol 965 . 968) (open-paren 961 . 962) (close-paren 959 . 960) (symbol 958 . 959) (symbol 951 . 957) (open-paren 950 . 951) (symbol 942 . 950) (punctuation 941 . 942) (punctuation 940 . 941) (close-paren 939 . 940) (symbol 938 . 939) (punctuation 937 . 938) (symbol 927 . 937) (punctuation 925 . 926) (VOID 921 . 925) (close-paren 919 . 920) (symbol 918 . 919) (CLASS 912 . 917) (punctuation 911 . 912) (TEMPLATE 903 . 911) (close-paren 834 . 835) (punctuation 832 . 833) (close-paren 831 . 832) (symbol 830 . 831) (open-paren 829 . 830) (punctuation 828 . 829) (punctuation 827 . 828) (symbol 825 . 826) (punctuation 824 . 825) (symbol 808 . 824) (RETURN 801 . 807) (punctuation 786 . 787) (punctuation 785 . 786) (string 782 . 785) (punctuation 781 . 782) (punctuation 780 . 781) (symbol 776 . 780) (punctuation 775 . 776) (punctuation 774 . 775) (symbol 771 . 774) (punctuation 761 . 762) (punctuation 760 . 761) (symbol 755 . 760) (punctuation 753 . 754) (symbol 747 . 752) (punctuation 732 . 733) (punctuation 731 . 732) (string 728 . 731) (punctuation 727 . 728) (punctuation 726 . 727) (symbol 722 . 726) (punctuation 721 . 722) (punctuation 720 . 721) (symbol 717 . 720) (punctuation 713 . 714) (close-paren 712 . 713) (open-paren 711 . 712) (symbol 707 . 711) (close-paren 705 . 706) (symbol 704 . 705) (punctuation 703 . 704) (open-paren 702 . 703) (IF 700 . 702) (punctuation 677 . 678) (string 674 . 677) (punctuation 672 . 673) (punctuation 671 . 672) (symbol 666 . 670) (punctuation 665 . 666) (punctuation 664 . 665) (symbol 661 . 664) (open-paren 657 . 658) (close-paren 655 . 656) (open-paren 654 . 655) (symbol 646 . 654) (punctuation 645 . 646) (punctuation 644 . 645) (close-paren 643 . 644) (symbol 642 . 643) (punctuation 641 . 642) (symbol 631 . 641) (punctuation 629 . 630) (symbol 628 . 629) (close-paren 626 . 627) (symbol 625 . 626) (CLASS 619 . 624) (punctuation 618 . 619) (TEMPLATE 609 . 617) (close-paren 540 . 541) (punctuation 528 . 529) (punctuation 527 . 528) (symbol 526 . 527) (close-paren 522 . 523) (punctuation 512 . 513) (punctuation 511 . 512) (symbol 510 . 511) (punctuation 508 . 509) (symbol 506 . 507) (punctuation 439 . 440) (punctuation 438 . 439) (symbol 437 . 438) (open-paren 431 . 432) (close-paren 427 . 428) (symbol 426 . 427) (punctuation 425 . 426) (punctuation 424 . 425) (punctuation 412 . 413) (symbol 411 . 412) (open-paren 399 . 400) (FOR 396 . 399) (punctuation 392 . 393) (close-paren 391 . 392) (semantic-list 389 . 391) (symbol 384 . 389) (punctuation 383 . 384) (symbol 376 . 383) (punctuation 375 . 376) (open-paren 374 . 375) (punctuation 373 . 374) (punctuation 372 . 373) (symbol 367 . 371) (punctuation 366 . 367) (symbol 350 . 366) (punctuation 348 . 349) (symbol 346 . 347) (punctuation 344 . 345) (symbol 338 . 343) (punctuation 323 . 324) (close-paren 322 . 323) (semantic-list 315 . 322) (CHAR 311 . 315) (symbol 307 . 310) (open-paren 306 . 307) (symbol 297 . 306) (punctuation 296 . 297) (symbol 289 . 296) (open-paren 285 . 286) (close-paren 283 . 284) (close-paren 282 . 283) (symbol 281 . 282) (open-paren 280 . 281) (SIZEOF 274 . 280) (punctuation 272 . 273) (close-paren 270 . 271) (symbol 266 . 270) (open-paren 265 . 266) (SIZEOF 259 . 265) (punctuation 257 . 258) (close-paren 255 . 256) (symbol 254 . 255) (open-paren 253 . 254) (SIZEOF 247 . 253) (punctuation 245 . 246) (close-paren 243 . 244) (symbol 239 . 243) (open-paren 238 . 239) (SIZEOF 232 . 238) (open-paren 231 . 232) (symbol 226 . 231) (punctuation 222 . 223) (close-paren 221 . 222) (close-paren 220 . 221) (symbol 219 . 220) (open-paren 218 . 219) (SIZEOF 212 . 218) (punctuation 211 . 212) (symbol 202 . 211) (punctuation 200 . 201) (close-paren 198 . 199) (symbol 194 . 198) (open-paren 193 . 194) (SIZEOF 187 . 193) (punctuation 185 . 186) (symbol 175 . 184) (punctuation 173 . 174) (close-paren 171 . 172) (symbol 170 . 171) (open-paren 169 . 170) (SIZEOF 163 . 169) (punctuation 161 . 162) (close-paren 159 . 160) (symbol 155 . 159) (open-paren 154 . 155) (SIZEOF 148 . 154) (open-paren 147 . 148) (symbol 142 . 147) (punctuation 138 . 139) (close-paren 137 . 138) (open-paren 136 . 137) (symbol 126 . 136) (punctuation 125 . 126) (punctuation 124 . 125) (close-paren 123 . 124) (symbol 122 . 123) (punctuation 121 . 122) (symbol 111 . 121) (close-paren 109 . 110) (symbol 108 . 109) (CLASS 102 . 107) (punctuation 101 . 102) (TEMPLATE 92 . 100))
    )
   (semanticdb-table "dum_allocator.h"
    :file "dum_allocator.h"
    :pointmax 2878
    :major-mode 'c++-mode
    :tokens '(("DUM_ALLOCATOR_H_INCLUDED_GF" variable nil nil ((const . t)) nil nil [37 75]) ("dum_storage.h" include nil nil nil [74 98]) ("dum_allocator" type "class" nil nil nil nil nil [122 142]) ("pointer" type "typedef" nil ("void") ((pointer . 1) (typedef "void")) nil nil [193 215]) ("const_pointer" type "typedef" nil ("void") ((pointer . 1) (typedef "void")) nil nil [218 252]) ("value_type" type "typedef" nil ("void") ((typedef "void")) nil nil [302 326]) ("other" variable "int" nil nil nil nil [391 397]) ("size_type" type "typedef" nil ("size_t") ((typedef "size_t" type "class")) nil nil [638 663]) ("difference_type" type "typedef" nil ("ptrdiff_t") ((typedef "ptrdiff_t" type "class")) nil nil [666 700]) ("pointer" type "typedef" nil ("T") ((pointer . 1) (typedef "T" type "class")) nil nil [703 722]) ("const_pointer" type "typedef" nil ("T") ((pointer . 1) (typedef "T" type "class")) nil nil [725 756]) ("reference" variable ("T" type "class") nil nil nil nil [767 780]) ("const_reference" variable ("T" type "class") nil ((const . t)) nil nil [791 816]) ("value_type" type "typedef" nil ("T") ((typedef "T" type "class")) nil nil [819 840]) ("other" variable "int" nil nil nil nil [906 912]) ("x" variable "int" nil nil nil nil [983 985]) ("x" variable "int" nil nil nil nil [1045 1047]) ("endl" variable "int" nil nil nil nil [1303 1308]) ("p" variable "int" nil nil nil nil [1335 1337]) ("endl" variable "int" nil nil nil nil [1389 1394]) ("endl" variable "int" nil nil nil nil [2123 2128]) ("endl" variable "int" nil nil nil nil [2379 2384]) ("mem_" variable "int" nil nil nil nil [2553 2558]) ("mem_" variable "int" nil nil nil nil [2618 2623]) ("true" variable "int" nil nil nil nil [2738 2743]) ("false" variable "int" nil nil nil nil [2859 2865]))
    :unmatched-syntax '((close-paren 2865 . 2866) (RETURN 2852 . 2858) (open-paren 2851 . 2852) (close-paren 2850 . 2851) (close-paren 2849 . 2850) (symbol 2848 . 2849) (punctuation 2847 . 2848) (symbol 2834 . 2847) (CONST 2828 . 2833) (punctuation 2826 . 2827) (punctuation 2825 . 2826) (close-paren 2824 . 2825) (symbol 2823 . 2824) (punctuation 2822 . 2823) (symbol 2809 . 2822) (CONST 2803 . 2808) (open-paren 2802 . 2803) (punctuation 2801 . 2802) (punctuation 2800 . 2801) (OPERATOR 2792 . 2800) (symbol 2787 . 2791) (INLINE 2780 . 2786) (close-paren 2778 . 2779) (symbol 2777 . 2778) (TYPENAME 2768 . 2776) (punctuation 2766 . 2767) (symbol 2765 . 2766) (TYPENAME 2756 . 2764) (punctuation 2755 . 2756) (TEMPLATE 2746 . 2754) (close-paren 2743 . 2744) (RETURN 2731 . 2737) (open-paren 2730 . 2731) (close-paren 2729 . 2730) (close-paren 2728 . 2729) (symbol 2727 . 2728) (punctuation 2726 . 2727) (symbol 2713 . 2726) (CONST 2707 . 2712) (punctuation 2705 . 2706) (punctuation 2704 . 2705) (close-paren 2703 . 2704) (symbol 2702 . 2703) (punctuation 2701 . 2702) (symbol 2688 . 2701) (CONST 2682 . 2687) (open-paren 2681 . 2682) (punctuation 2680 . 2681) (punctuation 2679 . 2680) (OPERATOR 2671 . 2679) (symbol 2666 . 2670) (INLINE 2659 . 2665) (close-paren 2657 . 2658) (symbol 2656 . 2657) (TYPENAME 2647 . 2655) (punctuation 2645 . 2646) (symbol 2644 . 2645) (TYPENAME 2635 . 2643) (punctuation 2634 . 2635) (TEMPLATE 2625 . 2633) (punctuation 2617 . 2618) (punctuation 2616 . 2617) (close-paren 2615 . 2616) (symbol 2614 . 2615) (punctuation 2613 . 2614) (symbol 2600 . 2613) (close-paren 2598 . 2599) (symbol 2597 . 2598) (punctuation 2596 . 2597) (symbol 2585 . 2596) (close-paren 2583 . 2584) (symbol 2582 . 2583) (TYPENAME 2573 . 2581) (punctuation 2572 . 2573) (TEMPLATE 2563 . 2571) (punctuation 2560 . 2561) (close-paren 2559 . 2560) (close-paren 2551 . 2552) (symbol 2550 . 2551) (punctuation 2549 . 2550) (symbol 2538 . 2549) (STATIC 2531 . 2537) (punctuation 2526 . 2527) (PRIVATE 2519 . 2526) (close-paren 2517 . 2518) (punctuation 2511 . 2512) (close-paren 2510 . 2511) (open-paren 2509 . 2510) (symbol 2505 . 2509) (punctuation 2504 . 2505) (symbol 2500 . 2504) (open-paren 2492 . 2493) (close-paren 2486 . 2487) (open-paren 2485 . 2486) (symbol 2481 . 2485) (VOID 2476 . 2480) (STATIC 2469 . 2475) (close-paren 2465 . 2466) (punctuation 2459 . 2460) (close-paren 2458 . 2459) (symbol 2457 . 2458) (open-paren 2456 . 2457) (symbol 2448 . 2456) (punctuation 2447 . 2448) (punctuation 2446 . 2447) (symbol 2437 . 2446) (open-paren 2429 . 2430) (close-paren 2423 . 2424) (symbol 2422 . 2423) (symbol 2414 . 2421) (open-paren 2413 . 2414) (symbol 2406 . 2413) (VOID 2401 . 2405) (close-paren 2397 . 2398) (close-paren 2391 . 2392) (punctuation 2377 . 2378) (punctuation 2376 . 2377) (string 2342 . 2375) (punctuation 2341 . 2342) (punctuation 2340 . 2341) (symbol 2336 . 2340) (open-paren 2326 . 2327) (ELSE 2315 . 2319) (close-paren 2307 . 2308) (punctuation 2299 . 2300) (close-paren 2298 . 2299) (open-paren 2297 . 2298) (symbol 2296 . 2297) (close-paren 2294 . 2295) (close-paren 2293 . 2294) (symbol 2292 . 2293) (open-paren 2291 . 2292) (punctuation 2290 . 2291) (punctuation 2289 . 2290) (VOID 2285 . 2289) (punctuation 2284 . 2285) (symbol 2273 . 2284) (open-paren 2272 . 2273) (symbol 2269 . 2272) (open-paren 2259 . 2260) (close-paren 2251 . 2252) (number 2246 . 2251) (punctuation 2244 . 2245) (symbol 2242 . 2243) (close-paren 2241 . 2242) (INT 2238 . 2241) (UNSIGNED 2229 . 2237) (open-paren 2228 . 2229) (open-paren 2227 . 2228) (IF 2224 . 2226) (open-paren 2175 . 2176) (close-paren 2169 . 2170) (symbol 2168 . 2169) (symbol 2160 . 2167) (open-paren 2159 . 2160) (symbol 2150 . 2159) (VOID 2145 . 2149) (close-paren 2141 . 2142) (close-paren 2135 . 2136) (punctuation 2121 . 2122) (punctuation 2120 . 2121) (string 2086 . 2119) (punctuation 2085 . 2086) (punctuation 2084 . 2085) (symbol 2080 . 2084) (open-paren 2070 . 2071) (ELSE 2059 . 2063) (close-paren 2051 . 2052) (punctuation 2043 . 2044) (close-paren 2042 . 2043) (symbol 2039 . 2042) (open-paren 2038 . 2039) (symbol 2037 . 2038) (close-paren 2035 . 2036) (close-paren 2034 . 2035) (symbol 2033 . 2034) (open-paren 2032 . 2033) (punctuation 2031 . 2032) (punctuation 2030 . 2031) (VOID 2026 . 2030) (punctuation 2025 . 2026) (symbol 2014 . 2025) (open-paren 2013 . 2014) (symbol 2010 . 2013) (open-paren 2000 . 2001) (close-paren 1992 . 1993) (number 1987 . 1992) (punctuation 1985 . 1986) (symbol 1983 . 1984) (close-paren 1981 . 1982) (INT 1978 . 1981) (UNSIGNED 1969 . 1977) (open-paren 1968 . 1969) (open-paren 1967 . 1968) (IF 1964 . 1966) (open-paren 1915 . 1916) (close-paren 1909 . 1910) (symbol 1906 . 1909) (punctuation 1904 . 1905) (symbol 1903 . 1904) (CONST 1897 . 1902) (punctuation 1895 . 1896) (symbol 1894 . 1895) (symbol 1886 . 1893) (open-paren 1885 . 1886) (symbol 1876 . 1885) (VOID 1871 . 1875) (close-paren 1867 . 1868) (punctuation 1866 . 1867) (close-paren 1865 . 1866) (symbol 1855 . 1865) (open-paren 1854 . 1855) (SIZEOF 1848 . 1854) (punctuation 1846 . 1847) (close-paren 1844 . 1845) (number 1843 . 1844) (punctuation 1842 . 1843) (open-paren 1841 . 1842) (symbol 1835 . 1841) (RETURN 1828 . 1834) (open-paren 1827 . 1828) (close-paren 1825 . 1826) (open-paren 1824 . 1825) (THROW 1819 . 1824) (CONST 1813 . 1818) (close-paren 1811 . 1812) (open-paren 1810 . 1811) (symbol 1802 . 1810) (symbol 1792 . 1801) (close-paren 1788 . 1789) (punctuation 1782 . 1783) (close-paren 1781 . 1782) (symbol 1780 . 1781) (punctuation 1778 . 1779) (symbol 1777 . 1778) (open-paren 1776 . 1777) (symbol 1766 . 1776) (punctuation 1765 . 1766) (symbol 1761 . 1765) (open-paren 1753 . 1754) (CONST 1743 . 1748) (close-paren 1741 . 1742) (symbol 1740 . 1741) (symbol 1730 . 1739) (punctuation 1728 . 1729) (symbol 1727 . 1728) (punctuation 1726 . 1727) (VOID 1721 . 1725) (open-paren 1720 . 1721) (symbol 1710 . 1720) (VOID 1705 . 1709) (close-paren 1701 . 1702) (punctuation 1695 . 1696) (close-paren 1694 . 1695) (symbol 1693 . 1694) (punctuation 1691 . 1692) (symbol 1690 . 1691) (open-paren 1689 . 1690) (symbol 1679 . 1689) (punctuation 1678 . 1679) (symbol 1674 . 1678) (open-paren 1666 . 1667) (CONST 1656 . 1661) (close-paren 1654 . 1655) (symbol 1653 . 1654) (symbol 1643 . 1652) (punctuation 1641 . 1642) (symbol 1640 . 1641) (symbol 1632 . 1639) (open-paren 1631 . 1632) (symbol 1621 . 1631) (VOID 1616 . 1620) (close-paren 1612 . 1613) (open-paren 1611 . 1612) (close-paren 1610 . 1611) (punctuation 1609 . 1610) (close-paren 1608 . 1609) (symbol 1607 . 1608) (punctuation 1606 . 1607) (symbol 1593 . 1606) (CONST 1587 . 1592) (open-paren 1586 . 1587) (symbol 1573 . 1586) (close-paren 1569 . 1570) (open-paren 1568 . 1569) (close-paren 1567 . 1568) (punctuation 1566 . 1567) (close-paren 1565 . 1566) (symbol 1564 . 1565) (punctuation 1563 . 1564) (symbol 1550 . 1563) (CONST 1544 . 1549) (open-paren 1543 . 1544) (symbol 1530 . 1543) (close-paren 1528 . 1529) (symbol 1527 . 1528) (CLASS 1521 . 1526) (punctuation 1520 . 1521) (TEMPLATE 1511 . 1519) (close-paren 1506 . 1507) (punctuation 1500 . 1501) (number 1499 . 1500) (RETURN 1492 . 1498) (punctuation 1387 . 1388) (punctuation 1386 . 1387) (string 1361 . 1385) (punctuation 1359 . 1360) (punctuation 1358 . 1359) (symbol 1353 . 1357) (close-paren 1344 . 1345) (RETURN 1328 . 1334) (close-paren 1317 . 1318) (punctuation 1301 . 1302) (punctuation 1300 . 1301) (symbol 1298 . 1299) (close-paren 1297 . 1298) (INT 1293 . 1296) (UNSIGNED 1284 . 1292) (open-paren 1283 . 1284) (punctuation 1281 . 1282) (punctuation 1280 . 1281) (string 1249 . 1279) (punctuation 1247 . 1248) (punctuation 1246 . 1247) (symbol 1241 . 1245) (open-paren 1229 . 1230) (close-paren 1219 . 1220) (symbol 1218 . 1219) (punctuation 1217 . 1218) (open-paren 1216 . 1217) (IF 1214 . 1216) (punctuation 1204 . 1205) (close-paren 1203 . 1204) (open-paren 1202 . 1203) (symbol 1194 . 1202) (punctuation 1193 . 1194) (symbol 1189 . 1193) (punctuation 1187 . 1188) (symbol 1185 . 1186) (symbol 1177 . 1184) (open-paren 1167 . 1168) (close-paren 1159 . 1160) (number 1158 . 1159) (punctuation 1156 . 1157) (punctuation 1155 . 1156) (symbol 1150 . 1154) (open-paren 1149 . 1150) (IF 1147 . 1149) (open-paren 1139 . 1140) (CONST 1129 . 1134) (close-paren 1127 . 1128) (number 1126 . 1127) (punctuation 1124 . 1125) (symbol 1119 . 1123) (symbol 1105 . 1118) (punctuation 1104 . 1105) (punctuation 1103 . 1104) (close-paren 1102 . 1103) (VOID 1098 . 1102) (punctuation 1097 . 1098) (symbol 1084 . 1097) (punctuation 1082 . 1083) (symbol 1078 . 1082) (symbol 1068 . 1077) (open-paren 1067 . 1068) (symbol 1059 . 1067) (symbol 1051 . 1058) (close-paren 1047 . 1048) (punctuation 1044 . 1045) (RETURN 1037 . 1043) (open-paren 1036 . 1037) (CONST 1030 . 1035) (close-paren 1028 . 1029) (symbol 1027 . 1028) (symbol 1011 . 1026) (open-paren 1010 . 1011) (symbol 1003 . 1010) (symbol 989 . 1002) (close-paren 985 . 986) (punctuation 982 . 983) (RETURN 975 . 981) (open-paren 974 . 975) (CONST 968 . 973) (close-paren 966 . 967) (symbol 965 . 966) (symbol 955 . 964) (open-paren 954 . 955) (symbol 947 . 954) (symbol 939 . 946) (close-paren 935 . 936) (open-paren 934 . 935) (close-paren 933 . 934) (open-paren 932 . 933) (symbol 919 . 932) (punctuation 914 . 915) (close-paren 913 . 914) (close-paren 904 . 905) (symbol 903 . 904) (punctuation 902 . 903) (symbol 889 . 902) (TYPEDEF 881 . 888) (open-paren 879 . 880) (symbol 872 . 878) (STRUCT 865 . 871) (close-paren 861 . 862) (symbol 860 . 861) (CLASS 854 . 859) (punctuation 853 . 854) (TEMPLATE 844 . 852) (TYPEDEF 783 . 790) (TYPEDEF 759 . 766) (punctuation 634 . 635) (PUBLIC 628 . 634) (open-paren 626 . 627) (symbol 612 . 625) (CLASS 606 . 611) (close-paren 604 . 605) (symbol 603 . 604) (TYPENAME 594 . 602) (punctuation 593 . 594) (TEMPLATE 584 . 592) (close-paren 558 . 559) (close-paren 556 . 557) (punctuation 555 . 556) (close-paren 554 . 555) (open-paren 553 . 554) (symbol 552 . 553) (punctuation 551 . 552) (punctuation 550 . 551) (punctuation 549 . 550) (symbol 548 . 549) (open-paren 547 . 548) (close-paren 546 . 547) (symbol 545 . 546) (punctuation 544 . 545) (symbol 542 . 543) (open-paren 541 . 542) (symbol 533 . 541) (VOID 528 . 532) (INLINE 521 . 527) (close-paren 517 . 518) (symbol 516 . 517) (TYPENAME 507 . 515) (punctuation 506 . 507) (TEMPLATE 497 . 505) (close-paren 493 . 494) (open-paren 492 . 493) (close-paren 491 . 492) (punctuation 490 . 491) (WCHAR 483 . 490) (open-paren 482 . 483) (symbol 474 . 482) (VOID 469 . 473) (INLINE 462 . 468) (close-paren 458 . 459) (open-paren 457 . 458) (close-paren 456 . 457) (punctuation 455 . 456) (CHAR 450 . 454) (open-paren 449 . 450) (symbol 441 . 449) (VOID 436 . 440) (INLINE 429 . 435) (open-paren 425 . 426) (symbol 415 . 424) (NAMESPACE 405 . 414) (punctuation 402 . 403) (close-paren 401 . 402) (punctuation 399 . 400) (close-paren 398 . 399) (close-paren 389 . 390) (symbol 388 . 389) (punctuation 387 . 388) (symbol 374 . 387) (TYPEDEF 366 . 373) (open-paren 364 . 365) (symbol 357 . 363) (STRUCT 350 . 356) (close-paren 346 . 347) (symbol 345 . 346) (CLASS 339 . 344) (punctuation 338 . 339) (TEMPLATE 329 . 337) (punctuation 189 . 190) (PUBLIC 183 . 189) (open-paren 181 . 182) (close-paren 179 . 180) (VOID 175 . 179) (punctuation 174 . 175) (symbol 161 . 174) (CLASS 155 . 160) (close-paren 153 . 154) (open-paren 152 . 153) (TEMPLATE 143 . 151) (close-paren 120 . 121) (symbol 119 . 120) (TYPENAME 110 . 118) (punctuation 109 . 110) (TEMPLATE 100 . 108))
    )
    (semanticdb-table "dum_storage.h"
    :file "dum_storage.h"
    :pointmax 1197
    :major-mode 'c++-mode
    :tokens '(("DUM_STORAGE_H_INCLUDED_GF" variable nil nil ((const . t)) nil nil [35 71]) ("new" include t nil nil [70 84]) ("list" include t nil nil [85 100]) ("set" include t nil nil [101 115]) ("algorithm" include t nil nil [116 136]) ("iostream" include t nil nil [137 156]) ("dum_defaults" type "enum" (("init_size" variable "int" (323 327) ((const . t)) nil ((reparse-symbol . enumsubparts)) [311 327])) nil nil nil nil [293 329]) ("dum_storage" function "int" nil ((prototype . t)) nil nil [340 354]) ("allocate" function ("T" type "class") nil ((pointer . 1) (prototype . t)) nil nil [357 371]) ("allocate" function ("void") (("n" variable ("size_t" type "class") nil nil nil nil [389 398])) ((pointer . 1) (prototype . t)) nil nil [374 399]) ("deallocate" function ("void") (("p" variable "void" nil ((pointer . 1)) nil nil [418 426]) ("n" variable ("size_t" type "class") nil nil nil nil [427 436])) ((prototype . t)) nil nil [402 437]) ("dump" function ("void") nil ((prototype . t)) nil nil [440 452]) ("dum_storage" function "void" nil ((destructor . t) (prototype . t)) nil nil [455 470]) ("link" type "struct" (("next_" variable ("link" type "class") nil ((pointer . 1)) nil nil [520 532])) nil nil nil nil [500 537]) ("hdr" type "struct" (("free_blocks" variable "int" nil nil nil nil [676 688]) ("allocd_blocks" variable "int" nil nil nil nil [704 718])) nil nil nil nil [646 723]) ("grow" function ("void") nil ((prototype . t)) nil nil [727 739]) ("shrink" function ("void") nil ((prototype . t)) nil nil [742 756]) ("verify_memory_contiguous" function ("bool" type "class") (("l" variable ("link" type "class") nil ((pointer . 1)) nil nil [790 798]) ("n" variable "int" nil nil nil nil [799 805])) ((prototype . t)) nil nil [760 806]) ("killer" type "struct" (("()" function ("void") (("p" variable "char" nil ((pointer . 1)) nil nil [911 919])) nil nil ((reparse-symbol . classsubparts)) [895 933])) nil nil nil nil [873 938]) ("size_" variable ("size_t" type "class") nil nil nil nil [942 955]) ("step_" variable ("size_t" type "class") nil nil nil nil [958 971]) ("dum_mem_" variable "int" nil nil nil nil [1058 1067]) ("head_" variable ("link" type "class") nil ((pointer . 1)) nil nil [1071 1083]) ("dum_storage.hcc" include nil nil nil [1163 1189]))
    :unmatched-syntax '((punctuation 1155 . 1156) (close-paren 1154 . 1155) (punctuation 1152 . 1153) (close-paren 1151 . 1152) (symbol 1150 . 1151) (punctuation 1149 . 1150) (CHAR 1144 . 1148) (open-paren 1143 . 1144) (symbol 1137 . 1143) (punctuation 1135 . 1136) (symbol 1132 . 1135) (punctuation 1128 . 1129) (close-paren 1127 . 1128) (symbol 1126 . 1127) (punctuation 1125 . 1126) (CHAR 1120 . 1124) (open-paren 1119 . 1120) (symbol 1110 . 1119) (VOID 1105 . 1109) (punctuation 1101 . 1102) (close-paren 1100 . 1101) (open-paren 1099 . 1100) (symbol 1088 . 1099) (close-paren 1056 . 1057) (punctuation 1055 . 1056) (CHAR 1050 . 1054) (punctuation 1049 . 1050) (symbol 1045 . 1049) (punctuation 1044 . 1045) (punctuation 1043 . 1044) (symbol 1040 . 1043) (close-paren 702 . 703) (punctuation 701 . 702) (CHAR 697 . 701) (punctuation 696 . 697) (symbol 693 . 696) (close-paren 674 . 675) (punctuation 673 . 674) (CHAR 669 . 673) (punctuation 668 . 669) (symbol 665 . 668) (punctuation 479 . 480) (PRIVATE 472 . 479) (punctuation 336 . 337) (PUBLIC 330 . 336) (open-paren 232 . 233) (symbol 220 . 231) (CLASS 214 . 219) (close-paren 212 . 213) (symbol 211 . 212) (TYPENAME 202 . 210) (punctuation 201 . 202) (TEMPLATE 192 . 200))
    )
   (semanticdb-table "dum_storage.hcc"
    :file "dum_storage.hcc"
    :pointmax 6241
    :major-mode 'c++-mode
    :tokens '(("dum_storage.h" include nil nil nil [1 25]) ("p" variable "char" "0" ((pointer . 1)) nil nil [552 564]) ("endl" variable "int" nil nil nil nil [693 698]) ("endl" variable "int" nil nil nil nil [766 771]) ("p" variable "int" nil nil nil nil [905 907]) ("endl" variable "int" nil nil nil nil [1189 1194]) ("hdr" variable "int" nil nil nil nil [1221 1225]) ("i" variable "int" "0" nil nil nil [1386 1396]) ("init_size" variable "int" nil nil nil nil [1401 1411]) ("endl" variable "int" nil nil nil nil [1903 1908]) ("pChunk" variable "char" "0" ((pointer . 1)) nil nil [2177 2194]) ("pChunk" variable "int" "*it;" nil nil nil [2439 2452]) ("endl" variable "int" nil nil nil nil [2606 2611]) ("endl" variable "int" nil nil nil nil [4172 4177]) ("endl" variable "int" nil nil nil nil [4284 4289]) ("endl" variable "int" nil nil nil nil [4342 4347]) ("itDel" variable "int" "it;" nil nil nil [4912 4923]) ("itDel" variable "int" nil ((pointer . 1)) nil nil [5122 5129]) ("false" variable "int" nil nil nil nil [5972 5978]) ("i" variable "int" "0" nil nil nil [5985 5993]) ("n" variable "int" nil nil nil nil [5996 5998]) ("next_" variable "int" nil nil nil nil [6121 6127]) ("false" variable "int" nil nil nil nil [6163 6169]) ("false" variable "int" nil nil nil nil [6207 6213]) ("true" variable "int" nil nil nil nil [6233 6238]))
    :unmatched-syntax '((close-paren 6239 . 6240) (RETURN 6226 . 6232) (close-paren 6222 . 6223) (close-paren 6218 . 6219) (RETURN 6200 . 6206) (open-paren 6192 . 6193) (ELSE 6188 . 6192) (close-paren 6182 . 6183) (close-paren 6176 . 6177) (RETURN 6156 . 6162) (open-paren 6146 . 6147) (ELSE 6142 . 6146) (close-paren 6134 . 6135) (punctuation 6120 . 6121) (punctuation 6119 . 6120) (symbol 6118 . 6119) (punctuation 6116 . 6117) (symbol 6114 . 6115) (open-paren 6104 . 6105) (close-paren 6103 . 6104) (symbol 6098 . 6103) (punctuation 6096 . 6097) (punctuation 6095 . 6096) (close-paren 6093 . 6094) (symbol 6092 . 6093) (open-paren 6091 . 6092) (punctuation 6090 . 6091) (punctuation 6089 . 6090) (CHAR 6085 . 6089) (punctuation 6084 . 6085) (symbol 6068 . 6084) (punctuation 6066 . 6067) (close-paren 6064 . 6065) (symbol 6059 . 6064) (punctuation 6058 . 6059) (punctuation 6057 . 6058) (symbol 6056 . 6057) (open-paren 6055 . 6056) (punctuation 6054 . 6055) (punctuation 6053 . 6054) (CHAR 6049 . 6053) (punctuation 6048 . 6049) (symbol 6032 . 6048) (open-paren 6031 . 6032) (IF 6029 . 6031) (open-paren 6021 . 6022) (close-paren 6020 . 6021) (symbol 6015 . 6020) (punctuation 6014 . 6015) (punctuation 6013 . 6014) (symbol 6012 . 6013) (open-paren 6011 . 6012) (IF 6009 . 6011) (open-paren 6003 . 6004) (close-paren 6002 . 6003) (symbol 6001 . 6002) (punctuation 6000 . 6001) (punctuation 5999 . 6000) (punctuation 5995 . 5996) (symbol 5994 . 5995) (open-paren 5984 . 5985) (FOR 5981 . 5984) (RETURN 5965 . 5971) (close-paren 5963 . 5964) (symbol 5962 . 5963) (punctuation 5961 . 5962) (open-paren 5960 . 5961) (IF 5958 . 5960) (open-paren 5954 . 5955) (close-paren 5952 . 5953) (symbol 5951 . 5952) (INT 5947 . 5950) (punctuation 5945 . 5946) (symbol 5944 . 5945) (punctuation 5943 . 5944) (symbol 5938 . 5942) (open-paren 5937 . 5938) (symbol 5913 . 5937) (punctuation 5912 . 5913) (punctuation 5911 . 5912) (close-paren 5910 . 5911) (symbol 5909 . 5910) (punctuation 5908 . 5909) (symbol 5897 . 5908) (symbol 5892 . 5896) (close-paren 5890 . 5891) (symbol 5889 . 5890) (CLASS 5883 . 5888) (punctuation 5882 . 5883) (TEMPLATE 5874 . 5882) (close-paren 5805 . 5806) (open-paren 5803 . 5804) (close-paren 5801 . 5802) (open-paren 5800 . 5801) (symbol 5796 . 5800) (punctuation 5795 . 5796) (punctuation 5794 . 5795) (close-paren 5793 . 5794) (symbol 5792 . 5793) (punctuation 5791 . 5792) (symbol 5780 . 5791) (VOID 5775 . 5779) (close-paren 5773 . 5774) (symbol 5772 . 5773) (CLASS 5766 . 5771) (punctuation 5765 . 5766) (TEMPLATE 5757 . 5765) (close-paren 5688 . 5689) (punctuation 5686 . 5687) (close-paren 5685 . 5686) (close-paren 5684 . 5685) (open-paren 5683 . 5684) (symbol 5677 . 5683) (punctuation 5675 . 5676) (close-paren 5674 . 5675) (open-paren 5673 . 5674) (symbol 5670 . 5673) (punctuation 5669 . 5670) (symbol 5661 . 5669) (punctuation 5659 . 5660) (close-paren 5658 . 5659) (open-paren 5657 . 5658) (symbol 5652 . 5657) (punctuation 5651 . 5652) (symbol 5643 . 5651) (open-paren 5642 . 5643) (symbol 5634 . 5642) (punctuation 5633 . 5634) (punctuation 5632 . 5633) (symbol 5629 . 5632) (open-paren 5625 . 5626) (close-paren 5623 . 5624) (open-paren 5622 . 5623) (symbol 5611 . 5622) (punctuation 5610 . 5611) (punctuation 5609 . 5610) (punctuation 5608 . 5609) (close-paren 5607 . 5608) (symbol 5606 . 5607) (punctuation 5605 . 5606) (symbol 5594 . 5605) (close-paren 5592 . 5593) (symbol 5591 . 5592) (CLASS 5585 . 5590) (punctuation 5584 . 5585) (TEMPLATE 5576 . 5584) (close-paren 5507 . 5508) (open-paren 5249 . 5250) (close-paren 5247 . 5248) (open-paren 5246 . 5247) (symbol 5242 . 5246) (punctuation 5241 . 5242) (punctuation 5240 . 5241) (close-paren 5239 . 5240) (symbol 5238 . 5239) (punctuation 5237 . 5238) (symbol 5226 . 5237) (VOID 5221 . 5225) (close-paren 5219 . 5220) (symbol 5218 . 5219) (CLASS 5212 . 5217) (punctuation 5211 . 5212) (TEMPLATE 5203 . 5211) (close-paren 5134 . 5135) (close-paren 5132 . 5133) (close-paren 5120 . 5121) (open-paren 5119 . 5120) (symbol 5112 . 5118) (punctuation 5106 . 5107) (close-paren 5105 . 5106) (symbol 5100 . 5105) (open-paren 5099 . 5100) (symbol 5094 . 5099) (punctuation 5093 . 5094) (symbol 5085 . 5093) (open-paren 4988 . 4989) (close-paren 4984 . 4985) (close-paren 4983 . 4984) (open-paren 4982 . 4983) (symbol 4979 . 4982) (punctuation 4978 . 4979) (symbol 4970 . 4978) (punctuation 4968 . 4969) (punctuation 4967 . 4968) (symbol 4961 . 4966) (open-paren 4960 . 4961) (IF 4957 . 4959) (close-paren 4953 . 4954) (close-paren 4949 . 4950) (punctuation 4943 . 4944) (BREAK 4938 . 4943) (close-paren 4930 . 4931) (open-paren 4856 . 4857) (close-paren 4848 . 4849) (close-paren 4847 . 4848) (open-paren 4846 . 4847) (symbol 4841 . 4846) (punctuation 4840 . 4841) (symbol 4827 . 4840) (punctuation 4826 . 4827) (punctuation 4825 . 4826) (symbol 4823 . 4825) (open-paren 4822 . 4823) (IF 4819 . 4821) (punctuation 4769 . 4770) (close-paren 4768 . 4769) (symbol 4767 . 4768) (close-paren 4766 . 4767) (punctuation 4765 . 4766) (CHAR 4761 . 4765) (open-paren 4760 . 4761) (open-paren 4759 . 4760) (symbol 4754 . 4759) (punctuation 4753 . 4754) (symbol 4740 . 4753) (punctuation 4739 . 4740) (punctuation 4738 . 4739) (symbol 4736 . 4738) (punctuation 4728 . 4729) (close-paren 4727 . 4728) (symbol 4726 . 4727) (close-paren 4725 . 4726) (punctuation 4724 . 4725) (CHAR 4720 . 4724) (open-paren 4719 . 4720) (open-paren 4718 . 4719) (symbol 4712 . 4718) (punctuation 4711 . 4712) (symbol 4700 . 4711) (punctuation 4699 . 4700) (punctuation 4698 . 4699) (symbol 4696 . 4698) (punctuation 4688 . 4689) (close-paren 4687 . 4688) (symbol 4685 . 4687) (punctuation 4684 . 4685) (open-paren 4683 . 4684) (symbol 4677 . 4683) (punctuation 4675 . 4676) (symbol 4672 . 4674) (punctuation 4671 . 4672) (symbol 4667 . 4670) (open-paren 4603 . 4604) (close-paren 4597 . 4598) (close-paren 4596 . 4597) (close-paren 4595 . 4596) (symbol 4590 . 4595) (punctuation 4588 . 4589) (symbol 4585 . 4587) (punctuation 4584 . 4585) (open-paren 4583 . 4584) (punctuation 4581 . 4582) (symbol 4579 . 4580) (open-paren 4578 . 4579) (punctuation 4576 . 4577) (punctuation 4575 . 4576) (close-paren 4573 . 4574) (symbol 4571 . 4573) (punctuation 4570 . 4571) (punctuation 4568 . 4569) (punctuation 4567 . 4568) (symbol 4565 . 4566) (open-paren 4564 . 4565) (open-paren 4563 . 4564) (IF 4560 . 4562) (open-paren 4554 . 4555) (close-paren 4550 . 4551) (symbol 4548 . 4550) (punctuation 4547 . 4548) (punctuation 4546 . 4547) (punctuation 4537 . 4538) (close-paren 4536 . 4537) (open-paren 4535 . 4536) (symbol 4532 . 4535) (punctuation 4531 . 4532) (symbol 4523 . 4531) (punctuation 4521 . 4522) (punctuation 4520 . 4521) (symbol 4517 . 4519) (punctuation 4508 . 4509) (close-paren 4507 . 4508) (open-paren 4506 . 4507) (symbol 4501 . 4506) (punctuation 4500 . 4501) (symbol 4492 . 4500) (punctuation 4490 . 4491) (symbol 4487 . 4489) (symbol 4478 . 4486) (punctuation 4477 . 4478) (punctuation 4476 . 4477) (close-paren 4475 . 4476) (punctuation 4474 . 4475) (CHAR 4470 . 4474) (punctuation 4469 . 4470) (symbol 4465 . 4469) (open-paren 4464 . 4465) (FOR 4460 . 4463) (punctuation 4411 . 4412) (close-paren 4410 . 4411) (open-paren 4409 . 4410) (symbol 4406 . 4409) (punctuation 4405 . 4406) (symbol 4397 . 4405) (punctuation 4395 . 4396) (symbol 4389 . 4394) (symbol 4380 . 4388) (punctuation 4379 . 4380) (punctuation 4378 . 4379) (close-paren 4377 . 4378) (punctuation 4376 . 4377) (CHAR 4372 . 4376) (punctuation 4371 . 4372) (symbol 4367 . 4371) (close-paren 4362 . 4363) (punctuation 4358 . 4359) (RETURN 4352 . 4358) (punctuation 4340 . 4341) (punctuation 4339 . 4340) (symbol 4333 . 4338) (punctuation 4331 . 4332) (punctuation 4330 . 4331) (string 4317 . 4329) (punctuation 4315 . 4316) (punctuation 4314 . 4315) (symbol 4312 . 4313) (punctuation 4310 . 4311) (punctuation 4309 . 4310) (string 4302 . 4308) (punctuation 4300 . 4301) (punctuation 4299 . 4300) (symbol 4294 . 4298) (punctuation 4282 . 4283) (punctuation 4281 . 4282) (string 4226 . 4280) (punctuation 4224 . 4225) (punctuation 4223 . 4224) (symbol 4218 . 4222) (open-paren 4212 . 4213) (close-paren 4208 . 4209) (number 4207 . 4208) (punctuation 4205 . 4206) (punctuation 4204 . 4205) (symbol 4202 . 4203) (open-paren 4201 . 4202) (IF 4198 . 4200) (close-paren 4193 . 4194) (punctuation 4189 . 4190) (RETURN 4183 . 4189) (punctuation 4170 . 4171) (punctuation 4169 . 4170) (string 4136 . 4168) (punctuation 4134 . 4135) (punctuation 4133 . 4134) (symbol 4128 . 4132) (open-paren 4122 . 4123) (close-paren 4118 . 4119) (symbol 4117 . 4118) (punctuation 4116 . 4117) (open-paren 4115 . 4116) (IF 4112 . 4114) (open-paren 4108 . 4109) (close-paren 4106 . 4107) (symbol 4105 . 4106) (symbol 4098 . 4104) (punctuation 4096 . 4097) (symbol 4095 . 4096) (punctuation 4094 . 4095) (VOID 4089 . 4093) (open-paren 4088 . 4089) (symbol 4078 . 4088) (punctuation 4077 . 4078) (punctuation 4076 . 4077) (close-paren 4075 . 4076) (symbol 4074 . 4075) (punctuation 4073 . 4074) (symbol 4062 . 4073) (VOID 4057 . 4061) (close-paren 4055 . 4056) (symbol 4054 . 4055) (CLASS 4048 . 4053) (punctuation 4047 . 4048) (TEMPLATE 4039 . 4047) (close-paren 3970 . 3971) (punctuation 3967 . 3968) (number 3966 . 3967) (RETURN 3959 . 3965) (open-paren 3135 . 3136) (close-paren 3133 . 3134) (symbol 3132 . 3133) (symbol 3125 . 3131) (open-paren 3124 . 3125) (symbol 3116 . 3124) (punctuation 3115 . 3116) (punctuation 3114 . 3115) (close-paren 3113 . 3114) (symbol 3112 . 3113) (punctuation 3111 . 3112) (symbol 3100 . 3111) (punctuation 3098 . 3099) (VOID 3094 . 3098) (close-paren 3092 . 3093) (symbol 3091 . 3092) (CLASS 3085 . 3090) (punctuation 3084 . 3085) (TEMPLATE 3076 . 3084) (close-paren 3007 . 3008) (punctuation 3005 . 3006) (close-paren 3004 . 3005) (symbol 3003 . 3004) (open-paren 3002 . 3003) (close-paren 3001 . 3002) (punctuation 3000 . 3001) (symbol 2998 . 2999) (punctuation 2997 . 2998) (symbol 2981 . 2997) (RETURN 2974 . 2980) (punctuation 2969 . 2970) (close-paren 2968 . 2969) (close-paren 2967 . 2968) (open-paren 2966 . 2967) (symbol 2961 . 2966) (punctuation 2960 . 2961) (symbol 2949 . 2960) (punctuation 2948 . 2949) (punctuation 2947 . 2948) (symbol 2945 . 2947) (open-paren 2944 . 2945) (symbol 2939 . 2944) (punctuation 2938 . 2939) (symbol 2927 . 2938) (punctuation 2926 . 2927) (punctuation 2925 . 2926) (symbol 2923 . 2925) (punctuation 2882 . 2883) (close-paren 2881 . 2882) (symbol 2880 . 2881) (open-paren 2879 . 2880) (symbol 2873 . 2879) (punctuation 2872 . 2873) (symbol 2859 . 2872) (punctuation 2858 . 2859) (punctuation 2857 . 2858) (symbol 2855 . 2857) (punctuation 2770 . 2771) (close-paren 2769 . 2770) (close-paren 2768 . 2769) (open-paren 2767 . 2768) (symbol 2762 . 2767) (punctuation 2761 . 2762) (symbol 2750 . 2761) (punctuation 2749 . 2750) (punctuation 2748 . 2749) (symbol 2746 . 2748) (open-paren 2745 . 2746) (punctuation 2744 . 2745) (punctuation 2742 . 2743) (symbol 2740 . 2741) (punctuation 2739 . 2740) (CHAR 2734 . 2738) (punctuation 2692 . 2693) (close-paren 2691 . 2692) (symbol 2685 . 2691) (open-paren 2684 . 2685) (symbol 2678 . 2684) (punctuation 2676 . 2677) (symbol 2673 . 2675) (punctuation 2671 . 2672) (symbol 2668 . 2671) (close-paren 2638 . 2639) (close-paren 2634 . 2635) (punctuation 2628 . 2629) (number 2625 . 2628) (RETURN 2618 . 2624) (punctuation 2604 . 2605) (punctuation 2603 . 2604) (string 2561 . 2602) (punctuation 2559 . 2560) (punctuation 2558 . 2559) (symbol 2553 . 2557) (open-paren 2545 . 2546) (close-paren 2539 . 2540) (symbol 2533 . 2539) (punctuation 2532 . 2533) (open-paren 2531 . 2532) (IF 2528 . 2530) (punctuation 2522 . 2523) (close-paren 2521 . 2522) (open-paren 2520 . 2521) (symbol 2509 . 2520) (punctuation 2507 . 2508) (symbol 2500 . 2506) (open-paren 2494 . 2495) (close-paren 2490 . 2491) (symbol 2484 . 2490) (punctuation 2483 . 2484) (open-paren 2482 . 2483) (IF 2479 . 2481) (close-paren 2474 . 2475) (close-paren 2470 . 2471) (punctuation 2464 . 2465) (BREAK 2459 . 2464) (open-paren 2431 . 2432) (close-paren 2425 . 2426) (close-paren 2424 . 2425) (open-paren 2423 . 2424) (symbol 2418 . 2423) (punctuation 2417 . 2418) (symbol 2406 . 2417) (punctuation 2405 . 2406) (punctuation 2404 . 2405) (symbol 2402 . 2404) (punctuation 2400 . 2401) (open-paren 2399 . 2400) (IF 2396 . 2398) (punctuation 2390 . 2391) (close-paren 2389 . 2390) (symbol 2387 . 2389) (punctuation 2386 . 2387) (open-paren 2385 . 2386) (symbol 2379 . 2385) (punctuation 2377 . 2378) (symbol 2374 . 2376) (punctuation 2373 . 2374) (symbol 2369 . 2372) (open-paren 2363 . 2364) (close-paren 2359 . 2360) (symbol 2357 . 2359) (punctuation 2356 . 2357) (punctuation 2355 . 2356) (punctuation 2346 . 2347) (close-paren 2345 . 2346) (open-paren 2344 . 2345) (symbol 2341 . 2344) (punctuation 2340 . 2341) (symbol 2332 . 2340) (punctuation 2330 . 2331) (punctuation 2329 . 2330) (symbol 2326 . 2328) (punctuation 2317 . 2318) (close-paren 2316 . 2317) (open-paren 2315 . 2316) (symbol 2310 . 2315) (punctuation 2309 . 2310) (symbol 2301 . 2309) (punctuation 2299 . 2300) (symbol 2296 . 2298) (symbol 2287 . 2295) (punctuation 2286 . 2287) (punctuation 2285 . 2286) (close-paren 2284 . 2285) (punctuation 2283 . 2284) (CHAR 2279 . 2283) (punctuation 2278 . 2279) (symbol 2274 . 2278) (open-paren 2273 . 2274) (FOR 2269 . 2272) (open-paren 2120 . 2121) (close-paren 2118 . 2119) (open-paren 2117 . 2118) (symbol 2109 . 2117) (punctuation 2108 . 2109) (punctuation 2107 . 2108) (close-paren 2106 . 2107) (symbol 2105 . 2106) (punctuation 2104 . 2105) (symbol 2093 . 2104) (punctuation 2091 . 2092) (symbol 2090 . 2091) (close-paren 2088 . 2089) (symbol 2087 . 2088) (CLASS 2081 . 2086) (punctuation 2080 . 2081) (TEMPLATE 2071 . 2079) (close-paren 2002 . 2003) (punctuation 1965 . 1966) (close-paren 1964 . 1965) (symbol 1963 . 1964) (open-paren 1962 . 1963) (close-paren 1961 . 1962) (punctuation 1959 . 1960) (symbol 1955 . 1958) (punctuation 1954 . 1955) (symbol 1938 . 1954) (RETURN 1931 . 1937) (close-paren 1926 . 1927) (punctuation 1922 . 1923) (number 1921 . 1922) (RETURN 1914 . 1920) (punctuation 1901 . 1902) (punctuation 1900 . 1901) (string 1858 . 1899) (punctuation 1856 . 1857) (punctuation 1855 . 1856) (symbol 1850 . 1854) (open-paren 1844 . 1845) (close-paren 1840 . 1841) (symbol 1839 . 1840) (punctuation 1838 . 1839) (open-paren 1837 . 1838) (IF 1834 . 1836) (open-paren 1755 . 1756) (close-paren 1753 . 1754) (symbol 1752 . 1753) (punctuation 1751 . 1752) (CHAR 1746 . 1750) (open-paren 1745 . 1746) (symbol 1739 . 1745) (punctuation 1738 . 1739) (punctuation 1737 . 1738) (close-paren 1736 . 1737) (symbol 1735 . 1736) (punctuation 1734 . 1735) (symbol 1723 . 1734) (punctuation 1721 . 1722) (symbol 1718 . 1721) (punctuation 1717 . 1718) (punctuation 1716 . 1717) (close-paren 1715 . 1716) (symbol 1714 . 1715) (punctuation 1713 . 1714) (symbol 1702 . 1713) (TYPENAME 1693 . 1701) (close-paren 1691 . 1692) (symbol 1690 . 1691) (CLASS 1684 . 1689) (punctuation 1683 . 1684) (TEMPLATE 1674 . 1682) (close-paren 1480 . 1481) (close-paren 1478 . 1479) (punctuation 1474 . 1475) (close-paren 1473 . 1474) (symbol 1472 . 1473) (open-paren 1471 . 1472) (SIZEOF 1465 . 1471) (punctuation 1463 . 1464) (symbol 1461 . 1462) (punctuation 1459 . 1460) (symbol 1457 . 1458) (punctuation 1450 . 1451) (close-paren 1449 . 1450) (symbol 1448 . 1449) (open-paren 1447 . 1448) (symbol 1441 . 1447) (punctuation 1440 . 1441) (symbol 1429 . 1440) (punctuation 1428 . 1429) (punctuation 1427 . 1428) (symbol 1425 . 1427) (open-paren 1419 . 1420) (close-paren 1415 . 1416) (symbol 1414 . 1415) (punctuation 1413 . 1414) (punctuation 1412 . 1413) (punctuation 1399 . 1400) (symbol 1397 . 1398) (open-paren 1385 . 1386) (FOR 1381 . 1384) (punctuation 1270 . 1271) (close-paren 1269 . 1270) (symbol 1266 . 1269) (open-paren 1265 . 1266) (SIZEOF 1259 . 1265) (punctuation 1257 . 1258) (symbol 1255 . 1256) (punctuation 1253 . 1254) (symbol 1251 . 1252) (punctuation 1247 . 1248) (close-paren 1246 . 1247) (symbol 1245 . 1246) (open-paren 1244 . 1245) (symbol 1238 . 1244) (punctuation 1236 . 1237) (symbol 1233 . 1235) (punctuation 1232 . 1233) (symbol 1228 . 1231) (close-paren 1219 . 1220) (symbol 1218 . 1219) (open-paren 1217 . 1218) (symbol 1214 . 1217) (close-paren 1209 . 1210) (punctuation 1205 . 1206) (RETURN 1199 . 1205) (punctuation 1187 . 1188) (punctuation 1186 . 1187) (string 1147 . 1185) (punctuation 1145 . 1146) (punctuation 1144 . 1145) (symbol 1139 . 1143) (open-paren 1133 . 1134) (close-paren 1129 . 1130) (symbol 1128 . 1129) (punctuation 1127 . 1128) (open-paren 1126 . 1127) (IF 1123 . 1125) (open-paren 1036 . 1037) (close-paren 1034 . 1035) (symbol 1033 . 1034) (punctuation 1032 . 1033) (CHAR 1027 . 1031) (open-paren 1026 . 1027) (symbol 1017 . 1026) (punctuation 1016 . 1017) (punctuation 1015 . 1016) (close-paren 1014 . 1015) (symbol 1013 . 1014) (punctuation 1012 . 1013) (symbol 1001 . 1012) (VOID 996 . 1000) (close-paren 994 . 995) (symbol 993 . 994) (CLASS 987 . 992) (punctuation 986 . 987) (TEMPLATE 977 . 985) (close-paren 908 . 909) (RETURN 898 . 904) (punctuation 894 . 895) (close-paren 893 . 894) (symbol 892 . 893) (open-paren 891 . 892) (symbol 882 . 891) (punctuation 878 . 879) (close-paren 877 . 878) (symbol 876 . 877) (open-paren 875 . 876) (symbol 866 . 875) (punctuation 865 . 866) (symbol 857 . 865) (close-paren 789 . 790) (punctuation 785 . 786) (close-paren 784 . 785) (number 783 . 784) (open-paren 782 . 783) (RETURN 776 . 782) (punctuation 764 . 765) (punctuation 763 . 764) (string 742 . 762) (punctuation 740 . 741) (punctuation 739 . 740) (symbol 734 . 738) (open-paren 728 . 729) (close-paren 724 . 725) (symbol 723 . 724) (punctuation 722 . 723) (open-paren 721 . 722) (IF 718 . 720) (close-paren 712 . 713) (punctuation 708 . 709) (THROW 703 . 708) (punctuation 691 . 692) (punctuation 690 . 691) (string 646 . 689) (punctuation 644 . 645) (punctuation 643 . 644) (symbol 638 . 642) (open-paren 632 . 633) (close-paren 628 . 629) (symbol 619 . 628) (punctuation 618 . 619) (punctuation 617 . 618) (symbol 614 . 617) (open-paren 613 . 614) (symbol 607 . 612) (close-paren 603 . 604) (punctuation 599 . 600) (close-paren 598 . 599) (symbol 593 . 598) (open-paren 592 . 593) (CHAR 588 . 592) (symbol 584 . 587) (punctuation 582 . 583) (symbol 580 . 581) (open-paren 574 . 575) (symbol 568 . 571) (open-paren 513 . 514) (close-paren 511 . 512) (open-paren 510 . 511) (symbol 499 . 510) (punctuation 498 . 499) (punctuation 497 . 498) (close-paren 496 . 497) (symbol 495 . 496) (punctuation 494 . 495) (symbol 483 . 494) (punctuation 481 . 482) (CHAR 477 . 481) (close-paren 475 . 476) (symbol 474 . 475) (CLASS 468 . 473) (punctuation 467 . 468) (TEMPLATE 458 . 466) (close-paren 389 . 390) (punctuation 387 . 388) (close-paren 386 . 387) (symbol 385 . 386) (open-paren 384 . 385) (symbol 378 . 384) (punctuation 376 . 377) (symbol 373 . 375) (punctuation 371 . 372) (symbol 368 . 371) (punctuation 326 . 327) (close-paren 325 . 326) (open-paren 324 . 325) (symbol 313 . 324) (punctuation 311 . 312) (symbol 309 . 310) (punctuation 308 . 309) (CHAR 303 . 307) (punctuation 259 . 260) (close-paren 258 . 259) (symbol 257 . 258) (open-paren 256 . 257) (SIZEOF 250 . 256) (punctuation 248 . 249) (symbol 242 . 247) (punctuation 238 . 239) (close-paren 237 . 238) (symbol 236 . 237) (open-paren 235 . 236) (SIZEOF 229 . 235) (punctuation 228 . 229) (symbol 219 . 228) (punctuation 217 . 218) (close-paren 215 . 216) (symbol 212 . 215) (open-paren 211 . 212) (SIZEOF 205 . 211) (punctuation 203 . 204) (symbol 197 . 202) (open-paren 162 . 163) (close-paren 160 . 161) (open-paren 159 . 160) (symbol 148 . 159) (punctuation 147 . 148) (punctuation 146 . 147) (close-paren 145 . 146) (symbol 144 . 145) (punctuation 143 . 144) (symbol 132 . 143) (close-paren 130 . 131) (symbol 129 . 130) (CLASS 123 . 128) (punctuation 122 . 123) (TEMPLATE 113 . 121))
    )
   )
  )
