;; Object semantic.cache
;; SEMANTICDB Tags save file
(semanticdb-project-database "semantic.cache"
  :file "semantic.cache"
  :tables (list 
   (semanticdb-table "main.cpp"
    :file "main.cpp"
    :pointmax 2733
    :major-mode 'c++-mode
    :tokens '(("pool_allocator.h" include nil nil nil [1 28]) ("ss_allocator.h" include nil nil nil [29 54]) ("vector" include t nil nil [55 72]) ("iostream" include t nil nil [73 92]) ("algorithm" include t nil nil [93 113]) ("timer.h" include nil nil nil [114 132]) ("string" include t nil nil [133 150]) ("ctime" include t nil nil [151 167]) ("size" variable "int" "10000" ((const . t)) nil nil [190 213]) ("foo" type "struct" (("foo" function ("foo" type "struct") (("s" variable ("string" type "class") "\"Hello world\"" ((const . t)) nil nil [265 296]) ("i" variable "int" "0" nil nil nil [298 307])) ((constructor . t)) nil ((reparse-symbol . classsubparts)) [261 323]) ("s_" variable ("string" type "class") nil nil nil nil [326 336]) ("i_" variable "int" nil nil nil nil [339 346]) ("<" function ("bool" type "class") (("other" variable ("foo" type "class") nil ((const . t)) nil nil [365 382])) nil nil ((reparse-symbol . classsubparts)) [349 408])) nil nil nil nil [246 411]) ("generator" function ("foo" type "class") nil nil nil nil [413 469]) ("main" function ("int") nil nil nil nil [473 2730]))
    :unmatched-syntax 'nil
    )
   (semanticdb-table "pool.h"
    :file "pool.h"
    :pointmax 4307
    :major-mode 'c++-mode
    :tokens '(("POOL_H_INCLUDED_GF" variable nil nil ((const . t)) nil nil [28 71]) ("exception" include t nil nil [217 237]) ("list" include t nil nil [238 253]) ("algorithm" include t nil nil [254 274]) ("iostream" include t nil nil [275 294]) ("pool" type "class" (("logic_error" type "class" (("public" label ((reparse-symbol . classsubparts)) [372 379]) ("logic_error" function ("logic_error" type "class") (("what" variable "char" nil ((const . t) (pointer . 1)) nil nil [396 413])) ((constructor . t)) nil ((reparse-symbol . classsubparts)) [384 427]) ("what" function ("char") nil ((const . t) (pointer . 1)) nil ((reparse-symbol . classsubparts)) [432 465]) ("private" label ((reparse-symbol . classsubparts)) [468 476]) ("what_" variable "char" nil ((const . t) (pointer . 1)) nil nil [481 499])) (("std::exception")) nil nil ((reparse-symbol . classsubparts)) [326 504]) ("pool_defaults" type "enum" (("init_size" variable "int" (543 551) ((const . t)) nil ((reparse-symbol . enumsubparts)) [531 551]) ("min_size" variable "int" (568 571) ((const . t)) nil ((reparse-symbol . enumsubparts)) [557 571])) nil nil nil ((reparse-symbol . classsubparts)) [507 576]) ("public" label ((reparse-symbol . classsubparts)) [577 584]) ("pool" function ("pool" type "class") (("size" variable ("size_t" type "class") "init_size)" nil nil nil [592 616])) ((constructor . t)) nil ((reparse-symbol . classsubparts)) [587 957]) ("pool" function "void" nil ((destructor . t)) nil ((reparse-symbol . classsubparts)) [961 1054]) ("allocate" function ("void") (("size" variable ("size_t" type "class") nil nil nil nil [1074 1086])) ((pointer . 1)) nil ((reparse-symbol . classsubparts)) [1059 2212]) ("deallocate" function ("void") (("p" variable "void" nil ((pointer . 1)) nil nil [2232 2240]) ("" variable ("size_t" type "class") nil nil nil nil [2241 2249])) nil nil ((reparse-symbol . classsubparts)) [2216 3183]) ("dump" function ("void") nil nil nil ((reparse-symbol . classsubparts)) [3186 3455]) ("private" label ((reparse-symbol . classsubparts)) [3456 3464]) ("size_" variable ("size_t" type "class") nil nil nil nil [3467 3480]) ("pool_mem_" variable "int" nil nil nil nil [3501 3511]) ("prev_" variable ("block" type "class") nil ((pointer . 1)) nil nil [3532 3545]) ("next_" variable ("block" type "class") nil ((pointer . 1)) nil nil [3550 3563]) ("size_" variable ("size_t" type "class") nil nil nil nil [3568 3581]) ("free_" variable "int" nil nil nil nil [3586 3596]) ("block" function "int" (("prev" variable ("block" type "class") nil ((pointer . 1)) nil nil [3607 3619]) ("next" variable ("block" type "class") nil ((pointer . 1)) nil nil [3620 3632]) ("size" variable ("size_t" type "class") nil nil nil nil [3633 3645]) ("free" variable "int" nil nil nil nil [3646 3655])) nil nil ((reparse-symbol . classsubparts)) [3601 3719]) ("block" function "void" nil ((destructor . t)) nil ((reparse-symbol . classsubparts)) [3724 3734]) ("blocks_" variable ("block" type "class") nil ((pointer . 1)) nil nil [3742 3758]) ("()" function ("void") (("p" variable "char" nil ((pointer . 1)) nil nil [3855 3863])) nil nil ((reparse-symbol . classsubparts)) [3839 3877]) ("p" variable "int" nil nil nil nil [3923 3925]) ("new_block" variable ("block" type "class") nil ((pointer . 1)) nil nil [3961 3978]) ("push_back" function "int" (("" variable ("p" type "class") nil nil nil nil [4038 4040])) ((prototype . t)) nil ((reparse-symbol . classsubparts)) [4028 4041]) ("new_block" variable "int" "reinterpret_cast<block*>(p)" nil nil nil [4048 4088]) ("prev_" variable "int" "b;" nil nil nil [4106 4115]) ("next_" variable "int" "0" nil nil nil [4133 4142]) ("free_" variable "int" "1" nil nil nil [4160 4169]) ("next_" variable "int" "new_block;" nil nil nil [4224 4242])) nil nil nil nil [311 4251]))
    :unmatched-syntax '((semantic-list 4328 . 4333) (symbol 4321 . 4328) (symbol 4314 . 4320) (punctuation 4313 . 4314) (punctuation 4268 . 4269) (punctuation 4267 . 4268) (symbol 4266 . 4267) (punctuation 4258 . 4259) (semantic-list 4251 . 4258) (SIZEOF 4245 . 4251) (punctuation 4244 . 4245) (symbol 4239 . 4244) (punctuation 4237 . 4238) (symbol 4232 . 4237) (punctuation 4231 . 4232) (punctuation 4230 . 4231) (symbol 4221 . 4230) (punctuation 4204 . 4205) (punctuation 4203 . 4204) (symbol 4194 . 4203) (punctuation 4177 . 4178) (punctuation 4176 . 4177) (symbol 4167 . 4176) (punctuation 4150 . 4151) (punctuation 4149 . 4150) (symbol 4140 . 4149) (punctuation 4072 . 4073) (symbol 4063 . 4072) (punctuation 4055 . 4056) (semantic-list 4048 . 4055) (CHAR 4044 . 4048) (symbol 4040 . 4043) (punctuation 4038 . 4039) (symbol 4036 . 4037) (punctuation 4035 . 4036) (CHAR 4030 . 4034) (close-paren 3992 . 3993) (symbol 3991 . 3992) (punctuation 3990 . 3991) (symbol 3984 . 3989) (open-paren 3983 . 3984) (symbol 3979 . 3983) (VOID 3974 . 3978) (semantic-list 3965 . 3967) (symbol 3958 . 3964) (close-paren 3956 . 3957) (symbol 3955 . 3956) (punctuation 3954 . 3955) (CHAR 3949 . 3953) (open-paren 3948 . 3949) (symbol 3944 . 3948) (VOID 3939 . 3943) (STATIC 3932 . 3938) (punctuation 3927 . 3928) (symbol 3868 . 3874) (STRUCT 3861 . 3867) (punctuation 3856 . 3857) (close-paren 3855 . 3856) (punctuation 3854 . 3855) (symbol 3850 . 3854) (CONST 3844 . 3849) (open-paren 3843 . 3844) (punctuation 3842 . 3843) (OPERATOR 3834 . 3842) (punctuation 3832 . 3833) (symbol 3828 . 3832) (punctuation 3824 . 3825) (close-paren 3823 . 3824) (punctuation 3822 . 3823) (symbol 3817 . 3821) (CONST 3811 . 3816) (open-paren 3810 . 3811) (symbol 3806 . 3810) (punctuation 3783 . 3784) (symbol 3566 . 3571) (STRUCT 3559 . 3565) (close-paren 3544 . 3545) (punctuation 3543 . 3544) (CHAR 3538 . 3542) (punctuation 3537 . 3538) (symbol 3533 . 3537) (punctuation 3532 . 3533) (punctuation 3531 . 3532) (symbol 3528 . 3531) (number 2295 . 2296) (punctuation 2293 . 2294) (punctuation 1002 . 1003) (semantic-list 623 . 629) (symbol 618 . 623) (punctuation 617 . 618) (semantic-list 592 . 617) (symbol 588 . 592) (number 548 . 552) (punctuation 547 . 548) (number 548 . 552) (punctuation 547 . 548) (semantic-list 166 . 180) (symbol 159 . 166) (number 175 . 179) (punctuation 174 . 175) (symbol 152 . 158) (number 175 . 179) (punctuation 174 . 175) (punctuation 151 . 152) (semantic-list 108 . 122) (symbol 101 . 108) (number 117 . 121) (punctuation 116 . 117) (symbol 94 . 100) (number 117 . 121) (punctuation 116 . 117) (punctuation 93 . 94) (semantic-list 85 . 91) (symbol 78 . 85) (symbol 71 . 77) (punctuation 70 . 71))
    )
   (semanticdb-table "pool_allocator.h"
    :file "pool_allocator.h"
    :pointmax 3027
    :major-mode 'c++-mode
    :tokens '(("POOL_ALLOCATOR_H_INCLUDED_GF" variable nil nil ((const . t)) nil nil [38 77]) ("pool.h" include nil nil nil [76 93]) ("pool_allocator" type "class" nil nil ((template ("T" type "class" nil nil))) nil nil [96 139]) ("pool_allocator" type "class" (("public" label ((reparse-symbol . classsubparts)) [182 189]) ("pointer" type "typedef" nil ("void") ((pointer . 1) (typedef "void")) nil nil [194 216]) ("const_pointer" type "typedef" nil ("void") ((pointer . 1) (typedef "void")) nil nil [221 255]) ("value_type" type "typedef" nil ("void") ((typedef "void")) nil nil [309 333]) ("rebind" type "struct" (("other" type "typedef" nil ("pool_allocator") ((typedef "pool_allocator" type "class")) nil nil [381 413])) nil ((template ("U" type "class" nil nil))) nil ((reparse-symbol . classsubparts)) [338 416])) nil ((template . "") (template-specifier ("void" type nil nil nil))) nil nil [141 419]) ("pool_alloc" type "namespace" (("destruct" function ("void") (("" variable "char" nil ((pointer . 1)) nil nil [468 475])) ((typemodifiers "inline")) nil ((reparse-symbol . namespacesubparts)) [447 477]) ("destruct" function ("void") (("" variable "wchar_t" nil ((pointer . 1)) nil nil [503 512])) ((typemodifiers "inline")) nil ((reparse-symbol . namespacesubparts)) [482 514]) ("destruct" function ("void") (("t" variable ("T" type "class") nil ((pointer . 1)) nil nil [570 575])) ((template ("T" type "class" nil nil)) (typemodifiers "inline")) nil ((reparse-symbol . namespacesubparts)) [519 585])) nil nil nil nil [421 587]) ("pool_allocator" type "class" (("public" label ((reparse-symbol . classsubparts)) [647 654]) ("size_type" type "typedef" nil ("size_t") ((typedef "size_t" type "class")) nil nil [659 684]) ("difference_type" type "typedef" nil ("ptrdiff_t") ((typedef "ptrdiff_t" type "class")) nil nil [689 723]) ("pointer" type "typedef" nil ("T") ((pointer . 1) (typedef "T" type "class")) nil nil [728 747]) ("const_pointer" type "typedef" nil ("T") ((pointer . 1) (typedef "T" type "class")) nil nil [752 783]) ("reference" variable ("T" type "class") nil nil nil nil [796 809]) ("const_reference" variable ("T" type "class") nil ((const . t)) nil nil [822 847]) ("value_type" type "typedef" nil ("T") ((typedef "T" type "class")) nil nil [852 873]) ("rebind" type "struct" (("other" type "typedef" nil ("pool_allocator") ((typedef "pool_allocator" type "class")) nil nil [922 954])) nil ((template ("U" type "class" nil nil))) nil ((reparse-symbol . classsubparts)) [879 957]) ("pool_allocator" function ("pool_allocator" type "class") nil ((constructor . t)) nil ((reparse-symbol . classsubparts)) [962 980]) ("address" function ("pointer" type "class") (("x" variable ("reference" type "class") nil nil nil nil [1001 1013])) nil nil ((reparse-symbol . classsubparts)) [985 1032]) ("address" function ("const_pointer" type "class") (("x" variable ("const_reference" type "class") nil nil nil nil [1059 1077])) nil nil ((reparse-symbol . classsubparts)) [1037 1096]) ("allocate" function ("pointer" type "class") (("size" variable ("size_type" type "class") nil nil nil nil [1118 1133]) ("hint" variable ("pool_allocator::const_pointer" type "class") "0" nil nil nil [1134 1178])) nil nil ((reparse-symbol . classsubparts)) [1101 1259]) ("_Charalloc" function ("char") (("n" variable ("size_type" type "class") nil nil nil nil [1303 1315])) ((pointer . 1)) nil ((reparse-symbol . classsubparts)) [1286 1361]) ("pool_allocator" function ("pool_allocator" type "class") (("" variable ("pool_allocator" type "class") nil ((const . t)) nil nil [1423 1448])) ((template ("U" type "class" nil nil)) (constructor . t)) nil ((reparse-symbol . classsubparts)) [1389 1450]) ("deallocate" function ("void") (("p" variable ("pointer" type "class") nil nil nil nil [1471 1481]) ("n" variable ("size_type" type "class") nil nil nil nil [1482 1494])) nil nil ((reparse-symbol . classsubparts)) [1455 1537]) ("deallocate" function ("void") (("p" variable "void" nil ((pointer . 1)) nil nil [1558 1566]) ("n" variable ("size_type" type "class") nil nil nil nil [1567 1579])) nil nil ((reparse-symbol . classsubparts)) [1542 1622]) ("max_size" function ("size_type" type "class") nil nil nil ((reparse-symbol . classsubparts)) [1627 1703]) ("construct" function ("void") (("p" variable ("pointer" type "class") nil nil nil nil [1723 1733]) ("val" variable ("T" type "class") nil ((const . t)) nil nil [1734 1747])) nil nil ((reparse-symbol . classsubparts)) [1708 1802]) ("construct" function ("void") (("p" variable ("pointer" type "class") nil nil nil nil [1822 1832])) nil nil ((reparse-symbol . classsubparts)) [1807 1884]) ("destroy" function ("void") (("p" variable ("pointer" type "class") nil nil nil nil [1902 1912])) nil nil ((reparse-symbol . classsubparts)) [1889 1938]) ("dump" function ("void") nil ((typemodifiers "static")) nil ((reparse-symbol . classsubparts)) [1943 1975]) ("private" label ((reparse-symbol . classsubparts)) [1977 1985]) ("mem_" variable ("pool" type "class") nil ((typemodifiers "static")) nil nil [1991 2008])) nil ((template ("T" type "class" nil nil))) nil nil [602 2011]) ("pool_allocator::mem_" variable ("pool" type "class") nil nil nil nil [2013 2064]) ("==" function ("bool" type "class") (("" variable ("pool_allocator" type "class") nil ((const . t)) nil nil [2123 2148]) ("" variable ("pool_allocator" type "class") nil ((const . t)) nil nil [2149 2173])) ((template ("T" type "class" nil nil) ("U" type "class" nil nil)) (typemodifiers "inline")) nil nil [2066 2187]) ("!=" function ("bool" type "class") (("" variable ("pool_allocator" type "class") nil ((const . t)) nil nil [2246 2271]) ("" variable ("pool_allocator" type "class") nil ((const . t)) nil nil [2272 2296])) ((template ("T" type "class" nil nil) ("U" type "class" nil nil)) (typemodifiers "inline")) nil nil [2189 2311]) ("POOL_ALLOC_CDECL" variable nil nil ((const . t)) nil nil [2531 2571]) ("POOL_ALLOC_CDECL" variable nil nil ((const . t)) nil nil [2570 2612]) ("std" type "namespace" (("__stl_alloc_rebind" function ("POOL_ALLOC_CDECL" type "class") (("__a" variable ("pool_allocator" type "class") nil nil nil nil [2717 2743]) ("" variable ("_Tp2" type "class") nil ((const . t) (pointer . 1)) nil nil [2744 2756])) nil nil ((reparse-symbol . namespacesubparts)) [2681 2801]) ("__stl_alloc_create" function ("POOL_ALLOC_CDECL" type "class") (("" variable ("pool_allocator" type "class") nil ((const . t)) nil nil [2902 2930]) ("" variable ("_Tp2" type "class") nil ((const . t) (pointer . 1)) nil nil [2931 2943])) nil nil ((reparse-symbol . namespacesubparts)) [2866 2982])) nil nil nil nil [2603 2985]))
    )
   (semanticdb-table "ss_storage.h"
    :file "ss_storage.h"
    :pointmax 670
    :major-mode 'c++-mode
    :tokens '(("SS_STORAGE_H_INCLUDED_GF" variable nil nil ((const . t)) nil nil [34 69]) ("new" include t nil nil [68 82]) ("list" include t nil nil [83 98]) ("algorithm" include t nil nil [99 119]) ("iostream" include t nil nil [120 139]) ("ss_defaults" type "enum" (("init_size" variable "int" (226 230) ((const . t)) nil ((reparse-symbol . enumsubparts)) [214 230])) nil nil nil nil [197 232]) ("ss_storage" function "int" nil ((prototype . t)) nil nil [243 256]) ("allocate" function ("T" type "class") nil ((pointer . 1) (prototype . t)) nil nil [259 273]) ("allocate" function ("void") (("n" variable ("size_t" type "class") nil nil nil nil [291 300])) ((pointer . 1) (prototype . t)) nil nil [276 301]) ("deallocate" function ("void") (("p" variable "void" nil ((pointer . 1)) nil nil [320 328]) ("n" variable ("size_t" type "class") nil nil nil nil [329 338])) ((prototype . t)) nil nil [304 339]) ("dump" function ("void") nil ((prototype . t)) nil nil [342 354]) ("ss_storage" function "void" nil ((destructor . t) (prototype . t)) nil nil [357 371]) ("link" type "struct" (("next_" variable ("link" type "class") nil ((pointer . 1)) nil nil [404 416])) nil nil nil nil [384 421]) ("grow" function ("void") nil ((prototype . t)) nil nil [424 436]) ("verify_memory_contiguous" function ("bool" type "class") (("l" variable ("link" type "class") nil ((pointer . 1)) nil nil [469 477]) ("n" variable "int" nil nil nil nil [478 484])) ((prototype . t)) nil nil [439 485]) ("killer" type "struct" (("()" function ("void") (("p" variable "char" nil ((pointer . 1)) nil nil [527 535])) nil nil ((reparse-symbol . classsubparts)) [511 549])) nil nil nil nil [489 554]) ("size_" variable ("size_t" type "class") nil nil nil nil [558 571]) ("step_" variable ("size_t" type "class") nil nil nil nil [574 587]) ("ss_mem_" variable "int" nil nil nil nil [608 616]) ("head_" variable ("link" type "class") nil ((pointer . 1)) nil nil [619 631]) ("ss_storage.cpp" include nil nil nil [637 662]))
    :unmatched-syntax '((punctuation 634 . 635) (close-paren 633 . 634) (close-paren 606 . 607) (punctuation 605 . 606) (CHAR 600 . 604) (punctuation 599 . 600) (symbol 595 . 599) (punctuation 594 . 595) (punctuation 593 . 594) (symbol 590 . 593) (punctuation 380 . 381) (PRIVATE 373 . 380) (punctuation 239 . 240) (PUBLIC 233 . 239) (open-paren 193 . 194) (symbol 182 . 192) (CLASS 176 . 181) (close-paren 174 . 175) (symbol 173 . 174) (TYPENAME 164 . 172) (punctuation 163 . 164) (TEMPLATE 154 . 162))
    )
   (semanticdb-table "stl_memory_test.cpp"
    :file "stl_memory_test.cpp"
    :pointmax 763
    :major-mode 'c++-mode
    :tokens '(("iostream" include t nil nil [1 20]) ("list" include t nil nil [21 36]) ("sys/time.h" include t nil nil [38 59]) ("sys/types.h" include t nil nil [60 82]) ("unistd.h" include t nil nil [83 102]) ("ss_allocator.h" include nil nil nil [103 128]) ("STDIN" variable nil nil ((const . t)) nil nil [152 167]) ("Big" type "class" (("private" label ((reparse-symbol . classsubparts)) [181 189]) ("_40K" variable "int" nil ((dereference . 1)) nil nil [192 210]) ("public" label ((reparse-symbol . classsubparts)) [212 219]) ("Big" function ("Big" type "class") (("i" variable "int" nil nil nil nil [226 232])) ((constructor . t)) nil ((reparse-symbol . classsubparts)) [222 269]) ("Big" function "void" nil ((destructor . t)) nil ((reparse-symbol . classsubparts)) [272 285])) nil nil nil nil [169 288]) ("main" function ("int") (("" variable "void" nil nil nil nil [300 305])) nil nil nil [291 762]))
    :unmatched-syntax 'nil
    )
   (semanticdb-table "ss_allocator.h"
    :file "ss_allocator.h"
    :pointmax 3126
    :major-mode 'c++-mode
    :tokens '(("SS_ALLOCATOR_H_INCLUDED_GF" variable nil nil ((const . t)) nil nil [36 73]) ("ss_storage.h" include nil nil nil [72 95]) ("ss_allocator" type "class" nil nil ((template ("T" type "class" nil nil))) nil nil [98 139]) ("ss_allocator" type "class" (("public" label ((reparse-symbol . classsubparts)) [179 186]) ("pointer" type "typedef" nil ("void") ((pointer . 1) (typedef "void")) nil nil [191 213]) ("const_pointer" type "typedef" nil ("void") ((pointer . 1) (typedef "void")) nil nil [218 252]) ("value_type" type "typedef" nil ("void") ((typedef "void")) nil nil [306 330]) ("rebind" type "struct" (("other" type "typedef" nil ("ss_allocator") ((typedef "ss_allocator" type "class")) nil nil [378 408])) nil ((template ("U" type "class" nil nil))) nil ((reparse-symbol . classsubparts)) [335 411])) nil ((template . "") (template-specifier ("void" type nil nil nil))) nil nil [140 414]) ("ss_alloc" type "namespace" (("destruct" function ("void") (("" variable "char" nil ((pointer . 1)) nil nil [461 468])) ((typemodifiers "inline")) nil ((reparse-symbol . namespacesubparts)) [440 470]) ("destruct" function ("void") (("" variable "wchar_t" nil ((pointer . 1)) nil nil [496 505])) ((typemodifiers "inline")) nil ((reparse-symbol . namespacesubparts)) [475 507]) ("destruct" function ("void") (("t" variable ("T" type "class") nil ((pointer . 1)) nil nil [563 568])) ((template ("T" type "class" nil nil)) (typemodifiers "inline")) nil ((reparse-symbol . namespacesubparts)) [512 578])) nil nil nil nil [416 580]) ("ss_allocator" type "class" (("public" label ((reparse-symbol . classsubparts)) [647 654]) ("size_type" type "typedef" nil ("size_t") ((typedef "size_t" type "class")) nil nil [659 684]) ("difference_type" type "typedef" nil ("ptrdiff_t") ((typedef "ptrdiff_t" type "class")) nil nil [689 723]) ("pointer" type "typedef" nil ("T") ((pointer . 1) (typedef "T" type "class")) nil nil [728 747]) ("const_pointer" type "typedef" nil ("T") ((pointer . 1) (typedef "T" type "class")) nil nil [752 783]) ("reference" variable ("T" type "class") nil nil nil nil [796 809]) ("const_reference" variable ("T" type "class") nil ((const . t)) nil nil [822 847]) ("value_type" type "typedef" nil ("T") ((typedef "T" type "class")) nil nil [852 873]) ("rebind" type "struct" (("other" type "typedef" nil ("ss_allocator") ((typedef "ss_allocator" type "class")) nil nil [922 952])) nil ((template ("U" type "class" nil nil))) nil ((reparse-symbol . classsubparts)) [879 955]) ("ss_allocator" function ("ss_allocator" type "class") nil ((constructor . t)) nil ((reparse-symbol . classsubparts)) [961 977]) ("address" function ("pointer" type "class") (("x" variable ("reference" type "class") nil nil nil nil [998 1010])) nil nil ((reparse-symbol . classsubparts)) [982 1029]) ("address" function ("const_pointer" type "class") (("x" variable ("const_reference" type "class") nil nil nil nil [1056 1074])) nil nil ((reparse-symbol . classsubparts)) [1034 1093]) ("allocate" function ("pointer" type "class") (("size" variable ("size_type" type "class") nil nil nil nil [1115 1130]) ("hint" variable ("ss_allocator::const_pointer" type "class") "0" nil nil nil [1131 1173])) nil nil ((reparse-symbol . classsubparts)) [1098 1306]) ("_Charalloc" function ("char") (("n" variable ("size_type" type "class") nil nil nil nil [1361 1373])) ((pointer . 1)) nil ((reparse-symbol . classsubparts)) [1344 1419]) ("ss_allocator" function ("ss_allocator" type "class") (("" variable ("ss_allocator" type "class") nil ((const . t)) nil nil [1479 1502])) ((template ("U" type "class" nil nil)) (constructor . t)) nil ((reparse-symbol . classsubparts)) [1447 1504]) ("ss_allocator" function ("ss_allocator" type "class") (("" variable ("ss_allocator" type "class") nil ((const . t)) nil nil [1522 1545])) ((constructor . t)) nil ((reparse-symbol . classsubparts)) [1509 1547]) ("deallocate" function ("void") (("p" variable ("pointer" type "class") nil nil nil nil [1568 1578]) ("n" variable ("size_type" type "class") nil nil nil nil [1579 1591])) nil nil ((reparse-symbol . classsubparts)) [1552 1640]) ("deallocate" function ("void") (("p" variable "void" nil ((pointer . 1)) nil nil [1661 1669]) ("n" variable ("size_type" type "class") nil nil nil nil [1670 1682])) nil nil ((reparse-symbol . classsubparts)) [1645 1731]) ("max_size" function ("size_type" type "class") nil nil nil ((reparse-symbol . classsubparts)) [1736 1812]) ("construct" function ("void") (("p" variable ("pointer" type "class") nil nil nil nil [1832 1842]) ("val" variable ("T" type "class") nil ((const . t)) nil nil [1843 1856])) nil nil ((reparse-symbol . classsubparts)) [1817 1911]) ("construct" function ("void") (("p" variable ("pointer" type "class") nil nil nil nil [1931 1941])) nil nil ((reparse-symbol . classsubparts)) [1916 1993]) ("destroy" function ("void") (("p" variable ("pointer" type "class") nil nil nil nil [2011 2021])) nil nil ((reparse-symbol . classsubparts)) [1998 2045]) ("dump" function ("void") nil ((typemodifiers "static")) nil ((reparse-symbol . classsubparts)) [2050 2083]) ("private" label ((reparse-symbol . classsubparts)) [2084 2092]) ("mem_" variable ("ss_storage" type "class") nil ((typemodifiers "static")) nil nil [2098 2124])) nil ((template ("T" type "class" nil nil))) nil nil [604 2127]) ("ss_allocator::mem_" variable ("ss_storage" type "class") nil nil nil nil [2129 2187]) ("==" function ("bool" type "class") (("" variable ("ss_allocator" type "class") nil ((const . t)) nil nil [2246 2269]) ("" variable ("ss_allocator" type "class") nil ((const . t)) nil nil [2270 2292])) ((template ("T" type "class" nil nil) ("U" type "class" nil nil)) (typemodifiers "inline")) nil nil [2189 2306]) ("!=" function ("bool" type "class") (("" variable ("ss_allocator" type "class") nil ((const . t)) nil nil [2365 2388]) ("" variable ("ss_allocator" type "class") nil ((const . t)) nil nil [2389 2411])) ((template ("T" type "class" nil nil) ("U" type "class" nil nil)) (typemodifiers "inline")) nil nil [2308 2426]) ("SS_ALLOC_CDECL" variable nil nil ((const . t)) nil nil [2648 2686]) ("SS_ALLOC_CDECL" variable nil nil ((const . t)) nil nil [2685 2725]) ("std" type "namespace" (("__stl_alloc_rebind" function ("SS_ALLOC_CDECL" type "class") (("__a" variable ("ss_allocator" type "class") nil nil nil nil [2826 2850]) ("" variable ("_Tp2" type "class") nil ((const . t) (pointer . 1)) nil nil [2851 2863])) nil nil ((reparse-symbol . namespacesubparts)) [2792 2906]) ("__stl_alloc_create" function ("SS_ALLOC_CDECL" type "class") (("" variable ("ss_allocator" type "class") nil ((const . t)) nil nil [3003 3029]) ("" variable ("_Tp2" type "class") nil ((const . t) (pointer . 1)) nil nil [3030 3042])) nil nil ((reparse-symbol . namespacesubparts)) [2969 3079])) nil nil nil nil [2716 3082]))
    )
   (semanticdb-table "Makefile"
    :file "Makefile"
    :pointmax 382
    :major-mode 'makefile-gmake-mode
    :tokens '(("CC" variable nil (("g++")) nil nil nil [1 8]) ("CFLAGS" variable nil (("-c") ("-Wall")) nil nil nil [8 24]) ("all" function nil (("stl_memory_test")) nil nil nil [114 136]) ("stl_memory_test" function nil (("stl_memory_test.o")) nil nil nil [136 218]) ("stl_memory_test.o" function nil (("stl_memory_test.cpp") ("ss_storage.h") ("ss_allocator.h") ("ss_storage.cpp")) nil nil nil [218 341]) ("clean" function nil (nil) nil nil nil [341 382]))
    :unmatched-syntax '((shell-command 349 . 382))
    )
   (semanticdb-table "ss_storage.cpp"
    :file "ss_storage.cpp"
    :pointmax 3247
    :major-mode 'c++-mode
    :tokens '(("ss_storage.h" include nil nil nil [1 24]) ("l" variable ("link" type "class") nil ((pointer . 1)) nil nil [327 335]) ("i" variable "int" "1" nil nil nil [400 410]) ("init_size" variable "int" nil nil nil nil [413 423]) ("next_" variable "int" "reinterpret_cast<link *>(*ss_mem_.begin() + i*step_)" nil nil nil [440 501]) ("next_" variable "int" nil nil nil nil [513 519]) ("next_" variable "int" "0" nil nil nil [529 539]) ("l" variable ("link" type "class") "head_;" ((pointer . 1)) nil nil [681 697]) ("std::endl" variable "int" nil nil nil nil [733 743]) ("next_" variable "int" nil nil nil nil [762 768]) ("std::endl" variable "int" nil nil nil nil [787 797]) ("l" variable ("link" type "class") "head_," ((pointer . 1)) nil nil [986 1015]) ("conn" variable ("link" type "class") nil ((pointer . 1)) nil nil [986 1015]) ("ret" variable ("link" type "class") nil ((pointer . 1)) nil nil [986 1015]) ("next_" variable "int" nil nil nil nil [1172 1178]) ("i" variable "unsigned int" "0" nil nil nil [1190 1207]) ("step_" variable "int" nil nil nil nil [1212 1218]) ("next_" variable "int" nil nil nil nil [1253 1259]) ("next_" variable "int" "conn;" nil nil nil [1278 1291]) ("ret" variable "int" nil nil nil nil [1305 1309]) ("next_" variable "int" nil nil nil nil [1378 1384]) ("l" variable "int" "head_;" nil nil nil [1450 1460]) ("l" variable ("link" type "class") "head_;" ((pointer . 1)) nil nil [1650 1666]) ("next_" variable "int" "l;" nil nil nil [1718 1726]) ("l" variable ("link" type "class") "head_," ((pointer . 1)) nil nil [1746 1769]) ("conn" variable ("link" type "class") nil ((pointer . 1)) nil nil [1746 1769]) ("conn" variable "int" "head_;" nil nil nil [1814 1827]) ("i" variable "unsigned int" "0" nil nil nil [1836 1853]) ("step_" variable "int" nil nil nil nil [1858 1864]) ("i" variable "int" nil nil nil nil [1925 1927]) ("next_" variable "int" nil nil nil nil [1947 1953]) ("next_" variable "int" "l;" nil nil nil [1970 1980]) ("l" variable ("link" type "class") "head_;" ((pointer . 1)) nil nil [2039 2055]) ("links" variable "int" "0" nil nil nil [2058 2072]) ("free_space" variable ("size_t" type "class") "0" nil nil nil [2075 2097]) ("step_" variable "int" nil nil nil nil [2135 2141]) ("links" variable "int" nil nil nil nil [2148 2154]) ("next_" variable "int" nil nil nil nil [2166 2172]) ("endl" variable "int" nil nil nil nil [2234 2239]) ("std::endl" variable "int" nil nil nil nil [2380 2390]) ("std::endl" variable "int" nil nil nil nil [2447 2457]) ("std::endl" variable "int" nil nil nil nil [2509 2519]) ("old_head" variable ("link" type "class") "head_;" ((pointer . 1)) nil nil [2522 2545]) ("std::endl" variable "int" nil nil nil nil [2564 2574]) ("std::endl" variable "int" nil nil nil nil [2643 2653]) ("head_" variable "int" "l;" nil nil nil [2657 2667]) ("std::endl" variable "int" nil nil nil nil [2686 2696]) ("i" variable "int" "1" nil nil nil [2704 2714]) ("init_size" variable "int" nil nil nil nil [2717 2727]) ("next_" variable "int" nil nil nil nil [2807 2813]) ("std::endl" variable "int" nil nil nil nil [2836 2846]) ("next_" variable "int" "old_head;" nil nil nil [2852 2869]) ("std::endl" variable "int" nil nil nil nil [2888 2898]) ("false" variable "int" nil nil nil nil [2978 2984]) ("i" variable "int" "0" nil nil nil [2991 2999]) ("n" variable "int" nil nil nil nil [3002 3004]) ("next_" variable "int" nil nil nil nil [3127 3133]) ("false" variable "int" nil nil nil nil [3169 3175]) ("false" variable "int" nil nil nil nil [3213 3219]) ("true" variable "int" nil nil nil nil [3239 3244]))
    :unmatched-syntax '((close-paren 3245 . 3246) (RETURN 3232 . 3238) (close-paren 3228 . 3229) (close-paren 3224 . 3225) (RETURN 3206 . 3212) (open-paren 3198 . 3199) (ELSE 3194 . 3198) (close-paren 3188 . 3189) (close-paren 3182 . 3183) (RETURN 3162 . 3168) (open-paren 3152 . 3153) (ELSE 3148 . 3152) (close-paren 3140 . 3141) (punctuation 3126 . 3127) (punctuation 3125 . 3126) (symbol 3124 . 3125) (punctuation 3122 . 3123) (symbol 3120 . 3121) (open-paren 3110 . 3111) (close-paren 3109 . 3110) (symbol 3104 . 3109) (punctuation 3102 . 3103) (punctuation 3101 . 3102) (close-paren 3099 . 3100) (symbol 3098 . 3099) (open-paren 3097 . 3098) (punctuation 3096 . 3097) (punctuation 3095 . 3096) (CHAR 3091 . 3095) (punctuation 3090 . 3091) (symbol 3074 . 3090) (punctuation 3072 . 3073) (close-paren 3070 . 3071) (symbol 3065 . 3070) (punctuation 3064 . 3065) (punctuation 3063 . 3064) (symbol 3062 . 3063) (open-paren 3061 . 3062) (punctuation 3060 . 3061) (punctuation 3059 . 3060) (CHAR 3055 . 3059) (punctuation 3054 . 3055) (symbol 3038 . 3054) (open-paren 3037 . 3038) (IF 3035 . 3037) (open-paren 3027 . 3028) (close-paren 3026 . 3027) (symbol 3021 . 3026) (punctuation 3020 . 3021) (punctuation 3019 . 3020) (symbol 3018 . 3019) (open-paren 3017 . 3018) (IF 3015 . 3017) (open-paren 3009 . 3010) (close-paren 3008 . 3009) (symbol 3007 . 3008) (punctuation 3006 . 3007) (punctuation 3005 . 3006) (punctuation 3001 . 3002) (symbol 3000 . 3001) (open-paren 2990 . 2991) (FOR 2987 . 2990) (RETURN 2971 . 2977) (close-paren 2969 . 2970) (symbol 2968 . 2969) (punctuation 2967 . 2968) (open-paren 2966 . 2967) (IF 2964 . 2966) (open-paren 2960 . 2961) (close-paren 2958 . 2959) (symbol 2957 . 2958) (INT 2953 . 2956) (punctuation 2951 . 2952) (symbol 2950 . 2951) (punctuation 2949 . 2950) (symbol 2944 . 2948) (open-paren 2943 . 2944) (symbol 2919 . 2943) (punctuation 2918 . 2919) (punctuation 2917 . 2918) (symbol 2907 . 2917) (symbol 2902 . 2906) (close-paren 2899 . 2900) (punctuation 2887 . 2888) (punctuation 2886 . 2887) (string 2883 . 2886) (punctuation 2882 . 2883) (punctuation 2881 . 2882) (symbol 2877 . 2881) (punctuation 2876 . 2877) (punctuation 2875 . 2876) (symbol 2872 . 2875) (punctuation 2851 . 2852) (punctuation 2850 . 2851) (symbol 2849 . 2850) (punctuation 2835 . 2836) (punctuation 2834 . 2835) (string 2831 . 2834) (punctuation 2830 . 2831) (punctuation 2829 . 2830) (symbol 2825 . 2829) (punctuation 2824 . 2825) (punctuation 2823 . 2824) (symbol 2820 . 2823) (close-paren 2816 . 2817) (punctuation 2806 . 2807) (punctuation 2805 . 2806) (symbol 2804 . 2805) (punctuation 2802 . 2803) (symbol 2800 . 2801) (punctuation 2794 . 2795) (close-paren 2793 . 2794) (symbol 2788 . 2793) (punctuation 2787 . 2788) (symbol 2786 . 2787) (punctuation 2784 . 2785) (symbol 2774 . 2783) (open-paren 2773 . 2774) (punctuation 2772 . 2773) (punctuation 2771 . 2772) (symbol 2766 . 2770) (punctuation 2765 . 2766) (symbol 2749 . 2765) (punctuation 2747 . 2748) (symbol 2741 . 2746) (punctuation 2740 . 2741) (punctuation 2739 . 2740) (symbol 2738 . 2739) (open-paren 2732 . 2733) (close-paren 2731 . 2732) (symbol 2730 . 2731) (punctuation 2729 . 2730) (punctuation 2728 . 2729) (punctuation 2716 . 2717) (symbol 2715 . 2716) (open-paren 2703 . 2704) (FOR 2700 . 2703) (punctuation 2685 . 2686) (punctuation 2684 . 2685) (string 2681 . 2684) (punctuation 2680 . 2681) (punctuation 2679 . 2680) (symbol 2675 . 2679) (punctuation 2674 . 2675) (punctuation 2673 . 2674) (symbol 2670 . 2673) (punctuation 2642 . 2643) (punctuation 2641 . 2642) (string 2638 . 2641) (punctuation 2637 . 2638) (punctuation 2636 . 2637) (symbol 2632 . 2636) (punctuation 2631 . 2632) (punctuation 2630 . 2631) (symbol 2627 . 2630) (punctuation 2623 . 2624) (close-paren 2622 . 2623) (symbol 2613 . 2622) (open-paren 2612 . 2613) (punctuation 2611 . 2612) (punctuation 2610 . 2611) (symbol 2605 . 2609) (punctuation 2604 . 2605) (symbol 2588 . 2604) (punctuation 2586 . 2587) (symbol 2584 . 2585) (punctuation 2583 . 2584) (symbol 2578 . 2582) (punctuation 2563 . 2564) (punctuation 2562 . 2563) (string 2559 . 2562) (punctuation 2558 . 2559) (punctuation 2557 . 2558) (symbol 2553 . 2557) (punctuation 2552 . 2553) (punctuation 2551 . 2552) (symbol 2548 . 2551) (punctuation 2508 . 2509) (punctuation 2507 . 2508) (string 2504 . 2507) (punctuation 2503 . 2504) (punctuation 2502 . 2503) (symbol 2498 . 2502) (punctuation 2497 . 2498) (punctuation 2496 . 2497) (symbol 2493 . 2496) (punctuation 2489 . 2490) (close-paren 2488 . 2489) (symbol 2479 . 2488) (open-paren 2478 . 2479) (symbol 2469 . 2478) (punctuation 2468 . 2469) (symbol 2461 . 2468) (punctuation 2446 . 2447) (punctuation 2445 . 2446) (string 2442 . 2445) (punctuation 2441 . 2442) (punctuation 2440 . 2441) (symbol 2436 . 2440) (punctuation 2435 . 2436) (punctuation 2434 . 2435) (symbol 2431 . 2434) (punctuation 2427 . 2428) (close-paren 2426 . 2427) (symbol 2421 . 2426) (open-paren 2420 . 2421) (CHAR 2416 . 2420) (symbol 2412 . 2415) (punctuation 2410 . 2411) (symbol 2400 . 2409) (punctuation 2399 . 2400) (CHAR 2394 . 2398) (punctuation 2379 . 2380) (punctuation 2378 . 2379) (string 2372 . 2378) (punctuation 2371 . 2372) (punctuation 2370 . 2371) (symbol 2366 . 2370) (punctuation 2365 . 2366) (punctuation 2364 . 2365) (symbol 2361 . 2364) (open-paren 2357 . 2358) (close-paren 2355 . 2356) (open-paren 2354 . 2355) (symbol 2350 . 2354) (punctuation 2349 . 2350) (punctuation 2348 . 2349) (symbol 2338 . 2348) (VOID 2333 . 2337) (close-paren 2330 . 2331) (punctuation 2328 . 2329) (close-paren 2327 . 2328) (close-paren 2326 . 2327) (open-paren 2325 . 2326) (symbol 2319 . 2325) (punctuation 2317 . 2318) (close-paren 2316 . 2317) (open-paren 2315 . 2316) (symbol 2312 . 2315) (punctuation 2311 . 2312) (symbol 2304 . 2311) (punctuation 2302 . 2303) (close-paren 2301 . 2302) (open-paren 2300 . 2301) (symbol 2295 . 2300) (punctuation 2294 . 2295) (symbol 2287 . 2294) (open-paren 2286 . 2287) (symbol 2278 . 2286) (punctuation 2277 . 2278) (punctuation 2276 . 2277) (symbol 2273 . 2276) (open-paren 2269 . 2270) (close-paren 2267 . 2268) (open-paren 2266 . 2267) (symbol 2256 . 2266) (punctuation 2255 . 2256) (punctuation 2254 . 2255) (punctuation 2253 . 2254) (symbol 2243 . 2253) (close-paren 2240 . 2241) (punctuation 2233 . 2234) (punctuation 2232 . 2233) (symbol 2227 . 2232) (punctuation 2226 . 2227) (punctuation 2225 . 2226) (string 2214 . 2225) (punctuation 2213 . 2214) (punctuation 2212 . 2213) (symbol 2207 . 2212) (punctuation 2206 . 2207) (symbol 2201 . 2206) (punctuation 2200 . 2201) (punctuation 2199 . 2200) (string 2185 . 2199) (punctuation 2184 . 2185) (punctuation 2183 . 2184) (symbol 2179 . 2183) (close-paren 2175 . 2176) (punctuation 2165 . 2166) (punctuation 2164 . 2165) (symbol 2163 . 2164) (punctuation 2161 . 2162) (symbol 2159 . 2160) (punctuation 2147 . 2148) (punctuation 2146 . 2147) (punctuation 2133 . 2134) (punctuation 2132 . 2133) (symbol 2121 . 2131) (open-paren 2115 . 2116) (close-paren 2114 . 2115) (symbol 2109 . 2114) (punctuation 2108 . 2109) (punctuation 2107 . 2108) (symbol 2106 . 2107) (open-paren 2105 . 2106) (WHILE 2100 . 2105) (open-paren 2012 . 2013) (close-paren 2010 . 2011) (open-paren 2009 . 2010) (symbol 2005 . 2009) (punctuation 2004 . 2005) (punctuation 2003 . 2004) (symbol 1993 . 2003) (VOID 1988 . 1992) (close-paren 1985 . 1986) (close-paren 1983 . 1984) (punctuation 1969 . 1970) (punctuation 1968 . 1969) (symbol 1964 . 1968) (close-paren 1958 . 1959) (punctuation 1946 . 1947) (punctuation 1945 . 1946) (symbol 1941 . 1945) (punctuation 1939 . 1940) (symbol 1934 . 1938) (punctuation 1923 . 1924) (close-paren 1921 . 1922) (symbol 1920 . 1921) (open-paren 1919 . 1920) (punctuation 1918 . 1919) (punctuation 1917 . 1918) (symbol 1913 . 1917) (punctuation 1912 . 1913) (symbol 1896 . 1912) (punctuation 1894 . 1895) (symbol 1888 . 1893) (punctuation 1887 . 1888) (punctuation 1886 . 1887) (symbol 1882 . 1886) (open-paren 1874 . 1875) (close-paren 1868 . 1869) (symbol 1867 . 1868) (punctuation 1866 . 1867) (punctuation 1865 . 1866) (punctuation 1857 . 1858) (symbol 1856 . 1857) (punctuation 1855 . 1856) (symbol 1854 . 1855) (open-paren 1835 . 1836) (FOR 1832 . 1835) (punctuation 1808 . 1809) (close-paren 1807 . 1808) (symbol 1806 . 1807) (open-paren 1805 . 1806) (punctuation 1804 . 1805) (punctuation 1803 . 1804) (symbol 1799 . 1803) (punctuation 1798 . 1799) (symbol 1782 . 1798) (punctuation 1780 . 1781) (symbol 1774 . 1779) (open-paren 1740 . 1741) (ELSE 1733 . 1737) (close-paren 1729 . 1730) (punctuation 1717 . 1718) (punctuation 1716 . 1717) (symbol 1711 . 1716) (punctuation 1705 . 1706) (close-paren 1704 . 1705) (symbol 1703 . 1704) (open-paren 1702 . 1703) (punctuation 1701 . 1702) (punctuation 1700 . 1701) (symbol 1696 . 1700) (punctuation 1695 . 1696) (symbol 1679 . 1695) (punctuation 1677 . 1678) (symbol 1671 . 1676) (open-paren 1644 . 1645) (close-paren 1640 . 1641) (symbol 1635 . 1640) (punctuation 1634 . 1635) (punctuation 1633 . 1634) (symbol 1632 . 1633) (open-paren 1631 . 1632) (IF 1629 . 1631) (punctuation 1624 . 1625) (string 1621 . 1624) (punctuation 1620 . 1621) (punctuation 1619 . 1620) (symbol 1614 . 1618) (punctuation 1613 . 1614) (punctuation 1612 . 1613) (symbol 1609 . 1612) (open-paren 1605 . 1606) (close-paren 1603 . 1604) (symbol 1602 . 1603) (symbol 1595 . 1601) (punctuation 1593 . 1594) (symbol 1592 . 1593) (punctuation 1591 . 1592) (VOID 1586 . 1590) (open-paren 1585 . 1586) (symbol 1575 . 1585) (punctuation 1574 . 1575) (punctuation 1573 . 1574) (symbol 1563 . 1573) (VOID 1558 . 1562) (close-paren 1556 . 1557) (symbol 1555 . 1556) (CLASS 1549 . 1554) (punctuation 1548 . 1549) (TEMPLATE 1540 . 1548) (close-paren 1471 . 1472) (close-paren 1469 . 1470) (close-paren 1465 . 1466) (punctuation 1442 . 1443) (close-paren 1441 . 1442) (open-paren 1440 . 1441) (symbol 1436 . 1440) (punctuation 1427 . 1428) (string 1424 . 1427) (punctuation 1423 . 1424) (punctuation 1422 . 1423) (symbol 1417 . 1421) (punctuation 1416 . 1417) (punctuation 1415 . 1416) (symbol 1412 . 1415) (open-paren 1404 . 1405) (ELSE 1395 . 1399) (close-paren 1389 . 1390) (punctuation 1377 . 1378) (punctuation 1376 . 1377) (symbol 1375 . 1376) (punctuation 1373 . 1374) (symbol 1371 . 1372) (punctuation 1363 . 1364) (string 1360 . 1363) (punctuation 1359 . 1360) (punctuation 1358 . 1359) (symbol 1353 . 1357) (punctuation 1352 . 1353) (punctuation 1351 . 1352) (symbol 1348 . 1351) (open-paren 1340 . 1341) (close-paren 1334 . 1335) (symbol 1328 . 1333) (punctuation 1327 . 1328) (punctuation 1326 . 1327) (symbol 1325 . 1326) (open-paren 1323 . 1324) (IF 1320 . 1322) (close-paren 1314 . 1315) (RETURN 1298 . 1304) (punctuation 1277 . 1278) (punctuation 1276 . 1277) (symbol 1275 . 1276) (close-paren 1266 . 1267) (punctuation 1252 . 1253) (punctuation 1251 . 1252) (symbol 1247 . 1251) (punctuation 1245 . 1246) (symbol 1240 . 1244) (open-paren 1230 . 1231) (close-paren 1222 . 1223) (symbol 1221 . 1222) (punctuation 1220 . 1221) (punctuation 1219 . 1220) (punctuation 1211 . 1212) (symbol 1210 . 1211) (punctuation 1209 . 1210) (symbol 1208 . 1209) (open-paren 1189 . 1190) (FOR 1185 . 1188) (punctuation 1171 . 1172) (punctuation 1170 . 1171) (symbol 1169 . 1170) (punctuation 1167 . 1168) (symbol 1163 . 1166) (punctuation 1161 . 1162) (symbol 1156 . 1160) (punctuation 1147 . 1148) (string 1144 . 1147) (punctuation 1143 . 1144) (punctuation 1142 . 1143) (symbol 1137 . 1141) (punctuation 1136 . 1137) (punctuation 1135 . 1136) (symbol 1132 . 1135) (open-paren 1124 . 1125) (close-paren 1118 . 1119) (close-paren 1117 . 1118) (symbol 1112 . 1117) (punctuation 1111 . 1112) (symbol 1110 . 1111) (punctuation 1108 . 1109) (symbol 1103 . 1108) (punctuation 1102 . 1103) (punctuation 1101 . 1102) (symbol 1100 . 1101) (open-paren 1099 . 1100) (symbol 1075 . 1099) (open-paren 1074 . 1075) (IF 1072 . 1074) (open-paren 1066 . 1067) (close-paren 1062 . 1063) (number 1061 . 1062) (open-paren 1060 . 1061) (WHILE 1055 . 1060) (punctuation 1051 . 1052) (close-paren 1050 . 1051) (number 1049 . 1050) (punctuation 1048 . 1049) (symbol 1043 . 1048) (punctuation 1042 . 1043) (symbol 1041 . 1042) (open-paren 1040 . 1041) (punctuation 1039 . 1040) (symbol 1034 . 1039) (punctuation 1032 . 1033) (symbol 1030 . 1031) (close-paren 1028 . 1029) (symbol 1023 . 1028) (punctuation 1022 . 1023) (symbol 1021 . 1022) (open-paren 1020 . 1021) (IF 1018 . 1020) (punctuation 981 . 982) (string 978 . 981) (punctuation 976 . 977) (punctuation 975 . 976) (symbol 970 . 974) (punctuation 969 . 970) (punctuation 968 . 969) (symbol 965 . 968) (open-paren 961 . 962) (close-paren 959 . 960) (symbol 958 . 959) (symbol 951 . 957) (open-paren 950 . 951) (symbol 942 . 950) (punctuation 941 . 942) (punctuation 940 . 941) (close-paren 939 . 940) (symbol 938 . 939) (punctuation 937 . 938) (symbol 927 . 937) (punctuation 925 . 926) (VOID 921 . 925) (close-paren 919 . 920) (symbol 918 . 919) (CLASS 912 . 917) (punctuation 911 . 912) (TEMPLATE 903 . 911) (close-paren 834 . 835) (punctuation 832 . 833) (close-paren 831 . 832) (symbol 830 . 831) (open-paren 829 . 830) (punctuation 828 . 829) (punctuation 827 . 828) (symbol 825 . 826) (punctuation 824 . 825) (symbol 808 . 824) (RETURN 801 . 807) (punctuation 786 . 787) (punctuation 785 . 786) (string 782 . 785) (punctuation 781 . 782) (punctuation 780 . 781) (symbol 776 . 780) (punctuation 775 . 776) (punctuation 774 . 775) (symbol 771 . 774) (punctuation 761 . 762) (punctuation 760 . 761) (symbol 755 . 760) (punctuation 753 . 754) (symbol 747 . 752) (punctuation 732 . 733) (punctuation 731 . 732) (string 728 . 731) (punctuation 727 . 728) (punctuation 726 . 727) (symbol 722 . 726) (punctuation 721 . 722) (punctuation 720 . 721) (symbol 717 . 720) (punctuation 713 . 714) (close-paren 712 . 713) (open-paren 711 . 712) (symbol 707 . 711) (close-paren 705 . 706) (symbol 704 . 705) (punctuation 703 . 704) (open-paren 702 . 703) (IF 700 . 702) (punctuation 677 . 678) (string 674 . 677) (punctuation 672 . 673) (punctuation 671 . 672) (symbol 666 . 670) (punctuation 665 . 666) (punctuation 664 . 665) (symbol 661 . 664) (open-paren 657 . 658) (close-paren 655 . 656) (open-paren 654 . 655) (symbol 646 . 654) (punctuation 645 . 646) (punctuation 644 . 645) (close-paren 643 . 644) (symbol 642 . 643) (punctuation 641 . 642) (symbol 631 . 641) (punctuation 629 . 630) (symbol 628 . 629) (close-paren 626 . 627) (symbol 625 . 626) (CLASS 619 . 624) (punctuation 618 . 619) (TEMPLATE 609 . 617) (close-paren 540 . 541) (punctuation 528 . 529) (punctuation 527 . 528) (symbol 526 . 527) (close-paren 522 . 523) (punctuation 512 . 513) (punctuation 511 . 512) (symbol 510 . 511) (punctuation 508 . 509) (symbol 506 . 507) (punctuation 439 . 440) (punctuation 438 . 439) (symbol 437 . 438) (open-paren 431 . 432) (close-paren 427 . 428) (symbol 426 . 427) (punctuation 425 . 426) (punctuation 424 . 425) (punctuation 412 . 413) (symbol 411 . 412) (open-paren 399 . 400) (FOR 396 . 399) (punctuation 392 . 393) (close-paren 391 . 392) (semantic-list 389 . 391) (symbol 384 . 389) (punctuation 383 . 384) (symbol 376 . 383) (punctuation 375 . 376) (open-paren 374 . 375) (punctuation 373 . 374) (punctuation 372 . 373) (symbol 367 . 371) (punctuation 366 . 367) (symbol 350 . 366) (punctuation 348 . 349) (symbol 346 . 347) (punctuation 344 . 345) (symbol 338 . 343) (punctuation 323 . 324) (close-paren 322 . 323) (semantic-list 315 . 322) (CHAR 311 . 315) (symbol 307 . 310) (open-paren 306 . 307) (symbol 297 . 306) (punctuation 296 . 297) (symbol 289 . 296) (open-paren 285 . 286) (close-paren 283 . 284) (close-paren 282 . 283) (symbol 281 . 282) (open-paren 280 . 281) (SIZEOF 274 . 280) (punctuation 272 . 273) (close-paren 270 . 271) (symbol 266 . 270) (open-paren 265 . 266) (SIZEOF 259 . 265) (punctuation 257 . 258) (close-paren 255 . 256) (symbol 254 . 255) (open-paren 253 . 254) (SIZEOF 247 . 253) (punctuation 245 . 246) (close-paren 243 . 244) (symbol 239 . 243) (open-paren 238 . 239) (SIZEOF 232 . 238) (open-paren 231 . 232) (symbol 226 . 231) (punctuation 222 . 223) (close-paren 221 . 222) (close-paren 220 . 221) (symbol 219 . 220) (open-paren 218 . 219) (SIZEOF 212 . 218) (punctuation 211 . 212) (symbol 202 . 211) (punctuation 200 . 201) (close-paren 198 . 199) (symbol 194 . 198) (open-paren 193 . 194) (SIZEOF 187 . 193) (punctuation 185 . 186) (symbol 175 . 184) (punctuation 173 . 174) (close-paren 171 . 172) (symbol 170 . 171) (open-paren 169 . 170) (SIZEOF 163 . 169) (punctuation 161 . 162) (close-paren 159 . 160) (symbol 155 . 159) (open-paren 154 . 155) (SIZEOF 148 . 154) (open-paren 147 . 148) (symbol 142 . 147) (punctuation 138 . 139) (close-paren 137 . 138) (open-paren 136 . 137) (symbol 126 . 136) (punctuation 125 . 126) (punctuation 124 . 125) (close-paren 123 . 124) (symbol 122 . 123) (punctuation 121 . 122) (symbol 111 . 121) (close-paren 109 . 110) (symbol 108 . 109) (CLASS 102 . 107) (punctuation 101 . 102) (TEMPLATE 92 . 100))
    )
   (semanticdb-table "dum_allocator.h"
    :file "dum_allocator.h"
    :pointmax 3432
    :major-mode 'c++-mode
    :tokens '(("SS_ALLOCATOR_H_INCLUDED_GF" variable nil nil ((const . t)) nil nil [36 73]) ("ss_storage.h" include nil nil nil [72 95]) ("ss_allocator" type "class" nil nil ((template ("T" type "class" nil nil))) nil nil [98 139]) ("ss_allocator" type "class" (("public" label ((reparse-symbol . classsubparts)) [179 186]) ("pointer" type "typedef" nil ("void") ((pointer . 1) (typedef "void")) nil nil [191 213]) ("const_pointer" type "typedef" nil ("void") ((pointer . 1) (typedef "void")) nil nil [218 252]) ("value_type" type "typedef" nil ("void") ((typedef "void")) nil nil [306 330]) ("rebind" type "struct" (("other" type "typedef" nil ("ss_allocator") ((typedef "ss_allocator" type "class")) nil nil [378 408])) nil ((template ("U" type "class" nil nil))) nil ((reparse-symbol . classsubparts)) [335 411])) nil ((template . "") (template-specifier ("void" type nil nil nil))) nil nil [140 414]) ("ss_alloc" type "namespace" (("destruct" function ("void") (("" variable "char" nil ((pointer . 1)) nil nil [461 468])) ((typemodifiers "inline")) nil ((reparse-symbol . namespacesubparts)) [440 470]) ("destruct" function ("void") (("" variable "wchar_t" nil ((pointer . 1)) nil nil [496 505])) ((typemodifiers "inline")) nil ((reparse-symbol . namespacesubparts)) [475 507]) ("destruct" function ("void") (("t" variable ("T" type "class") nil ((pointer . 1)) nil nil [563 568])) ((template ("T" type "class" nil nil)) (typemodifiers "inline")) nil ((reparse-symbol . namespacesubparts)) [512 578])) nil nil nil nil [416 580]) ("ss_allocator" type "class" (("public" label ((reparse-symbol . classsubparts)) [647 654]) ("size_type" type "typedef" nil ("size_t") ((typedef "size_t" type "class")) nil nil [659 684]) ("difference_type" type "typedef" nil ("ptrdiff_t") ((typedef "ptrdiff_t" type "class")) nil nil [689 723]) ("pointer" type "typedef" nil ("T") ((pointer . 1) (typedef "T" type "class")) nil nil [728 747]) ("const_pointer" type "typedef" nil ("T") ((pointer . 1) (typedef "T" type "class")) nil nil [752 783]) ("reference" variable ("T" type "class") nil nil nil nil [796 809]) ("const_reference" variable ("T" type "class") nil ((const . t)) nil nil [822 847]) ("value_type" type "typedef" nil ("T") ((typedef "T" type "class")) nil nil [852 873]) ("rebind" type "struct" (("other" type "typedef" nil ("ss_allocator") ((typedef "ss_allocator" type "class")) nil nil [922 952])) nil ((template ("U" type "class" nil nil))) nil ((reparse-symbol . classsubparts)) [879 955]) ("ss_allocator" function ("ss_allocator" type "class") nil ((constructor . t)) nil ((reparse-symbol . classsubparts)) [961 977]) ("address" function ("pointer" type "class") (("x" variable ("reference" type "class") nil nil nil nil [998 1010])) nil nil ((reparse-symbol . classsubparts)) [982 1029]) ("address" function ("const_pointer" type "class") (("x" variable ("const_reference" type "class") nil nil nil nil [1056 1074])) nil nil ((reparse-symbol . classsubparts)) [1034 1093]) ("allocate" function ("pointer" type "class") (("size" variable ("size_type" type "class") nil nil nil nil [1115 1130]) ("hint" variable ("ss_allocator::const_pointer" type "class") "0" nil nil nil [1131 1173])) nil nil ((reparse-symbol . classsubparts)) [1098 1612]) ("_Charalloc" function ("char") (("n" variable ("size_type" type "class") nil nil nil nil [1667 1679])) ((pointer . 1)) nil ((reparse-symbol . classsubparts)) [1650 1725]) ("ss_allocator" function ("ss_allocator" type "class") (("" variable ("ss_allocator" type "class") nil ((const . t)) nil nil [1785 1808])) ((template ("U" type "class" nil nil)) (constructor . t)) nil ((reparse-symbol . classsubparts)) [1753 1810]) ("ss_allocator" function ("ss_allocator" type "class") (("" variable ("ss_allocator" type "class") nil ((const . t)) nil nil [1828 1851])) ((constructor . t)) nil ((reparse-symbol . classsubparts)) [1815 1853]) ("deallocate" function ("void") (("p" variable ("pointer" type "class") nil nil nil nil [1874 1884]) ("n" variable ("size_type" type "class") nil nil nil nil [1885 1897])) nil nil ((reparse-symbol . classsubparts)) [1858 1946]) ("deallocate" function ("void") (("p" variable "void" nil ((pointer . 1)) nil nil [1967 1975]) ("n" variable ("size_type" type "class") nil nil nil nil [1976 1988])) nil nil ((reparse-symbol . classsubparts)) [1951 2037]) ("max_size" function ("size_type" type "class") nil nil nil ((reparse-symbol . classsubparts)) [2042 2118]) ("construct" function ("void") (("p" variable ("pointer" type "class") nil nil nil nil [2138 2148]) ("val" variable ("T" type "class") nil ((const . t)) nil nil [2149 2162])) nil nil ((reparse-symbol . classsubparts)) [2123 2217]) ("construct" function ("void") (("p" variable ("pointer" type "class") nil nil nil nil [2237 2247])) nil nil ((reparse-symbol . classsubparts)) [2222 2299]) ("destroy" function ("void") (("p" variable ("pointer" type "class") nil nil nil nil [2317 2327])) nil nil ((reparse-symbol . classsubparts)) [2304 2351]) ("dump" function ("void") nil ((typemodifiers "static")) nil ((reparse-symbol . classsubparts)) [2356 2389]) ("private" label ((reparse-symbol . classsubparts)) [2390 2398]) ("mem_" variable ("ss_storage" type "class") nil ((typemodifiers "static")) nil nil [2404 2430])) nil ((template ("T" type "class" nil nil))) nil nil [604 2433]) ("ss_allocator::mem_" variable ("ss_storage" type "class") nil nil nil nil [2435 2493]) ("==" function ("bool" type "class") (("" variable ("ss_allocator" type "class") nil ((const . t)) nil nil [2552 2575]) ("" variable ("ss_allocator" type "class") nil ((const . t)) nil nil [2576 2598])) ((template ("T" type "class" nil nil) ("U" type "class" nil nil)) (typemodifiers "inline")) nil nil [2495 2612]) ("!=" function ("bool" type "class") (("" variable ("ss_allocator" type "class") nil ((const . t)) nil nil [2671 2694]) ("" variable ("ss_allocator" type "class") nil ((const . t)) nil nil [2695 2717])) ((template ("T" type "class" nil nil) ("U" type "class" nil nil)) (typemodifiers "inline")) nil nil [2614 2732]) ("SS_ALLOC_CDECL" variable nil nil ((const . t)) nil nil [2954 2992]) ("SS_ALLOC_CDECL" variable nil nil ((const . t)) nil nil [2991 3031]) ("std" type "namespace" (("__stl_alloc_rebind" function ("SS_ALLOC_CDECL" type "class") (("__a" variable ("ss_allocator" type "class") nil nil nil nil [3132 3156]) ("" variable ("_Tp2" type "class") nil ((const . t) (pointer . 1)) nil nil [3157 3169])) nil nil ((reparse-symbol . namespacesubparts)) [3098 3212]) ("__stl_alloc_create" function ("SS_ALLOC_CDECL" type "class") (("" variable ("ss_allocator" type "class") nil ((const . t)) nil nil [3309 3335]) ("" variable ("_Tp2" type "class") nil ((const . t) (pointer . 1)) nil nil [3336 3348])) nil nil ((reparse-symbol . namespacesubparts)) [3275 3385])) nil nil nil nil [3022 3388]))
    )
   (semanticdb-table "dum_storage.cc"
    :file "dum_storage.cc"
    :pointmax 4560
    :major-mode 'c++-mode
    :tokens '(("ss_storage.h" include nil nil nil [1 24]) ("std::endl" variable "int" nil nil nil nil [365 375]) ("std::endl" variable "int" nil nil nil nil [422 432]) ("l" variable ("link" type "class") nil ((pointer . 1)) nil nil [473 481]) ("i" variable "int" "1" nil nil nil [546 556]) ("init_size" variable "int" nil nil nil nil [559 569]) ("next_" variable "int" "reinterpret_cast<link *>(*ss_mem_.begin() + i*step_)" nil nil nil [586 647]) ("next_" variable "int" nil nil nil nil [659 665]) ("next_" variable "int" "0" nil nil nil [675 685]) ("std::endl" variable "int" nil nil nil nil [865 875]) ("std::endl" variable "int" nil nil nil nil [915 925]) ("l" variable ("link" type "class") "head_;" ((pointer . 1)) nil nil [1038 1054]) ("next_" variable "int" nil nil nil nil [1074 1080]) ("std::endl" variable "int" nil nil nil nil [1127 1137]) ("std::endl" variable "int" nil nil nil nil [1177 1187]) ("std::endl" variable "int" nil nil nil nil [1280 1290]) ("p" variable "int" nil nil nil nil [1310 1312]) ("std::endl" variable "int" nil nil nil nil [1517 1527]) ("l" variable ("link" type "class") "head_," ((pointer . 1)) nil nil [1544 1573]) ("conn" variable ("link" type "class") nil ((pointer . 1)) nil nil [1544 1573]) ("ret" variable ("link" type "class") nil ((pointer . 1)) nil nil [1544 1573]) ("next_" variable "int" nil nil nil nil [1778 1784]) ("i" variable "unsigned int" "0" nil nil nil [1796 1813]) ("step_" variable "int" nil nil nil nil [1818 1824]) ("next_" variable "int" nil nil nil nil [1859 1865]) ("next_" variable "int" "conn;" nil nil nil [1884 1897]) ("ret" variable "int" nil nil nil nil [1911 1915]) ("next_" variable "int" nil nil nil nil [2040 2046]) ("l" variable "int" "head_;" nil nil nil [2144 2154]) ("l" variable ("link" type "class") "head_;" ((pointer . 1)) nil nil [2382 2398]) ("next_" variable "int" "l;" nil nil nil [2450 2458]) ("l" variable ("link" type "class") "head_," ((pointer . 1)) nil nil [2478 2501]) ("conn" variable ("link" type "class") nil ((pointer . 1)) nil nil [2478 2501]) ("conn" variable "int" "head_;" nil nil nil [2546 2559]) ("i" variable "unsigned int" "0" nil nil nil [2568 2585]) ("step_" variable "int" nil nil nil nil [2590 2596]) ("i" variable "int" nil nil nil nil [2657 2659]) ("next_" variable "int" nil nil nil nil [2679 2685]) ("next_" variable "int" "l;" nil nil nil [2702 2712]) ("l" variable ("link" type "class") "head_;" ((pointer . 1)) nil nil [2858 2874]) ("links" variable "int" "0" nil nil nil [2877 2891]) ("free_space" variable ("size_t" type "class") "0" nil nil nil [2894 2916]) ("step_" variable "int" nil nil nil nil [2954 2960]) ("links" variable "int" nil nil nil nil [2967 2973]) ("next_" variable "int" nil nil nil nil [2985 2991]) ("endl" variable "int" nil nil nil nil [3053 3058]) ("std::endl" variable "int" nil nil nil nil [3395 3405]) ("std::endl" variable "int" nil nil nil nil [3443 3453]) ("old_head" variable ("link" type "class") "head_;" ((pointer . 1)) nil nil [3537 3560]) ("std::endl" variable "int" nil nil nil nil [3619 3629]) ("std::endl" variable "int" nil nil nil nil [3733 3743]) ("head_" variable ("endif" type "class") "l;" nil nil nil [3747 3766]) ("std::endl" variable "int" nil nil nil nil [3819 3829]) ("i" variable "int" "1" nil nil nil [3846 3856]) ("init_size" variable "int" nil nil nil nil [3859 3869]) ("next_" variable "int" nil nil nil nil [3949 3955]) ("std::endl" variable "int" nil nil nil nil [4005 4015]) ("next_" variable "int" "old_head;" nil nil nil [4030 4047]) ("std::endl" variable "int" nil nil nil nil [4105 4115]) ("false" variable "int" nil nil nil nil [4291 4297]) ("i" variable "int" "0" nil nil nil [4304 4312]) ("n" variable "int" nil nil nil nil [4315 4317]) ("next_" variable "int" nil nil nil nil [4440 4446]) ("false" variable "int" nil nil nil nil [4482 4488]) ("false" variable "int" nil nil nil nil [4526 4532]) ("true" variable "int" nil nil nil nil [4552 4557]))
    :unmatched-syntax '((close-paren 4558 . 4559) (RETURN 4545 . 4551) (close-paren 4541 . 4542) (close-paren 4537 . 4538) (RETURN 4519 . 4525) (open-paren 4511 . 4512) (ELSE 4507 . 4511) (close-paren 4501 . 4502) (close-paren 4495 . 4496) (RETURN 4475 . 4481) (open-paren 4465 . 4466) (ELSE 4461 . 4465) (close-paren 4453 . 4454) (punctuation 4439 . 4440) (punctuation 4438 . 4439) (symbol 4437 . 4438) (punctuation 4435 . 4436) (symbol 4433 . 4434) (open-paren 4423 . 4424) (close-paren 4422 . 4423) (symbol 4417 . 4422) (punctuation 4415 . 4416) (punctuation 4414 . 4415) (close-paren 4412 . 4413) (symbol 4411 . 4412) (open-paren 4410 . 4411) (punctuation 4409 . 4410) (punctuation 4408 . 4409) (CHAR 4404 . 4408) (punctuation 4403 . 4404) (symbol 4387 . 4403) (punctuation 4385 . 4386) (close-paren 4383 . 4384) (symbol 4378 . 4383) (punctuation 4377 . 4378) (punctuation 4376 . 4377) (symbol 4375 . 4376) (open-paren 4374 . 4375) (punctuation 4373 . 4374) (punctuation 4372 . 4373) (CHAR 4368 . 4372) (punctuation 4367 . 4368) (symbol 4351 . 4367) (open-paren 4350 . 4351) (IF 4348 . 4350) (open-paren 4340 . 4341) (close-paren 4339 . 4340) (symbol 4334 . 4339) (punctuation 4333 . 4334) (punctuation 4332 . 4333) (symbol 4331 . 4332) (open-paren 4330 . 4331) (IF 4328 . 4330) (open-paren 4322 . 4323) (close-paren 4321 . 4322) (symbol 4320 . 4321) (punctuation 4319 . 4320) (punctuation 4318 . 4319) (punctuation 4314 . 4315) (symbol 4313 . 4314) (open-paren 4303 . 4304) (FOR 4300 . 4303) (RETURN 4284 . 4290) (close-paren 4282 . 4283) (symbol 4281 . 4282) (punctuation 4280 . 4281) (open-paren 4279 . 4280) (IF 4277 . 4279) (open-paren 4273 . 4274) (close-paren 4271 . 4272) (symbol 4270 . 4271) (INT 4266 . 4269) (punctuation 4264 . 4265) (symbol 4263 . 4264) (punctuation 4262 . 4263) (symbol 4257 . 4261) (open-paren 4256 . 4257) (symbol 4232 . 4256) (punctuation 4231 . 4232) (punctuation 4230 . 4231) (punctuation 4229 . 4230) (symbol 4228 . 4229) (punctuation 4227 . 4228) (symbol 4217 . 4227) (symbol 4212 . 4216) (punctuation 4210 . 4211) (symbol 4209 . 4210) (CLASS 4203 . 4208) (punctuation 4202 . 4203) (TEMPLATE 4194 . 4202) (close-paren 4125 . 4126) (symbol 4119 . 4124) (punctuation 4118 . 4119) (punctuation 4103 . 4104) (punctuation 4102 . 4103) (symbol 4096 . 4101) (punctuation 4095 . 4096) (punctuation 4094 . 4095) (symbol 4093 . 4094) (punctuation 4091 . 4092) (punctuation 4090 . 4091) (string 4078 . 4089) (punctuation 4076 . 4077) (punctuation 4075 . 4076) (symbol 4070 . 4074) (punctuation 4069 . 4070) (punctuation 4068 . 4069) (symbol 4065 . 4068) (symbol 4057 . 4062) (symbol 4051 . 4056) (punctuation 4050 . 4051) (punctuation 4029 . 4030) (punctuation 4028 . 4029) (symbol 4027 . 4028) (symbol 4019 . 4024) (punctuation 4018 . 4019) (punctuation 4003 . 4004) (punctuation 4002 . 4003) (symbol 4000 . 4001) (punctuation 3998 . 3999) (punctuation 3997 . 3998) (string 3991 . 3996) (punctuation 3989 . 3990) (punctuation 3988 . 3989) (symbol 3983 . 3987) (punctuation 3982 . 3983) (punctuation 3981 . 3982) (symbol 3978 . 3981) (symbol 3970 . 3975) (symbol 3964 . 3969) (punctuation 3963 . 3964) (close-paren 3958 . 3959) (punctuation 3948 . 3949) (punctuation 3947 . 3948) (symbol 3946 . 3947) (punctuation 3944 . 3945) (symbol 3942 . 3943) (punctuation 3936 . 3937) (close-paren 3935 . 3936) (symbol 3930 . 3935) (punctuation 3929 . 3930) (symbol 3928 . 3929) (punctuation 3926 . 3927) (symbol 3916 . 3925) (open-paren 3915 . 3916) (punctuation 3914 . 3915) (punctuation 3913 . 3914) (symbol 3908 . 3912) (punctuation 3907 . 3908) (symbol 3891 . 3907) (punctuation 3889 . 3890) (symbol 3883 . 3888) (punctuation 3882 . 3883) (punctuation 3881 . 3882) (symbol 3880 . 3881) (open-paren 3874 . 3875) (close-paren 3873 . 3874) (symbol 3872 . 3873) (punctuation 3871 . 3872) (punctuation 3870 . 3871) (punctuation 3858 . 3859) (symbol 3857 . 3858) (open-paren 3845 . 3846) (FOR 3842 . 3845) (symbol 3833 . 3838) (punctuation 3832 . 3833) (punctuation 3817 . 3818) (punctuation 3816 . 3817) (symbol 3810 . 3815) (punctuation 3808 . 3809) (punctuation 3807 . 3808) (string 3797 . 3806) (punctuation 3795 . 3796) (punctuation 3794 . 3795) (symbol 3789 . 3793) (punctuation 3788 . 3789) (punctuation 3787 . 3788) (symbol 3784 . 3787) (symbol 3776 . 3781) (symbol 3770 . 3775) (punctuation 3769 . 3770) (punctuation 3746 . 3747) (punctuation 3731 . 3732) (punctuation 3730 . 3731) (symbol 3728 . 3729) (punctuation 3726 . 3727) (punctuation 3725 . 3726) (string 3719 . 3724) (punctuation 3717 . 3718) (punctuation 3716 . 3717) (symbol 3711 . 3715) (punctuation 3710 . 3711) (punctuation 3709 . 3710) (symbol 3706 . 3709) (symbol 3698 . 3703) (symbol 3692 . 3697) (punctuation 3691 . 3692) (punctuation 3687 . 3688) (close-paren 3686 . 3687) (symbol 3677 . 3686) (open-paren 3676 . 3677) (punctuation 3675 . 3676) (punctuation 3674 . 3675) (symbol 3669 . 3673) (punctuation 3668 . 3669) (symbol 3652 . 3668) (punctuation 3650 . 3651) (symbol 3648 . 3649) (punctuation 3647 . 3648) (symbol 3642 . 3646) (symbol 3633 . 3638) (punctuation 3632 . 3633) (punctuation 3617 . 3618) (punctuation 3616 . 3617) (symbol 3607 . 3615) (punctuation 3605 . 3606) (punctuation 3604 . 3605) (string 3591 . 3603) (punctuation 3589 . 3590) (punctuation 3588 . 3589) (symbol 3583 . 3587) (punctuation 3582 . 3583) (punctuation 3581 . 3582) (symbol 3578 . 3581) (symbol 3570 . 3575) (symbol 3564 . 3569) (punctuation 3563 . 3564) (punctuation 3532 . 3533) (close-paren 3531 . 3532) (symbol 3522 . 3531) (open-paren 3521 . 3522) (symbol 3512 . 3521) (punctuation 3511 . 3512) (symbol 3504 . 3511) (punctuation 3499 . 3500) (close-paren 3498 . 3499) (symbol 3493 . 3498) (open-paren 3492 . 3493) (CHAR 3488 . 3492) (symbol 3484 . 3487) (punctuation 3482 . 3483) (symbol 3472 . 3481) (punctuation 3471 . 3472) (CHAR 3466 . 3470) (symbol 3457 . 3462) (punctuation 3456 . 3457) (punctuation 3441 . 3442) (punctuation 3440 . 3441) (symbol 3434 . 3439) (punctuation 3432 . 3433) (punctuation 3431 . 3432) (string 3421 . 3430) (punctuation 3419 . 3420) (punctuation 3418 . 3419) (symbol 3413 . 3417) (punctuation 3412 . 3413) (punctuation 3411 . 3412) (symbol 3408 . 3411) (punctuation 3393 . 3394) (punctuation 3392 . 3393) (string 3382 . 3391) (punctuation 3380 . 3381) (punctuation 3379 . 3380) (symbol 3374 . 3378) (punctuation 3373 . 3374) (punctuation 3372 . 3373) (symbol 3369 . 3372) (symbol 3361 . 3366) (symbol 3355 . 3360) (punctuation 3354 . 3355) (open-paren 3350 . 3351) (close-paren 3348 . 3349) (open-paren 3347 . 3348) (symbol 3343 . 3347) (punctuation 3342 . 3343) (punctuation 3341 . 3342) (punctuation 3340 . 3341) (symbol 3339 . 3340) (punctuation 3338 . 3339) (symbol 3328 . 3338) (VOID 3323 . 3327) (punctuation 3321 . 3322) (symbol 3320 . 3321) (CLASS 3314 . 3319) (punctuation 3313 . 3314) (TEMPLATE 3305 . 3313) (close-paren 3236 . 3237) (punctuation 3234 . 3235) (close-paren 3233 . 3234) (close-paren 3232 . 3233) (open-paren 3231 . 3232) (symbol 3225 . 3231) (punctuation 3223 . 3224) (close-paren 3222 . 3223) (open-paren 3221 . 3222) (symbol 3218 . 3221) (punctuation 3217 . 3218) (symbol 3210 . 3217) (punctuation 3208 . 3209) (close-paren 3207 . 3208) (open-paren 3206 . 3207) (symbol 3201 . 3206) (punctuation 3200 . 3201) (symbol 3193 . 3200) (open-paren 3192 . 3193) (symbol 3184 . 3192) (punctuation 3183 . 3184) (punctuation 3182 . 3183) (symbol 3179 . 3182) (open-paren 3175 . 3176) (close-paren 3173 . 3174) (open-paren 3172 . 3173) (symbol 3162 . 3172) (punctuation 3161 . 3162) (punctuation 3160 . 3161) (punctuation 3159 . 3160) (punctuation 3158 . 3159) (symbol 3157 . 3158) (punctuation 3156 . 3157) (symbol 3146 . 3156) (punctuation 3144 . 3145) (symbol 3143 . 3144) (CLASS 3137 . 3142) (punctuation 3136 . 3137) (TEMPLATE 3128 . 3136) (close-paren 3059 . 3060) (punctuation 3052 . 3053) (punctuation 3051 . 3052) (symbol 3046 . 3051) (punctuation 3045 . 3046) (punctuation 3044 . 3045) (string 3033 . 3044) (punctuation 3032 . 3033) (punctuation 3031 . 3032) (symbol 3026 . 3031) (punctuation 3025 . 3026) (symbol 3020 . 3025) (punctuation 3019 . 3020) (punctuation 3018 . 3019) (string 3004 . 3018) (punctuation 3003 . 3004) (punctuation 3002 . 3003) (symbol 2998 . 3002) (close-paren 2994 . 2995) (punctuation 2984 . 2985) (punctuation 2983 . 2984) (symbol 2982 . 2983) (punctuation 2980 . 2981) (symbol 2978 . 2979) (punctuation 2966 . 2967) (punctuation 2965 . 2966) (punctuation 2952 . 2953) (punctuation 2951 . 2952) (symbol 2940 . 2950) (open-paren 2934 . 2935) (close-paren 2933 . 2934) (symbol 2928 . 2933) (punctuation 2927 . 2928) (punctuation 2926 . 2927) (symbol 2925 . 2926) (open-paren 2924 . 2925) (WHILE 2919 . 2924) (open-paren 2831 . 2832) (close-paren 2829 . 2830) (open-paren 2828 . 2829) (symbol 2824 . 2828) (punctuation 2823 . 2824) (punctuation 2822 . 2823) (punctuation 2821 . 2822) (symbol 2820 . 2821) (punctuation 2819 . 2820) (symbol 2809 . 2819) (VOID 2804 . 2808) (punctuation 2802 . 2803) (symbol 2801 . 2802) (CLASS 2795 . 2800) (punctuation 2794 . 2795) (TEMPLATE 2786 . 2794) (close-paren 2717 . 2718) (close-paren 2715 . 2716) (punctuation 2701 . 2702) (punctuation 2700 . 2701) (symbol 2696 . 2700) (close-paren 2690 . 2691) (punctuation 2678 . 2679) (punctuation 2677 . 2678) (symbol 2673 . 2677) (punctuation 2671 . 2672) (symbol 2666 . 2670) (punctuation 2655 . 2656) (close-paren 2653 . 2654) (symbol 2652 . 2653) (open-paren 2651 . 2652) (punctuation 2650 . 2651) (punctuation 2649 . 2650) (symbol 2645 . 2649) (punctuation 2644 . 2645) (symbol 2628 . 2644) (punctuation 2626 . 2627) (symbol 2620 . 2625) (punctuation 2619 . 2620) (punctuation 2618 . 2619) (symbol 2614 . 2618) (open-paren 2606 . 2607) (close-paren 2600 . 2601) (symbol 2599 . 2600) (punctuation 2598 . 2599) (punctuation 2597 . 2598) (punctuation 2589 . 2590) (symbol 2588 . 2589) (punctuation 2587 . 2588) (symbol 2586 . 2587) (open-paren 2567 . 2568) (FOR 2564 . 2567) (punctuation 2540 . 2541) (close-paren 2539 . 2540) (symbol 2538 . 2539) (open-paren 2537 . 2538) (punctuation 2536 . 2537) (punctuation 2535 . 2536) (symbol 2531 . 2535) (punctuation 2530 . 2531) (symbol 2514 . 2530) (punctuation 2512 . 2513) (symbol 2506 . 2511) (open-paren 2472 . 2473) (ELSE 2465 . 2469) (close-paren 2461 . 2462) (punctuation 2449 . 2450) (punctuation 2448 . 2449) (symbol 2443 . 2448) (punctuation 2437 . 2438) (close-paren 2436 . 2437) (symbol 2435 . 2436) (open-paren 2434 . 2435) (punctuation 2433 . 2434) (punctuation 2432 . 2433) (symbol 2428 . 2432) (punctuation 2427 . 2428) (symbol 2411 . 2427) (punctuation 2409 . 2410) (symbol 2403 . 2408) (open-paren 2376 . 2377) (close-paren 2372 . 2373) (symbol 2367 . 2372) (punctuation 2366 . 2367) (punctuation 2365 . 2366) (symbol 2364 . 2365) (open-paren 2363 . 2364) (IF 2361 . 2363) (symbol 2352 . 2357) (punctuation 2351 . 2352) (punctuation 2347 . 2348) (string 2333 . 2347) (punctuation 2332 . 2333) (punctuation 2331 . 2332) (symbol 2326 . 2330) (punctuation 2325 . 2326) (punctuation 2324 . 2325) (symbol 2321 . 2324) (symbol 2313 . 2318) (symbol 2307 . 2312) (punctuation 2306 . 2307) (open-paren 2302 . 2303) (close-paren 2300 . 2301) (symbol 2299 . 2300) (symbol 2292 . 2298) (punctuation 2290 . 2291) (symbol 2289 . 2290) (punctuation 2288 . 2289) (VOID 2283 . 2287) (open-paren 2282 . 2283) (symbol 2272 . 2282) (punctuation 2271 . 2272) (punctuation 2270 . 2271) (punctuation 2269 . 2270) (symbol 2268 . 2269) (punctuation 2267 . 2268) (symbol 2257 . 2267) (VOID 2252 . 2256) (punctuation 2250 . 2251) (symbol 2249 . 2250) (CLASS 2243 . 2248) (punctuation 2242 . 2243) (TEMPLATE 2234 . 2242) (close-paren 2165 . 2166) (close-paren 2163 . 2164) (close-paren 2159 . 2160) (punctuation 2136 . 2137) (close-paren 2135 . 2136) (open-paren 2134 . 2135) (symbol 2130 . 2134) (symbol 2117 . 2122) (punctuation 2116 . 2117) (punctuation 2108 . 2109) (string 2105 . 2108) (punctuation 2104 . 2105) (punctuation 2103 . 2104) (symbol 2098 . 2102) (punctuation 2097 . 2098) (punctuation 2096 . 2097) (symbol 2093 . 2096) (symbol 2081 . 2086) (symbol 2075 . 2080) (punctuation 2074 . 2075) (open-paren 2066 . 2067) (ELSE 2057 . 2061) (close-paren 2051 . 2052) (punctuation 2039 . 2040) (punctuation 2038 . 2039) (symbol 2037 . 2038) (punctuation 2035 . 2036) (symbol 2033 . 2034) (open-paren 1946 . 1947) (close-paren 1940 . 1941) (symbol 1934 . 1939) (punctuation 1933 . 1934) (punctuation 1932 . 1933) (symbol 1931 . 1932) (open-paren 1929 . 1930) (IF 1926 . 1928) (close-paren 1920 . 1921) (RETURN 1904 . 1910) (punctuation 1883 . 1884) (punctuation 1882 . 1883) (symbol 1881 . 1882) (close-paren 1872 . 1873) (punctuation 1858 . 1859) (punctuation 1857 . 1858) (symbol 1853 . 1857) (punctuation 1851 . 1852) (symbol 1846 . 1850) (open-paren 1836 . 1837) (close-paren 1828 . 1829) (symbol 1827 . 1828) (punctuation 1826 . 1827) (punctuation 1825 . 1826) (punctuation 1817 . 1818) (symbol 1816 . 1817) (punctuation 1815 . 1816) (symbol 1814 . 1815) (open-paren 1795 . 1796) (FOR 1791 . 1794) (punctuation 1777 . 1778) (punctuation 1776 . 1777) (symbol 1775 . 1776) (punctuation 1773 . 1774) (symbol 1769 . 1772) (punctuation 1767 . 1768) (symbol 1762 . 1766) (punctuation 1732 . 1733) (string 1729 . 1732) (punctuation 1728 . 1729) (punctuation 1727 . 1728) (symbol 1722 . 1726) (punctuation 1721 . 1722) (punctuation 1720 . 1721) (symbol 1717 . 1720) (open-paren 1682 . 1683) (close-paren 1676 . 1677) (close-paren 1675 . 1676) (symbol 1670 . 1675) (punctuation 1669 . 1670) (symbol 1668 . 1669) (punctuation 1666 . 1667) (symbol 1661 . 1666) (punctuation 1660 . 1661) (punctuation 1659 . 1660) (symbol 1658 . 1659) (open-paren 1657 . 1658) (symbol 1633 . 1657) (open-paren 1632 . 1633) (IF 1630 . 1632) (open-paren 1624 . 1625) (close-paren 1620 . 1621) (number 1619 . 1620) (open-paren 1618 . 1619) (WHILE 1613 . 1618) (punctuation 1609 . 1610) (close-paren 1608 . 1609) (number 1607 . 1608) (punctuation 1606 . 1607) (symbol 1601 . 1606) (punctuation 1600 . 1601) (symbol 1599 . 1600) (open-paren 1598 . 1599) (punctuation 1597 . 1598) (symbol 1592 . 1597) (punctuation 1590 . 1591) (symbol 1588 . 1589) (close-paren 1586 . 1587) (symbol 1581 . 1586) (punctuation 1580 . 1581) (symbol 1579 . 1580) (open-paren 1578 . 1579) (IF 1576 . 1578) (punctuation 1515 . 1516) (punctuation 1514 . 1515) (symbol 1512 . 1513) (punctuation 1510 . 1511) (punctuation 1509 . 1510) (string 1476 . 1508) (punctuation 1474 . 1475) (punctuation 1473 . 1474) (symbol 1468 . 1472) (punctuation 1467 . 1468) (punctuation 1466 . 1467) (symbol 1463 . 1466) (open-paren 1440 . 1441) (close-paren 1438 . 1439) (symbol 1437 . 1438) (symbol 1430 . 1436) (open-paren 1429 . 1430) (symbol 1421 . 1429) (punctuation 1420 . 1421) (punctuation 1419 . 1420) (close-paren 1418 . 1419) (symbol 1417 . 1418) (punctuation 1416 . 1417) (symbol 1406 . 1416) (punctuation 1404 . 1405) (VOID 1400 . 1404) (close-paren 1398 . 1399) (symbol 1397 . 1398) (CLASS 1391 . 1396) (punctuation 1390 . 1391) (TEMPLATE 1382 . 1390) (close-paren 1313 . 1314) (RETURN 1303 . 1309) (symbol 1294 . 1299) (punctuation 1293 . 1294) (punctuation 1278 . 1279) (punctuation 1277 . 1278) (symbol 1275 . 1276) (punctuation 1273 . 1274) (punctuation 1272 . 1273) (string 1264 . 1271) (punctuation 1262 . 1263) (punctuation 1261 . 1262) (symbol 1256 . 1260) (punctuation 1255 . 1256) (punctuation 1254 . 1255) (symbol 1251 . 1254) (symbol 1243 . 1248) (symbol 1237 . 1242) (punctuation 1236 . 1237) (punctuation 1231 . 1232) (close-paren 1230 . 1231) (symbol 1229 . 1230) (open-paren 1228 . 1229) (punctuation 1227 . 1228) (punctuation 1226 . 1227) (symbol 1224 . 1225) (punctuation 1223 . 1224) (symbol 1207 . 1223) (punctuation 1205 . 1206) (symbol 1203 . 1204) (punctuation 1201 . 1202) (symbol 1200 . 1201) (symbol 1191 . 1196) (punctuation 1190 . 1191) (punctuation 1175 . 1176) (punctuation 1174 . 1175) (symbol 1168 . 1173) (punctuation 1166 . 1167) (punctuation 1165 . 1166) (string 1153 . 1164) (punctuation 1151 . 1152) (punctuation 1150 . 1151) (symbol 1145 . 1149) (punctuation 1144 . 1145) (punctuation 1143 . 1144) (symbol 1140 . 1143) (punctuation 1125 . 1126) (punctuation 1124 . 1125) (symbol 1122 . 1123) (punctuation 1120 . 1121) (punctuation 1119 . 1120) (string 1111 . 1118) (punctuation 1109 . 1110) (punctuation 1108 . 1109) (symbol 1103 . 1107) (punctuation 1102 . 1103) (punctuation 1101 . 1102) (symbol 1098 . 1101) (symbol 1090 . 1095) (symbol 1084 . 1089) (punctuation 1083 . 1084) (punctuation 1073 . 1074) (punctuation 1072 . 1073) (symbol 1067 . 1072) (punctuation 1065 . 1066) (symbol 1059 . 1064) (close-paren 1033 . 1034) (punctuation 1027 . 1028) (close-paren 1026 . 1027) (open-paren 1025 . 1026) (symbol 1021 . 1025) (open-paren 1013 . 1014) (close-paren 1007 . 1008) (symbol 1002 . 1007) (punctuation 1001 . 1002) (open-paren 1000 . 1001) (WHILE 994 . 999) (symbol 929 . 934) (punctuation 928 . 929) (punctuation 913 . 914) (punctuation 912 . 913) (symbol 906 . 911) (punctuation 904 . 905) (punctuation 903 . 904) (string 891 . 902) (punctuation 889 . 890) (punctuation 888 . 889) (symbol 883 . 887) (punctuation 882 . 883) (punctuation 881 . 882) (symbol 878 . 881) (punctuation 863 . 864) (punctuation 862 . 863) (string 837 . 861) (punctuation 835 . 836) (punctuation 834 . 835) (symbol 829 . 833) (punctuation 828 . 829) (punctuation 827 . 828) (symbol 824 . 827) (symbol 816 . 821) (symbol 810 . 815) (punctuation 809 . 810) (open-paren 805 . 806) (close-paren 803 . 804) (open-paren 802 . 803) (symbol 794 . 802) (punctuation 793 . 794) (punctuation 792 . 793) (close-paren 791 . 792) (symbol 790 . 791) (punctuation 789 . 790) (symbol 779 . 789) (punctuation 777 . 778) (symbol 776 . 777) (close-paren 774 . 775) (symbol 773 . 774) (CLASS 767 . 772) (punctuation 766 . 767) (TEMPLATE 757 . 765) (close-paren 688 . 689) (punctuation 674 . 675) (punctuation 673 . 674) (symbol 672 . 673) (close-paren 668 . 669) (punctuation 658 . 659) (punctuation 657 . 658) (symbol 656 . 657) (punctuation 654 . 655) (symbol 652 . 653) (punctuation 585 . 586) (punctuation 584 . 585) (symbol 583 . 584) (open-paren 577 . 578) (close-paren 573 . 574) (symbol 572 . 573) (punctuation 571 . 572) (punctuation 570 . 571) (punctuation 558 . 559) (symbol 557 . 558) (open-paren 545 . 546) (FOR 542 . 545) (punctuation 538 . 539) (close-paren 537 . 538) (semantic-list 535 . 537) (symbol 530 . 535) (punctuation 529 . 530) (symbol 522 . 529) (punctuation 521 . 522) (open-paren 520 . 521) (punctuation 519 . 520) (punctuation 518 . 519) (symbol 513 . 517) (punctuation 512 . 513) (symbol 496 . 512) (punctuation 494 . 495) (symbol 492 . 493) (punctuation 490 . 491) (symbol 484 . 489) (punctuation 469 . 470) (close-paren 468 . 469) (semantic-list 461 . 468) (CHAR 457 . 461) (symbol 453 . 456) (open-paren 452 . 453) (symbol 443 . 452) (punctuation 442 . 443) (symbol 435 . 442) (punctuation 420 . 421) (punctuation 419 . 420) (symbol 413 . 418) (punctuation 411 . 412) (punctuation 410 . 411) (string 400 . 409) (punctuation 398 . 399) (punctuation 397 . 398) (symbol 392 . 396) (punctuation 391 . 392) (punctuation 390 . 391) (symbol 387 . 390) (symbol 379 . 384) (punctuation 378 . 379) (punctuation 363 . 364) (punctuation 362 . 363) (string 335 . 361) (punctuation 333 . 334) (punctuation 332 . 333) (symbol 327 . 331) (punctuation 326 . 327) (punctuation 325 . 326) (symbol 322 . 325) (symbol 314 . 319) (symbol 308 . 313) (punctuation 307 . 308) (open-paren 303 . 304) (close-paren 301 . 302) (close-paren 300 . 301) (symbol 299 . 300) (open-paren 298 . 299) (SIZEOF 292 . 298) (punctuation 290 . 291) (close-paren 288 . 289) (symbol 284 . 288) (open-paren 283 . 284) (SIZEOF 277 . 283) (punctuation 275 . 276) (close-paren 273 . 274) (symbol 272 . 273) (open-paren 271 . 272) (SIZEOF 265 . 271) (punctuation 263 . 264) (close-paren 261 . 262) (symbol 257 . 261) (open-paren 256 . 257) (SIZEOF 250 . 256) (open-paren 249 . 250) (symbol 244 . 249) (punctuation 240 . 241) (close-paren 239 . 240) (close-paren 238 . 239) (symbol 237 . 238) (open-paren 236 . 237) (SIZEOF 230 . 236) (punctuation 229 . 230) (symbol 220 . 229) (punctuation 218 . 219) (close-paren 216 . 217) (symbol 212 . 216) (open-paren 211 . 212) (SIZEOF 205 . 211) (punctuation 203 . 204) (symbol 193 . 202) (punctuation 191 . 192) (close-paren 189 . 190) (symbol 188 . 189) (open-paren 187 . 188) (SIZEOF 181 . 187) (punctuation 179 . 180) (close-paren 177 . 178) (symbol 173 . 177) (open-paren 172 . 173) (SIZEOF 166 . 172) (open-paren 165 . 166) (symbol 160 . 165) (punctuation 156 . 157) (close-paren 155 . 156) (open-paren 154 . 155) (symbol 144 . 154) (punctuation 143 . 144) (punctuation 142 . 143) (close-paren 141 . 142) (symbol 140 . 141) (punctuation 139 . 140) (symbol 129 . 139) (close-paren 127 . 128) (symbol 126 . 127) (CLASS 120 . 125) (punctuation 119 . 120) (TEMPLATE 110 . 118))
    )
   )
  )
