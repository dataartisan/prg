#!/bin/sh
# the next line restarts using tcl \
exec tclsh "$0" "$@"

###################################
# Usage: makeTestCase.tc InputFile OutputFile
###################################


if {[expr $argc < 2]} {
    puts "ERROR: too few arguments"
    puts "Usage: makeTestCase.tc InputFile OutputFile"
    return
} elseif {[expr $argc > 2]} {
    puts "ERROR: too many arguments"
    puts "Usage: makeTestCase.tc InputFile OutputFile"
    return
}
#So far everithing is ok

set arg1 [lindex $argv 0]
set arg2 [lindex $argv 1]

#puts "Program: $argv0"
#puts "Number of arguments: $argc"
#set i 0
#foreach arg $argv {
#    puts "Arg $i: $arg"
#    incr i
#}

proc writeHeader {fileOut} {
    puts "############################################################################"
    puts "#"
    puts "    set testInfo(desc) \"Regression Tests\""
    puts "    set testInfo(keywords) {search keyword}"
    puts "    set testInfo(author) team"
    puts "############################################################################"
    puts "# Enter variables that you want to be prompted for at runtime"
    puts ""
    puts "set host \"155.132.113.221\" ;# Which host to use"
    puts "set uid \"USER05\" ;# What UID to use"
    puts "set pid \"LEVEL_5\" ;# What PID to use"
    puts "set iterate \"1\" ;# How many iterations"
    puts "set delay \"3000\" ;# Delay between TL1 commands"
    puts "set check_response \"0\" ;# Non zero will check RTRV response data"
    puts "set swLoad \"E02.03.00\" ;"
    puts ""
    puts ""
    puts "############################################################################"
    puts ""
    puts "source utilproc.tc"
    puts ""
    puts "set favoriteHostName \$host"
    puts "set testInfo(swLoad) \$swLoad"
    puts "OPEN tcp \$host pt 3082"
    puts "getTester"
    puts "putTestInfo pt"
    puts "if !\[TL1 pt \"act-user::\${uid}:::\${pid}\"\] { failScript }"
    puts "msleep 2000"
    puts ""
    puts "#####   Enter Your TL1 commands, etc... here  ########"
    puts ""
    puts "setOption tl1-delay \$delay"
################################################################################
    puts $fileOut "############################################################################"
    puts $fileOut "#"
    puts $fileOut "    set testInfo(desc) \"Regression Tests\""
    puts $fileOut "    set testInfo(keywords) {search keyword}"
    puts $fileOut "    set testInfo(author) team"
    puts $fileOut "############################################################################"
    puts $fileOut "# Enter variables that you want to be prompted for at runtime"
    puts $fileOut ""
    puts $fileOut "set host \"155.132.113.221\" ;# Which host to use"
    puts $fileOut "set uid \"USER05\" ;# What UID to use"
    puts $fileOut "set pid \"LEVEL_5\" ;# What PID to use"
    puts $fileOut "set iterate \"1\" ;# How many iterations"
    puts $fileOut "set delay \"3000\" ;# Delay between TL1 commands"
    puts $fileOut "set check_response \"0\" ;# Non zero will check RTRV response data"
    puts $fileOut "set swLoad \"E02.03.00\" ;"
    puts $fileOut ""
    puts $fileOut ""
    puts $fileOut "############################################################################"
    puts $fileOut ""
    puts $fileOut "source utilproc.tc"
    puts $fileOut ""
    puts $fileOut "set favoriteHostName \$host"
    puts $fileOut "set testInfo(swLoad) \$swLoad"
    puts $fileOut "OPEN tcp \$host pt 3082"
    puts $fileOut "getTester"
    puts $fileOut "putTestInfo pt"
    puts $fileOut "if !\[TL1 pt \"act-user::\${uid}:::\${pid}\"\] { failScript }"
    puts $fileOut "msleep 2000"
    puts $fileOut ""
    puts $fileOut "#####   Enter Your TL1 commands, etc... here  ########"
    puts $fileOut ""
    puts $fileOut "setOption tl1-delay \$delay"
}

proc writeBanner {tl1Command testName testNumber testIFResult  testDescription testReqTag  testCrNumber  fileOut} {
    puts "bannerBegin pt \"$testName TEST\" \"$testName-$testNumber\" \"$testDescription\" "
    puts "set testInfo(result) \"PASS\" "
    puts ""
    puts "if !\[TL1 pt \"$tl1Command\" $testIFResult\] {"
    puts " set testInfo(result) \"FAIL\" "
    puts "}"
    puts "set testInfo(SWITTag) \"$testName-$testNumber\""
    puts "set testInfo(reqTag) \"$testReqTag\" "
    puts "set testInfo(crNumber) \"$testCrNumber\" "
    puts "putResults pt"
    puts "bannerEnd pt \"$testName TEST\" \"$testName-$testNumber\" "
################################################################################
    puts $fileOut "bannerBegin pt \"$testName TEST\" \"$testName-$testNumber\" \"$testDescription\" "
    puts $fileOut "set testInfo(result) \"PASS\" "
    puts $fileOut ""
    puts $fileOut "if !\[TL1 pt \"$tl1Command\" $testIFResult\] {"
    puts $fileOut " set testInfo(result) \"FAIL\" "
    puts $fileOut "}"
    puts $fileOut "set testInfo(SWITTag) \"$testName-$testNumber\""
    puts $fileOut "set testInfo(reqTag) \"$testReqTag\" "
    puts $fileOut "set testInfo(crNumber) \"$testCrNumber\" "
    puts $fileOut "putResults pt"
    puts $fileOut "bannerEnd pt \"$testName TEST\" \"$testName-$testNumber\" "
#    puts $fileOut "setOption tl1-timeout 600000"
    puts $fileOut ""
    puts $fileOut ""
}

proc readFile { strFileIn strFileOut } {
    if ![file exists $strFileIn] {
        puts "The input file $strFileIn does not exist"
        return 
    } 
    set fileIn [open $strFileIn]
    set fileOut [open $strFileOut w]
    set testNumber 0
    set resRead [gets $fileIn line]
    writeHeader $fileOut
    while {[expr ($resRead >= 0) ]} {
        #	set fileSize [file size $line]
        #	puts $fileOut "$line are dimensiunea de $fileSize  bytes... [expr ($fileSize/1024.0)] kbytes"
        #	puts "$line are dimensiunea de $fileSize  bytes... [expr ($fileSize/1024.0)] kbytes"
        #   set alist [split $line]
        #   puts "$alist OLAA! [llength $alist]"
        set nOK 1
        while {($nOK != 0) && ($resRead >= 0)} {
            set nOK 0
            #   puts "nOK"
            if {[expr [string equal "[string index [string trim $line] 0]" "\#"]]} {
                #puts "Comentariu ... $line"
                set strComentariu $line
                set resRead [gets $fileIn line]
                set nOK 1
                #puts " OK1"
            }
            if {[expr [string equal "[string trim $line]" ""]]} {
                #puts "Blank ... $line"
                #set strComentariu $line
                set resRead [gets $fileIn line]
                set nOK 1
                #puts "OK2"
            }
        }
        if {[expr ($resRead >= 0)] } {
            set tl1Command [string range [string trim $line] 0 end-1]
            #	puts -nonewline "$tl1Comm\|"
            #	puts "[string range [string trim $line] 0 end-1]"
            puts ""
            set testNumber [expr ($testNumber + 1)]
            writeBanner $tl1Command "SWIT" $testNumber "COMPLD" [string trim [string range [string trim $strComentariu] 1 end] ] "" "" $fileOut
            puts ""
        }
        set resRead [gets $fileIn line] 
    }
    close $fileIn
    close $fileOut
    
    return
}

readFile $arg1 $arg2


# Tcl script to echo command line arguments

# set a $1
# puts "$a ... hr hr hr "
#set arg1 [lindex $argv 0]
#puts "primul parametru: $arg1 ..."

################################
# set i 0
# while {$i<4} {
#     puts "$i*$i is [expr $i*$i]"
#     incr i
# }
# ################################
# proc sum {args} {
#     set result 0
#     foreach n $args {
# 	set result [expr ($result + $n)]
#     }
# }

# proc citesteVal {} {
#     puts -nonewline "Introdu valoarea:"
#     flush stdout
#     set answer [gets stdin]
#     return $answer
# }
################################
# set fileId [open ./ls.dum r]
# while {[gets $fileId line] >=0} {
#     puts $line
# }
# close $fileId
